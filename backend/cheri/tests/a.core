{-
proc f() : eff loaded integer :=
  pure(42)

fun main() : ctype :=
--  let (ty: ctype, tys: [ctype], b1: boolean, b2: boolean) =
--    Cfunction(f) in
--  let x: integer = 42 in
--  let y: integer = x in y + 10
--  ty
--    Specified(Cfunction(f))
    Cfunction(f)
-}

proc main() : eff integer :=
  let n: integer = 0 in
  if False then
    pure (1 / n)
  else
    pure(42)
{-
pure(
  let (x: integer, (y: integer, z: integer)) = (1, (undef(<<DUMMY(WIP)>>), undef(<<DUMMY(WIP2)>>))) in
  x+y+z
)
-}