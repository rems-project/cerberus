cn_statements: WHILE
##
## Ends in an error in state: 0.
##
## cn_statements' -> . cn_statements [ # ]
##
## The known suffix of the stack is as follows:
##
##

You're inside a function - so I'm expecting a CN statement.
Hint: these start with 'extract', 'instantiate', 'split_case', 'assert', 'print', 'apply'.

cn_statements: INLINE WHILE
##
## Ends in an error in state: 1.
##
## cn_statement -> INLINE . loption(separated_nonempty_list(COMMA,cn_variable)) SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## INLINE
##

parsing "cn_statement": seen "INLINE", expecting "loption(separated_nonempty_list(COMMA,cn_variable)) SEMICOLON"

cn_statements: INLINE UNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 4.
##
## separated_nonempty_list(COMMA,cn_variable) -> UNAME VARIABLE COMMA . separated_nonempty_list(COMMA,cn_variable) [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE COMMA
##

parsing "separated_nonempty_list(COMMA,cn_variable)": seen "UNAME VARIABLE COMMA", expecting "separated_nonempty_list(COMMA,cn_variable)"

cn_statements: INLINE LNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 7.
##
## separated_nonempty_list(COMMA,cn_variable) -> LNAME VARIABLE COMMA . separated_nonempty_list(COMMA,cn_variable) [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE COMMA
##

parsing "separated_nonempty_list(COMMA,cn_variable)": seen "LNAME VARIABLE COMMA", expecting "separated_nonempty_list(COMMA,cn_variable)"

cn_statements: INLINE LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 10.
##
## separated_nonempty_list(COMMA,cn_variable) -> LNAME TYPE COMMA . separated_nonempty_list(COMMA,cn_variable) [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE COMMA
##

parsing "separated_nonempty_list(COMMA,cn_variable)": seen "LNAME TYPE COMMA", expecting "separated_nonempty_list(COMMA,cn_variable)"

cn_statements: INLINE UNAME TYPE COMMA WHILE
##
## Ends in an error in state: 14.
##
## separated_nonempty_list(COMMA,cn_variable) -> UNAME TYPE COMMA . separated_nonempty_list(COMMA,cn_variable) [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE COMMA
##

parsing "separated_nonempty_list(COMMA,cn_variable)": seen "UNAME TYPE COMMA", expecting "separated_nonempty_list(COMMA,cn_variable)"

cn_statements: CN_UNPACK WHILE
##
## Ends in an error in state: 19.
##
## cn_statement -> CN_UNPACK . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNPACK
##

parsing "cn_statement": seen "CN_UNPACK", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_PACK UNAME WHILE
##
## Ends in an error in state: 20.
##
## pred -> UNAME . VARIABLE [ LPAREN ]
##
## The known suffix of the stack is as follows:
## UNAME
##

parsing "pred": seen "UNAME", expecting "VARIABLE"

cn_statements: CN_EXTRACT CN_OWNED LT WHILE
##
## Ends in an error in state: 23.
##
## pred -> CN_OWNED LT . ctype GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_OWNED LT
##

parsing "pred": seen "CN_OWNED LT", expecting "ctype GT"

translation_unit: UNAME WHILE
##
## Ends in an error in state: 28.
##
## typedef_name -> UNAME . TYPE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## UNAME
##

parsing "typedef_name": seen "UNAME", expecting "TYPE"

translation_unit: ALIGNAS LPAREN VA_START WHILE
##
## Ends in an error in state: 32.
##
## postfix_expression -> VA_START . LPAREN assignment_expression COMMA general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_START
##

parsing "postfix_expression": seen "VA_START", expecting "LPAREN assignment_expression COMMA general_identifier RPAREN"

translation_unit: ALIGNAS LPAREN VA_START LPAREN WHILE
##
## Ends in an error in state: 33.
##
## postfix_expression -> VA_START LPAREN . assignment_expression COMMA general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_START LPAREN
##

parsing "postfix_expression": seen "VA_START LPAREN", expecting "assignment_expression COMMA general_identifier RPAREN"

translation_unit: ALIGNAS LPAREN VA_END WHILE
##
## Ends in an error in state: 34.
##
## postfix_expression -> VA_END . LPAREN assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_END
##

parsing "postfix_expression": seen "VA_END", expecting "LPAREN assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN VA_END LPAREN WHILE
##
## Ends in an error in state: 35.
##
## postfix_expression -> VA_END LPAREN . assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_END LPAREN
##

parsing "postfix_expression": seen "VA_END LPAREN", expecting "assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN VA_COPY WHILE
##
## Ends in an error in state: 36.
##
## postfix_expression -> VA_COPY . LPAREN assignment_expression COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_COPY
##

parsing "postfix_expression": seen "VA_COPY", expecting "LPAREN assignment_expression COMMA assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN VA_COPY LPAREN WHILE
##
## Ends in an error in state: 37.
##
## postfix_expression -> VA_COPY LPAREN . assignment_expression COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_COPY LPAREN
##

parsing "postfix_expression": seen "VA_COPY LPAREN", expecting "assignment_expression COMMA assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN VA_ARG WHILE
##
## Ends in an error in state: 38.
##
## postfix_expression -> VA_ARG . LPAREN assignment_expression COMMA type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_ARG
##

parsing "postfix_expression": seen "VA_ARG", expecting "LPAREN assignment_expression COMMA type_name RPAREN"

translation_unit: ALIGNAS LPAREN VA_ARG LPAREN WHILE
##
## Ends in an error in state: 39.
##
## postfix_expression -> VA_ARG LPAREN . assignment_expression COMMA type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_ARG LPAREN
##

parsing "postfix_expression": seen "VA_ARG LPAREN", expecting "assignment_expression COMMA type_name RPAREN"

translation_unit: STATIC_ASSERT LPAREN UNAME WHILE
##
## Ends in an error in state: 40.
##
## var_name -> UNAME . VARIABLE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME
##

parsing "var_name": seen "UNAME", expecting "VARIABLE"

translation_unit: ALIGNAS LPAREN PRINT_TYPE WHILE
##
## Ends in an error in state: 46.
##
## postfix_expression -> PRINT_TYPE . LPAREN expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## PRINT_TYPE
##

parsing "postfix_expression": seen "PRINT_TYPE", expecting "LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN PRINT_TYPE LPAREN WHILE
##
## Ends in an error in state: 47.
##
## postfix_expression -> PRINT_TYPE LPAREN . expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## PRINT_TYPE LPAREN
##

parsing "postfix_expression": seen "PRINT_TYPE LPAREN", expecting "expression RPAREN"

translation_unit: ALIGNAS LPAREN PLUS_PLUS WHILE
##
## Ends in an error in state: 48.
##
## unary_expression -> PLUS_PLUS . unary_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## PLUS_PLUS
##

parsing "unary_expression": seen "PLUS_PLUS", expecting "unary_expression"

translation_unit: ALIGNAS LPAREN OFFSETOF WHILE
##
## Ends in an error in state: 50.
##
## postfix_expression -> OFFSETOF . LPAREN type_name COMMA general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF
##

parsing "postfix_expression": seen "OFFSETOF", expecting "LPAREN type_name COMMA general_identifier RPAREN"

translation_unit: ALIGNAS LPAREN OFFSETOF LPAREN WHILE
##
## Ends in an error in state: 51.
##
## postfix_expression -> OFFSETOF LPAREN . type_name COMMA general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN
##

parsing "postfix_expression": seen "OFFSETOF LPAREN", expecting "type_name COMMA general_identifier RPAREN"

translation_unit: LNAME WHILE
##
## Ends in an error in state: 57.
##
## typedef_name -> LNAME . TYPE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LNAME
##

parsing "typedef_name": seen "LNAME", expecting "TYPE"

translation_unit: LBRACK_LBRACK VA_START
##
## Ends in an error in state: 65.
##
## attribute_specifier -> LBRACK_LBRACK . attribute_list RBRACK RBRACK [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE IF GT GOTO GENERIC FOR FLOAT EXTERN EQ ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX COMMA COLON CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACK_LBRACK
##

parsing "attribute_specifier": seen "LBRACK_LBRACK", expecting "attribute_list RBRACK RBRACK"

translation_unit: LBRACK_LBRACK ALIGNAS COLON_COLON ALIGNAS WHILE
##
## Ends in an error in state: 113.
##
## attribute -> attribute_token . option(attribute_argument_clause) [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_token
##

parsing "attribute": seen "attribute_token", expecting "option(attribute_argument_clause)"

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN WHILE
##
## Ends in an error in state: 114.
##
## attribute_argument_clause -> LPAREN . balanced_token_sequence RPAREN [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

parsing "attribute_argument_clause": seen "LPAREN", expecting "balanced_token_sequence RPAREN"

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN LPAREN WHILE
##
## Ends in an error in state: 115.
##
## balanced_token -> LPAREN . balanced_token_sequence RPAREN [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

parsing "balanced_token": seen "LPAREN", expecting "balanced_token_sequence RPAREN"

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN LBRACK WHILE
##
## Ends in an error in state: 116.
##
## balanced_token -> LBRACK . balanced_token_sequence RBRACK [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

parsing "balanced_token": seen "LBRACK", expecting "balanced_token_sequence RBRACK"

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN LBRACE WHILE
##
## Ends in an error in state: 117.
##
## balanced_token -> LBRACE . balanced_token_sequence RBRACE [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "balanced_token": seen "LBRACE", expecting "balanced_token_sequence RBRACE"

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 124.
##
## separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal COMMA . separated_nonempty_list(COMMA,located_string_literal) [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## located_string_literal COMMA
##

parsing "separated_nonempty_list(COMMA,located_string_literal)": seen "located_string_literal COMMA", expecting "separated_nonempty_list(COMMA,located_string_literal)"

translation_unit: LBRACK_LBRACK ALIGNAS RBRACK WHILE
##
## Ends in an error in state: 140.
##
## attribute_specifier -> LBRACK_LBRACK attribute_list RBRACK . RBRACK [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE IF GT GOTO GENERIC FOR FLOAT EXTERN EQ ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX COMMA COLON CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACK_LBRACK attribute_list RBRACK
##

parsing "attribute_specifier": seen "LBRACK_LBRACK attribute_list RBRACK", expecting "RBRACK"

translation_unit: LBRACK_LBRACK ALIGNAS COMMA VA_START
##
## Ends in an error in state: 142.
##
## attribute_list -> attribute_list COMMA . attribute [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_list COMMA
##

parsing "attribute_list": seen "attribute_list COMMA", expecting "attribute"

translation_unit: LBRACK_LBRACK ALIGNAS COLON_COLON VA_START
##
## Ends in an error in state: 144.
##
## attribute_prefixed_token -> attribute_identifier COLON_COLON . attribute_identifier [ RBRACK LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_identifier COLON_COLON
##

parsing "attribute_prefixed_token": seen "attribute_identifier COLON_COLON", expecting "attribute_identifier"

translation_unit: ENUM LBRACE WHILE
##
## Ends in an error in state: 149.
##
## enum_specifier -> ENUM option(general_identifier) LBRACE . enumerator_list option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ENUM option(general_identifier) LBRACE
##

parsing "enum_specifier": seen "ENUM option(general_identifier) LBRACE", expecting "enumerator_list option(COMMA) RBRACE"

translation_unit: ENUM LBRACE LNAME TYPE EQ WHILE
##
## Ends in an error in state: 155.
##
## enumerator -> enumeration_constant EQ . constant_expression [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## enumeration_constant EQ
##

parsing "enumerator": seen "enumeration_constant EQ", expecting "constant_expression"

translation_unit: ALIGNAS LPAREN MINUS_MINUS WHILE
##
## Ends in an error in state: 156.
##
## unary_expression -> MINUS_MINUS . unary_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## MINUS_MINUS
##

parsing "unary_expression": seen "MINUS_MINUS", expecting "unary_expression"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE VARIABLE
##
## Ends in an error in state: 160.
##
## primary_expression -> LPAREN LBRACE . option(block_item_list) RBRACE RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN LBRACE
##

parsing "primary_expression": seen "LPAREN LBRACE", expecting "option(block_item_list) RBRACE RPAREN"

translation_unit: ATOMIC LPAREN WHILE
##
## Ends in an error in state: 175.
##
## atomic_type_specifier -> ATOMIC LPAREN . type_name RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ATOMIC LPAREN
##

parsing "atomic_type_specifier": seen "ATOMIC LPAREN", expecting "type_name RPAREN"

translation_unit: ALIGNAS LPAREN GENERIC WHILE
##
## Ends in an error in state: 178.
##
## generic_selection -> GENERIC . LPAREN assignment_expression COMMA generic_assoc_list RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## GENERIC
##

parsing "generic_selection": seen "GENERIC", expecting "LPAREN assignment_expression COMMA generic_assoc_list RPAREN"

translation_unit: ALIGNAS LPAREN GENERIC LPAREN WHILE
##
## Ends in an error in state: 179.
##
## generic_selection -> GENERIC LPAREN . assignment_expression COMMA generic_assoc_list RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## GENERIC LPAREN
##

parsing "generic_selection": seen "GENERIC LPAREN", expecting "assignment_expression COMMA generic_assoc_list RPAREN"

translation_unit: STATIC_ASSERT LPAREN LNAME WHILE
##
## Ends in an error in state: 180.
##
## var_name -> LNAME . VARIABLE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME
##

parsing "var_name": seen "LNAME", expecting "VARIABLE"

translation_unit: ALIGNAS LPAREN BUILTIN_TYPES_COMPATIBLE_P WHILE
##
## Ends in an error in state: 182.
##
## postfix_expression -> BUILTIN_TYPES_COMPATIBLE_P . LPAREN type_name COMMA type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_TYPES_COMPATIBLE_P
##

parsing "postfix_expression": seen "BUILTIN_TYPES_COMPATIBLE_P", expecting "LPAREN type_name COMMA type_name RPAREN"

translation_unit: ALIGNAS LPAREN BUILTIN_TYPES_COMPATIBLE_P LPAREN WHILE
##
## Ends in an error in state: 183.
##
## postfix_expression -> BUILTIN_TYPES_COMPATIBLE_P LPAREN . type_name COMMA type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_TYPES_COMPATIBLE_P LPAREN
##

parsing "postfix_expression": seen "BUILTIN_TYPES_COMPATIBLE_P LPAREN", expecting "type_name COMMA type_name RPAREN"

translation_unit: ALIGNAS LPAREN BUILTIN_TYPES_COMPATIBLE_P LPAREN BOOL COMMA WHILE
##
## Ends in an error in state: 195.
##
## postfix_expression -> BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name COMMA . type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name COMMA
##

parsing "postfix_expression": seen "BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name COMMA", expecting "type_name RPAREN"

translation_unit: STATIC_ASSERT WHILE
##
## Ends in an error in state: 208.
##
## static_assert_declaration -> STATIC_ASSERT . LPAREN constant_expression COMMA string_literal RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STATIC_ASSERT
##

parsing "static_assert_declaration": seen "STATIC_ASSERT", expecting "LPAREN constant_expression COMMA string_literal RPAREN SEMICOLON"

translation_unit: STATIC_ASSERT LPAREN WHILE
##
## Ends in an error in state: 209.
##
## static_assert_declaration -> STATIC_ASSERT LPAREN . constant_expression COMMA string_literal RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STATIC_ASSERT LPAREN
##

parsing "static_assert_declaration": seen "STATIC_ASSERT LPAREN", expecting "constant_expression COMMA string_literal RPAREN SEMICOLON"

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR WHILE
##
## Ends in an error in state: 210.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR . LPAREN assignment_expression COMMA assignment_expression COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR
##

parsing "postfix_expression": seen "BUILTIN_CHOOSE_EXPR", expecting "LPAREN assignment_expression COMMA assignment_expression COMMA assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR LPAREN WHILE
##
## Ends in an error in state: 211.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR LPAREN . assignment_expression COMMA assignment_expression COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR LPAREN
##

parsing "postfix_expression": seen "BUILTIN_CHOOSE_EXPR LPAREN", expecting "assignment_expression COMMA assignment_expression COMMA assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN BMC_ASSUME WHILE
##
## Ends in an error in state: 212.
##
## postfix_expression -> BMC_ASSUME . LPAREN assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BMC_ASSUME
##

parsing "postfix_expression": seen "BMC_ASSUME", expecting "LPAREN assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN BMC_ASSUME LPAREN WHILE
##
## Ends in an error in state: 213.
##
## postfix_expression -> BMC_ASSUME LPAREN . assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BMC_ASSUME LPAREN
##

parsing "postfix_expression": seen "BMC_ASSUME LPAREN", expecting "assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN ASSERT WHILE
##
## Ends in an error in state: 215.
##
## postfix_expression -> ASSERT . LPAREN assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## ASSERT
##

parsing "postfix_expression": seen "ASSERT", expecting "LPAREN assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN ASSERT LPAREN WHILE
##
## Ends in an error in state: 216.
##
## postfix_expression -> ASSERT LPAREN . assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN
##

parsing "postfix_expression": seen "ASSERT LPAREN", expecting "assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN ALIGNOF WHILE
##
## Ends in an error in state: 218.
##
## unary_expression -> ALIGNOF . LPAREN type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## ALIGNOF
##

parsing "unary_expression": seen "ALIGNOF", expecting "LPAREN type_name RPAREN"

translation_unit: ALIGNAS LPAREN ALIGNOF LPAREN WHILE
##
## Ends in an error in state: 219.
##
## unary_expression -> ALIGNOF LPAREN . type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## ALIGNOF LPAREN
##

parsing "unary_expression": seen "ALIGNOF LPAREN", expecting "type_name RPAREN"

translation_unit: ALIGNAS LPAREN BOOL LBRACK STATIC WHILE
##
## Ends in an error in state: 238.
##
## array_abstract_declarator -> LBRACK STATIC . option(type_qualifier_list) assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK STATIC
##

parsing "array_abstract_declarator": seen "LBRACK STATIC", expecting "option(type_qualifier_list) assignment_expression RBRACK"

translation_unit: ALIGNAS LPAREN AMPERSAND WHILE
##
## Ends in an error in state: 241.
##
## unary_expression -> unary_operator . cast_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## unary_operator
##

parsing "unary_expression": seen "unary_operator", expecting "cast_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL MINUS_GT WHILE
##
## Ends in an error in state: 248.
##
## postfix_expression -> postfix_expression MINUS_GT . general_identifier [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## postfix_expression MINUS_GT
##

parsing "postfix_expression": seen "postfix_expression MINUS_GT", expecting "general_identifier"

translation_unit: ALIGNAS LPAREN STRING_LITERAL LPAREN WHILE
##
## Ends in an error in state: 250.
##
## postfix_expression -> postfix_expression LPAREN . option(argument_expression_list) RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## postfix_expression LPAREN
##

parsing "postfix_expression": seen "postfix_expression LPAREN", expecting "option(argument_expression_list) RPAREN"

translation_unit: TYPEOF LPAREN STRING_LITERAL AMPERSAND_EQ WHILE
##
## Ends in an error in state: 263.
##
## assignment_expression -> unary_expression assignment_operator . assignment_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## unary_expression assignment_operator
##

parsing "assignment_expression": seen "unary_expression assignment_operator", expecting "assignment_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL LT_LT WHILE
##
## Ends in an error in state: 265.
##
## shift_expression -> shift_expression LT_LT . additive_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## shift_expression LT_LT
##

parsing "shift_expression": seen "shift_expression LT_LT", expecting "additive_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL STAR WHILE
##
## Ends in an error in state: 267.
##
## multiplicative_expression -> multiplicative_expression STAR . cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## multiplicative_expression STAR
##

parsing "multiplicative_expression": seen "multiplicative_expression STAR", expecting "cast_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL SLASH WHILE
##
## Ends in an error in state: 270.
##
## multiplicative_expression -> multiplicative_expression SLASH . cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## multiplicative_expression SLASH
##

parsing "multiplicative_expression": seen "multiplicative_expression SLASH", expecting "cast_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL PERCENT WHILE
##
## Ends in an error in state: 272.
##
## multiplicative_expression -> multiplicative_expression PERCENT . cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## multiplicative_expression PERCENT
##

parsing "multiplicative_expression": seen "multiplicative_expression PERCENT", expecting "cast_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL PLUS WHILE
##
## Ends in an error in state: 276.
##
## additive_expression -> additive_expression PLUS . multiplicative_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## additive_expression PLUS
##

parsing "additive_expression": seen "additive_expression PLUS", expecting "multiplicative_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL MINUS WHILE
##
## Ends in an error in state: 278.
##
## additive_expression -> additive_expression MINUS . multiplicative_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## additive_expression MINUS
##

parsing "additive_expression": seen "additive_expression MINUS", expecting "multiplicative_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL GT_GT WHILE
##
## Ends in an error in state: 280.
##
## shift_expression -> shift_expression GT_GT . additive_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## shift_expression GT_GT
##

parsing "shift_expression": seen "shift_expression GT_GT", expecting "additive_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL LT_EQ WHILE
##
## Ends in an error in state: 283.
##
## relational_expression -> relational_expression LT_EQ . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE LT_EQ LT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## relational_expression LT_EQ
##

parsing "relational_expression": seen "relational_expression LT_EQ", expecting "shift_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL LT WHILE
##
## Ends in an error in state: 286.
##
## relational_expression -> relational_expression LT . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE LT_EQ LT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## relational_expression LT
##

parsing "relational_expression": seen "relational_expression LT", expecting "shift_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL GT_EQ WHILE
##
## Ends in an error in state: 288.
##
## relational_expression -> relational_expression GT_EQ . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE LT_EQ LT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## relational_expression GT_EQ
##

parsing "relational_expression": seen "relational_expression GT_EQ", expecting "shift_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL GT WHILE
##
## Ends in an error in state: 290.
##
## relational_expression -> relational_expression GT . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE LT_EQ LT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## relational_expression GT
##

parsing "relational_expression": seen "relational_expression GT", expecting "shift_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL QUESTION_COLON WHILE
##
## Ends in an error in state: 293.
##
## conditional_expression -> logical_OR_expression QUESTION_COLON . conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE ELLIPSIS COMMA COLON ]
##
## The known suffix of the stack is as follows:
## logical_OR_expression QUESTION_COLON
##

parsing "conditional_expression": seen "logical_OR_expression QUESTION_COLON", expecting "conditional_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL AMPERSAND_AMPERSAND WHILE
##
## Ends in an error in state: 295.
##
## logical_AND_expression -> logical_AND_expression AMPERSAND_AMPERSAND . inclusive_OR_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE ELLIPSIS COMMA COLON AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## logical_AND_expression AMPERSAND_AMPERSAND
##

parsing "logical_AND_expression": seen "logical_AND_expression AMPERSAND_AMPERSAND", expecting "inclusive_OR_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL PIPE WHILE
##
## Ends in an error in state: 297.
##
## inclusive_OR_expression -> inclusive_OR_expression PIPE . exclusive_OR_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE ELLIPSIS COMMA COLON AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## inclusive_OR_expression PIPE
##

parsing "inclusive_OR_expression": seen "inclusive_OR_expression PIPE", expecting "exclusive_OR_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL CARET WHILE
##
## Ends in an error in state: 299.
##
## exclusive_OR_expression -> exclusive_OR_expression CARET . _AND_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE ELLIPSIS COMMA COLON CARET AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## exclusive_OR_expression CARET
##

parsing "exclusive_OR_expression": seen "exclusive_OR_expression CARET", expecting "_AND_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL EQ_EQ WHILE
##
## Ends in an error in state: 301.
##
## equality_expression -> equality_expression EQ_EQ . relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## equality_expression EQ_EQ
##

parsing "equality_expression": seen "equality_expression EQ_EQ", expecting "relational_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL BANG_EQ WHILE
##
## Ends in an error in state: 303.
##
## equality_expression -> equality_expression BANG_EQ . relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## equality_expression BANG_EQ
##

parsing "equality_expression": seen "equality_expression BANG_EQ", expecting "relational_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL AMPERSAND WHILE
##
## Ends in an error in state: 306.
##
## _AND_expression -> _AND_expression AMPERSAND . equality_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE PIPE ELLIPSIS COMMA COLON CARET AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## _AND_expression AMPERSAND
##

parsing "_AND_expression": seen "_AND_expression AMPERSAND", expecting "equality_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL QUESTION WHILE
##
## Ends in an error in state: 312.
##
## conditional_expression -> logical_OR_expression QUESTION . expression COLON conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE ELLIPSIS COMMA COLON ]
##
## The known suffix of the stack is as follows:
## logical_OR_expression QUESTION
##

parsing "conditional_expression": seen "logical_OR_expression QUESTION", expecting "expression COLON conditional_expression"

translation_unit: TYPEOF LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 314.
##
## expression -> expression COMMA . assignment_expression [ SEMICOLON RPAREN RBRACK COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expression COMMA
##

parsing "expression": seen "expression COMMA", expecting "assignment_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL QUESTION STRING_LITERAL COLON WHILE
##
## Ends in an error in state: 317.
##
## conditional_expression -> logical_OR_expression QUESTION expression COLON . conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE ELLIPSIS COMMA COLON ]
##
## The known suffix of the stack is as follows:
## logical_OR_expression QUESTION expression COLON
##

parsing "conditional_expression": seen "logical_OR_expression QUESTION expression COLON", expecting "conditional_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL PIPE_PIPE WHILE
##
## Ends in an error in state: 320.
##
## logical_OR_expression -> logical_OR_expression PIPE_PIPE . logical_AND_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PIPE_PIPE ELLIPSIS COMMA COLON ]
##
## The known suffix of the stack is as follows:
## logical_OR_expression PIPE_PIPE
##

parsing "logical_OR_expression": seen "logical_OR_expression PIPE_PIPE", expecting "logical_AND_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 327.
##
## argument_expression_list -> argument_expression_list COMMA . assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## argument_expression_list COMMA
##

parsing "argument_expression_list": seen "argument_expression_list COMMA", expecting "assignment_expression"

translation_unit: ALIGNAS LPAREN STRING_LITERAL LBRACK WHILE
##
## Ends in an error in state: 329.
##
## postfix_expression -> postfix_expression LBRACK . expression RBRACK [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## postfix_expression LBRACK
##

parsing "postfix_expression": seen "postfix_expression LBRACK", expecting "expression RBRACK"

translation_unit: ALIGNAS LPAREN STRING_LITERAL DOT WHILE
##
## Ends in an error in state: 332.
##
## postfix_expression -> postfix_expression DOT . general_identifier [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## postfix_expression DOT
##

parsing "postfix_expression": seen "postfix_expression DOT", expecting "general_identifier"

translation_unit: ALIGNAS LPAREN BOOL LBRACK ATOMIC STATIC WHILE
##
## Ends in an error in state: 340.
##
## array_abstract_declarator -> LBRACK type_qualifier_list STATIC . assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK type_qualifier_list STATIC
##

parsing "array_abstract_declarator": seen "LBRACK type_qualifier_list STATIC", expecting "assignment_expression RBRACK"

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LPAREN WHILE
##
## Ends in an error in state: 356.
##
## function_abstract_declarator -> direct_abstract_declarator LPAREN . option(scoped(parameter_type_list)) RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LPAREN
##

parsing "function_abstract_declarator": seen "direct_abstract_declarator LPAREN", expecting "option(scoped(parameter_type_list)) RPAREN"

translation_unit: BOOL LNAME TYPE LPAREN BOOL COMMA ELLIPSIS WHILE
##
## Ends in an error in state: 380.
##
## function_declarator -> direct_declarator LPAREN scoped(parameter_type_list) . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LPAREN scoped(parameter_type_list)
##

parsing "function_declarator": seen "direct_declarator LPAREN scoped(parameter_type_list)", expecting "RPAREN"

translation_unit: BOOL LNAME TYPE LPAREN LNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 388.
##
## identifier_list -> identifier_list COMMA . var_name [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## identifier_list COMMA
##

parsing "identifier_list": seen "identifier_list COMMA", expecting "var_name"

translation_unit: BOOL LNAME TYPE LBRACK STATIC WHILE
##
## Ends in an error in state: 408.
##
## array_declarator -> direct_declarator LBRACK STATIC . option(type_qualifier_list) assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK STATIC
##

parsing "array_declarator": seen "direct_declarator LBRACK STATIC", expecting "option(type_qualifier_list) assignment_expression RBRACK"

translation_unit: BOOL LNAME TYPE LBRACK ATOMIC STATIC WHILE
##
## Ends in an error in state: 413.
##
## array_declarator -> direct_declarator LBRACK type_qualifier_list STATIC . assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK type_qualifier_list STATIC
##

parsing "array_declarator": seen "direct_declarator LBRACK type_qualifier_list STATIC", expecting "assignment_expression RBRACK"

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK STATIC WHILE
##
## Ends in an error in state: 423.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK STATIC . option(type_qualifier_list) assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK STATIC
##

parsing "array_abstract_declarator": seen "direct_abstract_declarator LBRACK STATIC", expecting "option(type_qualifier_list) assignment_expression RBRACK"

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK ATOMIC STATIC WHILE
##
## Ends in an error in state: 430.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK type_qualifier_list STATIC . assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK type_qualifier_list STATIC
##

parsing "array_abstract_declarator": seen "direct_abstract_declarator LBRACK type_qualifier_list STATIC", expecting "assignment_expression RBRACK"

translation_unit: ALIGNAS LPAREN BOOL LPAREN BOOL COMMA ELLIPSIS WHILE
##
## Ends in an error in state: 448.
##
## function_abstract_declarator -> LPAREN option(scoped(parameter_type_list)) . RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN option(scoped(parameter_type_list))
##

parsing "function_abstract_declarator": seen "LPAREN option(scoped(parameter_type_list))", expecting "RPAREN"

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LPAREN BOOL COMMA ELLIPSIS WHILE
##
## Ends in an error in state: 453.
##
## function_abstract_declarator -> direct_abstract_declarator LPAREN option(scoped(parameter_type_list)) . RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LPAREN option(scoped(parameter_type_list))
##

parsing "function_abstract_declarator": seen "direct_abstract_declarator LPAREN option(scoped(parameter_type_list))", expecting "RPAREN"

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 483.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA . assignment_expression COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA
##

parsing "postfix_expression": seen "BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA", expecting "assignment_expression COMMA assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR LPAREN STRING_LITERAL COMMA STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 485.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression COMMA . assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression COMMA
##

parsing "postfix_expression": seen "BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression COMMA", expecting "assignment_expression RPAREN"

translation_unit: STATIC_ASSERT LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 489.
##
## static_assert_declaration -> STATIC_ASSERT LPAREN constant_expression COMMA . string_literal RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STATIC_ASSERT LPAREN constant_expression COMMA
##

parsing "static_assert_declaration": seen "STATIC_ASSERT LPAREN constant_expression COMMA", expecting "string_literal RPAREN SEMICOLON"

translation_unit: STATIC_ASSERT LPAREN STRING_LITERAL COMMA STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 491.
##
## static_assert_declaration -> STATIC_ASSERT LPAREN constant_expression COMMA string_literal RPAREN . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STATIC_ASSERT LPAREN constant_expression COMMA string_literal RPAREN
##

parsing "static_assert_declaration": seen "STATIC_ASSERT LPAREN constant_expression COMMA string_literal RPAREN", expecting "SEMICOLON"

translation_unit: BOOL LPAREN WHILE
##
## Ends in an error in state: 500.
##
## direct_declarator -> LPAREN save_context . declarator RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LPAREN save_context
##

parsing "direct_declarator": seen "LPAREN save_context", expecting "declarator RPAREN"

translation_unit: STRUCT LBRACE BOOL COLON STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 503.
##
## struct_declarator_list -> struct_declarator_list COMMA . struct_declarator [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## struct_declarator_list COMMA
##

parsing "struct_declarator_list": seen "struct_declarator_list COMMA", expecting "struct_declarator"

translation_unit: STRUCT LBRACE BOOL COLON WHILE
##
## Ends in an error in state: 506.
##
## struct_declarator -> option(declarator) COLON . constant_expression [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## option(declarator) COLON
##

parsing "struct_declarator": seen "option(declarator) COLON", expecting "constant_expression"

translation_unit: STRUCT LBRACE BOOL SEMICOLON WHILE
##
## Ends in an error in state: 511.
##
## struct_declaration -> specifier_qualifier_list option(struct_declarator_list) SEMICOLON . boption(nonempty_list(SEMICOLON)) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## specifier_qualifier_list option(struct_declarator_list) SEMICOLON
##

parsing "struct_declaration": seen "specifier_qualifier_list option(struct_declarator_list) SEMICOLON", expecting "boption(nonempty_list(SEMICOLON))"

translation_unit: STRUCT LBRACE LBRACK_LBRACK ALIGNAS RBRACK RBRACK BOOL SEMICOLON WHILE
##
## Ends in an error in state: 516.
##
## struct_declaration -> attribute_specifier_sequence specifier_qualifier_list option(struct_declarator_list) SEMICOLON . boption(nonempty_list(SEMICOLON)) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence specifier_qualifier_list option(struct_declarator_list) SEMICOLON
##

parsing "struct_declaration": seen "attribute_specifier_sequence specifier_qualifier_list option(struct_declarator_list) SEMICOLON", expecting "boption(nonempty_list(SEMICOLON))"

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 522.
##
## generic_selection -> GENERIC LPAREN assignment_expression COMMA . generic_assoc_list RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## GENERIC LPAREN assignment_expression COMMA
##

parsing "generic_selection": seen "GENERIC LPAREN assignment_expression COMMA", expecting "generic_assoc_list RPAREN"

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA DEFAULT WHILE
##
## Ends in an error in state: 523.
##
## generic_association -> DEFAULT . COLON assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## DEFAULT
##

parsing "generic_association": seen "DEFAULT", expecting "COLON assignment_expression"

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA DEFAULT COLON WHILE
##
## Ends in an error in state: 524.
##
## generic_association -> DEFAULT COLON . assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## DEFAULT COLON
##

parsing "generic_association": seen "DEFAULT COLON", expecting "assignment_expression"

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA BOOL COLON WHILE
##
## Ends in an error in state: 527.
##
## generic_association -> type_name COLON . assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## type_name COLON
##

parsing "generic_association": seen "type_name COLON", expecting "assignment_expression"

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA BOOL COLON STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 532.
##
## generic_assoc_list -> generic_assoc_list COMMA . generic_association [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## generic_assoc_list COMMA
##

parsing "generic_assoc_list": seen "generic_assoc_list COMMA", expecting "generic_association"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON WHILE
##
## Ends in an error in state: 552.
##
## asm_with_output -> COLON . loption(separated_nonempty_list(COMMA,asm_output_input)) option(asm_with_input) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## COLON
##

parsing "asm_with_output": seen "COLON", expecting "loption(separated_nonempty_list(COMMA,asm_output_input)) option(asm_with_input)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK UNAME WHILE
##
## Ends in an error in state: 554.
##
## asm_output_input -> LBRACK UNAME . VARIABLE RBRACK string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK UNAME
##

parsing "asm_output_input": seen "LBRACK UNAME", expecting "VARIABLE RBRACK string_literal LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK UNAME VARIABLE WHILE
##
## Ends in an error in state: 555.
##
## asm_output_input -> LBRACK UNAME VARIABLE . RBRACK string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK UNAME VARIABLE
##

parsing "asm_output_input": seen "LBRACK UNAME VARIABLE", expecting "RBRACK string_literal LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK UNAME VARIABLE RBRACK WHILE
##
## Ends in an error in state: 556.
##
## asm_output_input -> LBRACK UNAME VARIABLE RBRACK . string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK UNAME VARIABLE RBRACK
##

parsing "asm_output_input": seen "LBRACK UNAME VARIABLE RBRACK", expecting "string_literal LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK UNAME VARIABLE RBRACK STRING_LITERAL LPAREN WHILE
##
## Ends in an error in state: 558.
##
## asm_output_input -> LBRACK UNAME VARIABLE RBRACK string_literal LPAREN . expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK UNAME VARIABLE RBRACK string_literal LPAREN
##

parsing "asm_output_input": seen "LBRACK UNAME VARIABLE RBRACK string_literal LPAREN", expecting "expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK LNAME WHILE
##
## Ends in an error in state: 561.
##
## asm_output_input -> LBRACK LNAME . VARIABLE RBRACK string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK LNAME
##

parsing "asm_output_input": seen "LBRACK LNAME", expecting "VARIABLE RBRACK string_literal LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK LNAME VARIABLE WHILE
##
## Ends in an error in state: 562.
##
## asm_output_input -> LBRACK LNAME VARIABLE . RBRACK string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK LNAME VARIABLE
##

parsing "asm_output_input": seen "LBRACK LNAME VARIABLE", expecting "RBRACK string_literal LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK LNAME VARIABLE RBRACK WHILE
##
## Ends in an error in state: 563.
##
## asm_output_input -> LBRACK LNAME VARIABLE RBRACK . string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK LNAME VARIABLE RBRACK
##

parsing "asm_output_input": seen "LBRACK LNAME VARIABLE RBRACK", expecting "string_literal LPAREN expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK LNAME VARIABLE RBRACK STRING_LITERAL LPAREN WHILE
##
## Ends in an error in state: 565.
##
## asm_output_input -> LBRACK LNAME VARIABLE RBRACK string_literal LPAREN . expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK LNAME VARIABLE RBRACK string_literal LPAREN
##

parsing "asm_output_input": seen "LBRACK LNAME VARIABLE RBRACK string_literal LPAREN", expecting "expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON STRING_LITERAL LPAREN WHILE
##
## Ends in an error in state: 569.
##
## asm_output_input -> string_literal LPAREN . expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## string_literal LPAREN
##

parsing "asm_output_input": seen "string_literal LPAREN", expecting "expression RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON WHILE
##
## Ends in an error in state: 574.
##
## asm_with_input -> COLON . loption(separated_nonempty_list(COMMA,asm_output_input)) option(asm_with_clobbers) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## COLON
##

parsing "asm_with_input": seen "COLON", expecting "loption(separated_nonempty_list(COMMA,asm_output_input)) option(asm_with_clobbers)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON WHILE
##
## Ends in an error in state: 576.
##
## asm_with_clobbers -> COLON . loption(separated_nonempty_list(COMMA,asm_clobber)) option(asm_with_labels) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## COLON
##

parsing "asm_with_clobbers": seen "COLON", expecting "loption(separated_nonempty_list(COMMA,asm_clobber)) option(asm_with_labels)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON COLON WHILE
##
## Ends in an error in state: 580.
##
## asm_with_labels -> COLON . list(asm_label) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## COLON
##

parsing "asm_with_labels": seen "COLON", expecting "list(asm_label)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON COLON UNAME WHILE
##
## Ends in an error in state: 581.
##
## asm_label -> UNAME . VARIABLE [ UNAME RPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## UNAME
##

parsing "asm_label": seen "UNAME", expecting "VARIABLE"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON COLON LNAME WHILE
##
## Ends in an error in state: 583.
##
## asm_label -> LNAME . VARIABLE [ UNAME RPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## LNAME
##

parsing "asm_label": seen "LNAME", expecting "VARIABLE"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON COLON LNAME VARIABLE WHILE
##
## Ends in an error in state: 586.
##
## list(asm_label) -> asm_label . list(asm_label) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## asm_label
##

parsing "list(asm_label)": seen "asm_label", expecting "list(asm_label)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 591.
##
## separated_nonempty_list(COMMA,asm_clobber) -> asm_clobber COMMA . separated_nonempty_list(COMMA,asm_clobber) [ RPAREN COLON ]
##
## The known suffix of the stack is as follows:
## asm_clobber COMMA
##

parsing "separated_nonempty_list(COMMA,asm_clobber)": seen "asm_clobber COMMA", expecting "separated_nonempty_list(COMMA,asm_clobber)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON STRING_LITERAL LPAREN STRING_LITERAL RPAREN COMMA WHILE
##
## Ends in an error in state: 596.
##
## separated_nonempty_list(COMMA,asm_output_input) -> asm_output_input COMMA . separated_nonempty_list(COMMA,asm_output_input) [ RPAREN COLON ]
##
## The known suffix of the stack is as follows:
## asm_output_input COMMA
##

parsing "separated_nonempty_list(COMMA,asm_output_input)": seen "asm_output_input COMMA", expecting "separated_nonempty_list(COMMA,asm_output_input)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM ASM_VOLATILE WHILE
##
## Ends in an error in state: 602.
##
## list(asm_qualifier) -> asm_qualifier . list(asm_qualifier) [ LPAREN ]
##
## The known suffix of the stack is as follows:
## asm_qualifier
##

parsing "list(asm_qualifier)": seen "asm_qualifier", expecting "list(asm_qualifier)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE RBRACE WHILE
##
## Ends in an error in state: 610.
##
## primary_expression -> LPAREN LBRACE option(block_item_list) RBRACE . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN LBRACE option(block_item_list) RBRACE
##

parsing "primary_expression": seen "LPAREN LBRACE option(block_item_list) RBRACE", expecting "RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE RETURN WHILE
##
## Ends in an error in state: 613.
##
## jump_statement -> RETURN . option(expression) SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## RETURN
##

parsing "jump_statement": seen "RETURN", expecting "option(full_expression) SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE GOTO WHILE
##
## Ends in an error in state: 617.
##
## jump_statement -> GOTO . general_identifier SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## GOTO
##

parsing "jump_statement": seen "GOTO", expecting "general_identifier SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE GOTO LNAME TYPE WHILE
##
## Ends in an error in state: 618.
##
## jump_statement -> GOTO general_identifier . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## GOTO general_identifier
##

parsing "jump_statement": seen "GOTO general_identifier", expecting "SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DEFAULT WHILE
##
## Ends in an error in state: 620.
##
## labeled_statement -> option(attribute_specifier_sequence) DEFAULT . COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) DEFAULT
##

parsing "labeled_statement": seen "option(attribute_specifier_sequence) DEFAULT", expecting "COLON statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DEFAULT COLON VOLATILE
##
## Ends in an error in state: 621.
##
## labeled_statement -> option(attribute_specifier_sequence) DEFAULT COLON . statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) DEFAULT COLON
##

parsing "labeled_statement": seen "option(attribute_specifier_sequence) DEFAULT COLON", expecting "statement"


translation_unit: ALIGNAS LPAREN LPAREN LBRACE LNAME VARIABLE COLON VOLATILE
##
## Ends in an error in state: 625.
##
## labeled_statement -> general_identifier COLON . statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## general_identifier COLON
##

parsing "labeled_statement": seen "general_identifier COLON", expecting "statement"


translation_unit: ALIGNAS LPAREN LPAREN LBRACE LBRACK_LBRACK ALIGNAS RBRACK RBRACK LNAME VARIABLE COLON VOLATILE
##
## Ends in an error in state: 630.
##
## labeled_statement -> attribute_specifier_sequence general_identifier COLON . statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence general_identifier COLON
##

parsing "labeled_statement": seen "attribute_specifier_sequence general_identifier COLON", expecting "statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CONTINUE WHILE
##
## Ends in an error in state: 635.
##
## jump_statement -> CONTINUE . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## CONTINUE
##

parsing "jump_statement": seen "CONTINUE", expecting "SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CASE STRING_LITERAL ELLIPSIS WHILE
##
## Ends in an error in state: 639.
##
## labeled_statement -> option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS . constant_expression COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS
##

parsing "labeled_statement": seen "option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS", expecting "constant_expression COLON statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CASE STRING_LITERAL ELLIPSIS STRING_LITERAL COLON VOLATILE
##
## Ends in an error in state: 641.
##
## labeled_statement -> option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS constant_expression COLON . statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS constant_expression COLON
##

parsing "labeled_statement": seen "option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS constant_expression COLON", expecting "statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CASE STRING_LITERAL COLON VOLATILE
##
## Ends in an error in state: 643.
##
## labeled_statement -> option(attribute_specifier_sequence) CASE constant_expression COLON . statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) CASE constant_expression COLON
##

parsing "labeled_statement": seen "option(attribute_specifier_sequence) CASE constant_expression COLON", expecting "statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE BREAK WHILE
##
## Ends in an error in state: 645.
##
## jump_statement -> BREAK . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## BREAK
##

parsing "jump_statement": seen "BREAK", expecting "SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE WHILE WHILE
##
## Ends in an error in state: 651.
##
## iteration_statement -> WHILE . LPAREN expression RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## WHILE
##

parsing "iteration_statement": seen "WHILE", expecting "LPAREN full_expression RPAREN magic_comment_list scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE WHILE LPAREN WHILE
##
## Ends in an error in state: 652.
##
## iteration_statement -> WHILE LPAREN . expression RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN
##

parsing "iteration_statement": seen "WHILE LPAREN", expecting "full_expression RPAREN magic_comment_list scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DO VOLATILE
##
## Ends in an error in state: 781.
##
## iteration_statement -> DO magic_comment_list . scoped(statement) WHILE LPAREN expression RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## magic_comment_list -> magic_comment_list . CERB_MAGIC [ WHILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACK_LBRACK LBRACES LBRACE IF GOTO GENERIC FOR DO DEFAULT CONTINUE CONSTANT CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BMC_ASSUME BANG ASSERT ASM AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## DO magic_comment_list
##

parsing "scoped(statement)": seen "save_context", expecting "statement"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE SWITCH WHILE
##
## Ends in an error in state: 660.
##
## selection_statement -> SWITCH . LPAREN expression RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## SWITCH
##

parsing "selection_statement": seen "SWITCH", expecting "LPAREN full_expression RPAREN scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE SWITCH LPAREN WHILE
##
## Ends in an error in state: 661.
##
## selection_statement -> SWITCH LPAREN . expression RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## SWITCH LPAREN
##

parsing "selection_statement": seen "SWITCH LPAREN", expecting "full_expression RPAREN scoped(statement)"




translation_unit: BOOL TYPEDEF LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 681.
##
## init_declarator_list(declarator_typedefname) -> init_declarator_list(declarator_typedefname) COMMA . init_declarator(declarator_typedefname) [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## init_declarator_list(declarator_typedefname) COMMA
##

parsing "init_declarator_list(declarator_typedefname)": seen "init_declarator_list(declarator_typedefname) COMMA", expecting "init_declarator(declarator_typedefname)"

translation_unit: BOOL TYPEDEF LNAME TYPE EQ WHILE
##
## Ends in an error in state: 684.
##
## init_declarator(declarator_typedefname) -> declarator_typedefname EQ . initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_typedefname EQ
##

parsing "init_declarator(declarator_typedefname)": seen "declarator_typedefname EQ", expecting "initializer_"

translation_unit: BOOL LNAME TYPE EQ LBRACE LBRACK WHILE
##
## Ends in an error in state: 686.
##
## designator -> LBRACK . constant_expression RBRACK [ LBRACK EQ DOT ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

parsing "designator": seen "LBRACK", expecting "constant_expression RBRACK"

translation_unit: BOOL LNAME TYPE EQ LBRACE DOT WHILE
##
## Ends in an error in state: 689.
##
## designator -> DOT . general_identifier [ LBRACK EQ DOT ]
##
## The known suffix of the stack is as follows:
## DOT
##

parsing "designator": seen "DOT", expecting "general_identifier"

translation_unit: BOOL LNAME TYPE EQ LBRACE DOT LNAME TYPE EQ WHILE
##
## Ends in an error in state: 691.
##
## initializer_list -> option(designation) . initializer_ [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## option(designation)
##

parsing "initializer_list": seen "option(designation)", expecting "initializer_"

translation_unit: BOOL LNAME TYPE EQ LBRACE STRING_LITERAL COMMA DOT LNAME TYPE EQ WHILE
##
## Ends in an error in state: 698.
##
## initializer_list -> initializer_list COMMA option(designation) . initializer_ [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## initializer_list COMMA option(designation)
##

parsing "initializer_list": seen "initializer_list COMMA option(designation)", expecting "initializer_"

translation_unit: BOOL LNAME TYPE ASM WHILE
##
## Ends in an error in state: 706.
##
## asm_register -> ASM . LPAREN string_literal RPAREN [ SEMICOLON EQ COMMA ]
##
## The known suffix of the stack is as follows:
## ASM
##

parsing "asm_register": seen "ASM", expecting "LPAREN string_literal RPAREN"

translation_unit: BOOL LNAME TYPE ASM LPAREN WHILE
##
## Ends in an error in state: 707.
##
## asm_register -> ASM LPAREN . string_literal RPAREN [ SEMICOLON EQ COMMA ]
##
## The known suffix of the stack is as follows:
## ASM LPAREN
##

parsing "asm_register": seen "ASM LPAREN", expecting "string_literal RPAREN"

translation_unit: BOOL TYPEDEF LNAME TYPE ASM LPAREN STRING_LITERAL RPAREN EQ WHILE
##
## Ends in an error in state: 711.
##
## init_declarator(declarator_typedefname) -> declarator_typedefname asm_register EQ . initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_typedefname asm_register EQ
##

parsing "init_declarator(declarator_typedefname)": seen "declarator_typedefname asm_register EQ", expecting "initializer_"

translation_unit: BOOL LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 719.
##
## init_declarator_list(declarator_varname) -> init_declarator_list(declarator_varname) COMMA . init_declarator(declarator_varname) [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## init_declarator_list(declarator_varname) COMMA
##

parsing "init_declarator_list(declarator_varname)": seen "init_declarator_list(declarator_varname) COMMA", expecting "init_declarator(declarator_varname)"

translation_unit: BOOL LNAME TYPE EQ WHILE
##
## Ends in an error in state: 722.
##
## init_declarator(declarator_varname) -> declarator_varname EQ . initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_varname EQ
##

parsing "init_declarator(declarator_varname)": seen "declarator_varname EQ", expecting "initializer_"

translation_unit: BOOL LNAME TYPE ASM LPAREN STRING_LITERAL RPAREN EQ WHILE
##
## Ends in an error in state: 725.
##
## init_declarator(declarator_varname) -> declarator_varname asm_register EQ . initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_varname asm_register EQ
##

parsing "init_declarator(declarator_varname)": seen "declarator_varname asm_register EQ", expecting "initializer_"

translation_unit: BOOL TYPEDEF WHILE
##
## Ends in an error in state: 732.
##
## list_eq1(TYPEDEF,declaration_specifier) -> TYPEDEF . list(declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## TYPEDEF
##

parsing "list_eq1(TYPEDEF,declaration_specifier)": seen "TYPEDEF", expecting "list(declaration_specifier)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN SEMICOLON WHILE
##
## Ends in an error in state: 765.
##
## iteration_statement -> FOR LPAREN option(expression) SEMICOLON . option(expression) SEMICOLON option(expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN option(expression) SEMICOLON
##

parsing "iteration_statement": seen "FOR LPAREN option(full_expression) SEMICOLON", expecting "option(full_expression) SEMICOLON option(full_expression) RPAREN magic_comment_list scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN SEMICOLON SEMICOLON WHILE
##
## Ends in an error in state: 767.
##
## iteration_statement -> FOR LPAREN option(expression) SEMICOLON option(expression) SEMICOLON . option(expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN option(expression) SEMICOLON option(expression) SEMICOLON
##

parsing "iteration_statement": seen "FOR LPAREN option(full_expression) SEMICOLON option(full_expression) SEMICOLON", expecting "option(full_expression) RPAREN magic_comment_list scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN BOOL SEMICOLON WHILE
##
## Ends in an error in state: 772.
##
## iteration_statement -> FOR LPAREN declaration . option(expression) SEMICOLON option(expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN declaration
##

parsing "iteration_statement": seen "FOR LPAREN declaration", expecting "option(full_expression) SEMICOLON option(full_expression) RPAREN magic_comment_list scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN BOOL SEMICOLON SEMICOLON WHILE
##
## Ends in an error in state: 774.
##
## iteration_statement -> FOR LPAREN declaration option(expression) SEMICOLON . option(expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN declaration option(expression) SEMICOLON
##

parsing "iteration_statement": seen "FOR LPAREN declaration option(full_expression) SEMICOLON", expecting "option(full_expression) RPAREN magic_comment_list scoped(statement)"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DO SEMICOLON VOLATILE
##
## Ends in an error in state: 782.
##
## iteration_statement -> DO magic_comment_list scoped(statement) . WHILE LPAREN expression RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## DO magic_comment_list scoped(statement)
##

parsing "iteration_statement": seen "DO scoped(statement)", expecting "WHILE LPAREN full_expression RPAREN SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DO SEMICOLON WHILE WHILE
##
## Ends in an error in state: 783.
##
## iteration_statement -> DO magic_comment_list scoped(statement) WHILE . LPAREN expression RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## DO magic_comment_list scoped(statement) WHILE
##

parsing "iteration_statement": seen "DO scoped(statement) WHILE", expecting "LPAREN full_expression RPAREN SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DO SEMICOLON WHILE LPAREN WHILE
##
## Ends in an error in state: 784.
##
## iteration_statement -> DO magic_comment_list scoped(statement) WHILE LPAREN . expression RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## DO magic_comment_list scoped(statement) WHILE LPAREN
##

parsing "iteration_statement": seen "DO scoped(statement) WHILE LPAREN", expecting "full_expression RPAREN SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DO SEMICOLON WHILE LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 786.
##
## iteration_statement -> DO magic_comment_list scoped(statement) WHILE LPAREN expression RPAREN . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## DO magic_comment_list scoped(statement) WHILE LPAREN expression RPAREN
##

parsing "iteration_statement": seen "DO scoped(statement) WHILE LPAREN full_expression RPAREN", expecting "SEMICOLON"

translation_unit: ALIGNAS LPAREN LPAREN BOOL RPAREN LBRACE WHILE
##
## Ends in an error in state: 794.
##
## postfix_expression -> LPAREN type_name RPAREN LBRACE . initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN type_name RPAREN LBRACE
##

parsing "postfix_expression": seen "LPAREN type_name RPAREN LBRACE", expecting "initializer_list option(COMMA) RBRACE"

translation_unit: ALIGNAS LPAREN MINUS_MINUS LPAREN BOOL RPAREN WHILE
##
## Ends in an error in state: 803.
##
## postfix_expression -> LPAREN type_name RPAREN . LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN type_name RPAREN
##

parsing "postfix_expression": seen "LPAREN type_name RPAREN", expecting "LBRACE initializer_list option(COMMA) RBRACE"

translation_unit: ENUM LBRACE LNAME TYPE LBRACK_LBRACK ALIGNAS RBRACK RBRACK EQ WHILE
##
## Ends in an error in state: 807.
##
## enumerator -> enumeration_constant attribute_specifier_sequence EQ . constant_expression [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## enumeration_constant attribute_specifier_sequence EQ
##

parsing "enumerator": seen "enumeration_constant attribute_specifier_sequence EQ", expecting "constant_expression"

translation_unit: ENUM LBRACK_LBRACK ALIGNAS RBRACK RBRACK LBRACE WHILE
##
## Ends in an error in state: 815.
##
## enum_specifier -> ENUM attribute_specifier_sequence option(general_identifier) LBRACE . enumerator_list option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ENUM attribute_specifier_sequence option(general_identifier) LBRACE
##

parsing "enum_specifier": seen "ENUM attribute_specifier_sequence option(general_identifier) LBRACE", expecting "enumerator_list option(COMMA) RBRACE"

translation_unit: ALIGNAS LPAREN OFFSETOF LPAREN BOOL COMMA WHILE
##
## Ends in an error in state: 821.
##
## postfix_expression -> OFFSETOF LPAREN type_name COMMA . general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN type_name COMMA
##

parsing "postfix_expression": seen "OFFSETOF LPAREN type_name COMMA", expecting "general_identifier RPAREN"

translation_unit: ALIGNAS LPAREN OFFSETOF LPAREN BOOL COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 822.
##
## postfix_expression -> OFFSETOF LPAREN type_name COMMA general_identifier . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN type_name COMMA general_identifier
##

parsing "postfix_expression": seen "OFFSETOF LPAREN type_name COMMA general_identifier", expecting "RPAREN"

translation_unit: ALIGNAS LPAREN VA_ARG LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 832.
##
## postfix_expression -> VA_ARG LPAREN assignment_expression COMMA . type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_ARG LPAREN assignment_expression COMMA
##

parsing "postfix_expression": seen "VA_ARG LPAREN assignment_expression COMMA", expecting "type_name RPAREN"

translation_unit: ALIGNAS LPAREN VA_COPY LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 836.
##
## postfix_expression -> VA_COPY LPAREN assignment_expression COMMA . assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_COPY LPAREN assignment_expression COMMA
##

parsing "postfix_expression": seen "VA_COPY LPAREN assignment_expression COMMA", expecting "assignment_expression RPAREN"

translation_unit: ALIGNAS LPAREN VA_START LPAREN STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 842.
##
## postfix_expression -> VA_START LPAREN assignment_expression COMMA . general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_START LPAREN assignment_expression COMMA
##

parsing "postfix_expression": seen "VA_START LPAREN assignment_expression COMMA", expecting "general_identifier RPAREN"

translation_unit: ALIGNAS LPAREN VA_START LPAREN STRING_LITERAL COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 843.
##
## postfix_expression -> VA_START LPAREN assignment_expression COMMA general_identifier . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_START LPAREN assignment_expression COMMA general_identifier
##

parsing "postfix_expression": seen "VA_START LPAREN assignment_expression COMMA general_identifier", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_BLOCK WHILE
##
## Ends in an error in state: 852.
##
## pred -> CN_BLOCK . LT ctype GT [ LPAREN COMMA ]
## pred -> CN_BLOCK . [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_BLOCK
##

parsing "pred": seen "CN_BLOCK", expecting "LT ctype GT"

cn_statements: CN_EXTRACT CN_BLOCK LT WHILE
##
## Ends in an error in state: 853.
##
## pred -> CN_BLOCK LT . ctype GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_BLOCK LT
##

parsing "pred": seen "CN_BLOCK LT", expecting "ctype GT"

cn_statements: CN_UNPACK CN_OWNED LPAREN WHILE
##
## Ends in an error in state: 857.
##
## cn_statement -> CN_UNPACK pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNPACK pred LPAREN
##

parsing "cn_statement": seen "CN_UNPACK pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_EXTRACT UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 860.
##
## prim_expr -> UNAME VARIABLE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE LPAREN
##

parsing "prim_expr": seen "UNAME VARIABLE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN"

cn_statements: CN_EXTRACT STAR WHILE
##
## Ends in an error in state: 869.
##
## unary_expr -> STAR . unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STAR
##

parsing "unary_expr": seen "STAR", expecting "unary_expr"

cn_statements: CN_EXTRACT SIZEOF WHILE
##
## Ends in an error in state: 870.
##
## unary_expr -> SIZEOF . LT ctype GT [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## SIZEOF
##

parsing "unary_expr": seen "SIZEOF", expecting "LT ctype GT"

cn_statements: CN_EXTRACT SIZEOF LT WHILE
##
## Ends in an error in state: 871.
##
## unary_expr -> SIZEOF LT . ctype GT [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## SIZEOF LT
##

parsing "unary_expr": seen "SIZEOF LT", expecting "ctype GT"

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 881.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 883.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 886.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 888.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 893.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA UNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA UNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME TYPE COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 895.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA UNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA UNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME TYPE COMMA UNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 898.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA LNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA LNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME TYPE COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 900.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA LNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA LNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN UNAME TYPE COMMA LNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 906.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 908.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 911.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 913.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 918.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA UNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA UNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME TYPE COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 920.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA UNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA UNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME TYPE COMMA UNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 923.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA LNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA LNAME VARIABLE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME TYPE COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 925.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA LNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA LNAME TYPE
##

parsing "unary_expr": seen "OFFSETOF LPAREN LNAME TYPE COMMA LNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT LNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 940.
##
## prim_expr -> LNAME VARIABLE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE LPAREN
##

parsing "prim_expr": seen "LNAME VARIABLE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN"

cn_statements: CN_EXTRACT LBRACK WHILE
##
## Ends in an error in state: 941.
##
## list_expr -> LBRACK . separated_nonempty_list(COMMA,rel_expr) RBRACK [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

parsing "list_expr": seen "LBRACK", expecting "separated_nonempty_list(COMMA,rel_expr) RBRACK"

cn_statements: CN_EXTRACT LNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 945.
##
## cons_args -> LBRACE . loption(separated_nonempty_list(COMMA,member_def)) RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "cons_args": seen "LBRACE", expecting "loption(separated_nonempty_list(COMMA,member_def)) RBRACE"

cn_statements: CN_EXTRACT LNAME TYPE LBRACE UNAME VARIABLE WHILE
##
## Ends in an error in state: 867.
##
## member_def -> UNAME VARIABLE . COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

parsing "member_def": seen "UNAME VARIABLE", expecting "COLON expr"

cn_statements: CN_EXTRACT LBRACE UNAME VARIABLE COLON WHILE
##
## Ends in an error in state: 868.
##
## member_def -> UNAME VARIABLE COLON . expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE COLON
##

parsing "member_def": seen "UNAME VARIABLE COLON", expecting "expr"

cn_statements: CN_EXTRACT IF WHILE
##
## Ends in an error in state: 955.
##
## expr_without_let -> IF . LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE expr RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## IF
##

parsing "expr_without_let": seen "IF", expecting "LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE expr RBRACE"

cn_statements: CN_EXTRACT IF LPAREN WHILE
##
## Ends in an error in state: 956.
##
## expr_without_let -> IF LPAREN . expr RPAREN LBRACE expr RBRACE ELSE LBRACE expr RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## IF LPAREN
##

parsing "expr_without_let": seen "IF LPAREN", expecting "expr RPAREN LBRACE expr RBRACE ELSE LBRACE expr RBRACE"

cn_statements: CN_EXTRACT DEFAULT WHILE
##
## Ends in an error in state: 957.
##
## prim_expr -> DEFAULT . LT base_type GT [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## DEFAULT
##

parsing "unary_expr": seen "DEFAULT", expecting "LT base_type GT"

cn_statements: CN_EXTRACT DEFAULT LT WHILE
##
## Ends in an error in state: 958.
##
## prim_expr -> DEFAULT LT . base_type GT [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## DEFAULT LT
##

parsing "unary_expr": seen "DEFAULT LT", expecting "base_type GT"

cn_toplevel: CN_PREDICATE LBRACE WHILE
##
## Ends in an error in state: 972.
##
## base_type_explicit -> LBRACE . nonempty_cn_params RBRACE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "base_type_explicit": seen "LBRACE", expecting "nonempty_cn_params RBRACE"

cn_toplevel: CN_PREDICATE CN_TUPLE WHILE
##
## Ends in an error in state: 973.
##
## base_type_explicit -> CN_TUPLE . LT loption(separated_nonempty_list(COMMA,base_type)) GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TUPLE
##

parsing "base_type_explicit": seen "CN_TUPLE", expecting "LT loption(separated_nonempty_list(COMMA,base_type)) GT"

cn_toplevel: CN_PREDICATE CN_TUPLE LT WHILE
##
## Ends in an error in state: 974.
##
## base_type_explicit -> CN_TUPLE LT . loption(separated_nonempty_list(COMMA,base_type)) GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TUPLE LT
##

parsing "base_type_explicit": seen "CN_TUPLE LT", expecting "loption(separated_nonempty_list(COMMA,base_type)) GT"

cn_toplevel: CN_PREDICATE CN_SET WHILE
##
## Ends in an error in state: 975.
##
## base_type_explicit -> CN_SET . LT base_type GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SET
##

parsing "base_type_explicit": seen "CN_SET", expecting "LT base_type GT"

cn_toplevel: CN_PREDICATE CN_SET LT WHILE
##
## Ends in an error in state: 976.
##
## base_type_explicit -> CN_SET LT . base_type GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SET LT
##

parsing "base_type_explicit": seen "CN_SET LT", expecting "base_type GT"

cn_toplevel: CN_PREDICATE CN_MAP WHILE
##
## Ends in an error in state: 979.
##
## base_type_explicit -> CN_MAP . LT base_type COMMA base_type GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_MAP
##

parsing "base_type_explicit": seen "CN_MAP", expecting "LT base_type COMMA base_type GT"

cn_toplevel: CN_PREDICATE CN_MAP LT WHILE
##
## Ends in an error in state: 980.
##
## base_type_explicit -> CN_MAP LT . base_type COMMA base_type GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_MAP LT
##

parsing "base_type_explicit": seen "CN_MAP LT", expecting "base_type COMMA base_type GT"




cn_toplevel: CN_PREDICATE CN_MAP LT CN_ALLOC_ID WHILE
##
## Ends in an error in state: 997.
##
## base_type_explicit -> CN_MAP LT base_type . COMMA base_type GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_MAP LT base_type
##

parsing "base_type_explicit": seen "CN_MAP LT base_type", expecting "COMMA base_type GT"

cn_toplevel: CN_PREDICATE CN_MAP LT CN_ALLOC_ID COMMA WHILE
##
## Ends in an error in state: 998.
##
## base_type_explicit -> CN_MAP LT base_type COMMA . base_type GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_MAP LT base_type COMMA
##

parsing "base_type_explicit": seen "CN_MAP LT base_type COMMA", expecting "base_type GT"

cn_toplevel: CN_PREDICATE CN_MAP LT CN_ALLOC_ID COMMA CN_ALLOC_ID WHILE
##
## Ends in an error in state: 999.
##
## base_type_explicit -> CN_MAP LT base_type COMMA base_type . GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_MAP LT base_type COMMA base_type
##

parsing "base_type_explicit": seen "CN_MAP LT base_type COMMA base_type", expecting "GT"

cn_toplevel: CN_PREDICATE CN_SET LT CN_ALLOC_ID WHILE
##
## Ends in an error in state: 1001.
##
## base_type_explicit -> CN_SET LT base_type . GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SET LT base_type
##

parsing "base_type_explicit": seen "CN_SET LT base_type", expecting "GT"

cn_toplevel: CN_PREDICATE CN_TUPLE LT CN_ALLOC_ID COMMA WHILE
##
## Ends in an error in state: 1007.
##
## separated_nonempty_list(COMMA,base_type) -> base_type COMMA . separated_nonempty_list(COMMA,base_type) [ GT ]
##
## The known suffix of the stack is as follows:
## base_type COMMA
##

parsing "separated_nonempty_list(COMMA,base_type)": seen "base_type COMMA", expecting "separated_nonempty_list(COMMA,base_type)"

cn_toplevel: CN_PREDICATE LBRACE CN_ALLOC_ID UNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 1015.
##
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type UNAME VARIABLE COMMA . separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type UNAME VARIABLE COMMA
##

parsing "separated_nonempty_list(COMMA,base_type_cn_variable)": seen "base_type UNAME VARIABLE COMMA", expecting "separated_nonempty_list(COMMA,base_type_cn_variable)"

cn_toplevel: CN_PREDICATE LBRACE CN_ALLOC_ID UNAME TYPE COMMA WHILE
##
## Ends in an error in state: 1018.
##
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type UNAME TYPE COMMA . separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type UNAME TYPE COMMA
##

parsing "separated_nonempty_list(COMMA,base_type_cn_variable)": seen "base_type UNAME TYPE COMMA", expecting "separated_nonempty_list(COMMA,base_type_cn_variable)"

cn_toplevel: CN_PREDICATE LBRACE CN_ALLOC_ID LNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 1022.
##
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME VARIABLE COMMA . separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type LNAME VARIABLE COMMA
##

parsing "separated_nonempty_list(COMMA,base_type_cn_variable)": seen "base_type LNAME VARIABLE COMMA", expecting "separated_nonempty_list(COMMA,base_type_cn_variable)"

cn_toplevel: CN_PREDICATE LBRACE CN_ALLOC_ID LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 1025.
##
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE COMMA . separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type LNAME TYPE COMMA
##

parsing "separated_nonempty_list(COMMA,base_type_cn_variable)": seen "base_type LNAME TYPE COMMA", expecting "separated_nonempty_list(COMMA,base_type_cn_variable)"

cn_statements: CN_EXTRACT DEFAULT LT CN_ALLOC_ID WHILE
##
## Ends in an error in state: 1027.
##
## prim_expr -> DEFAULT LT base_type . GT [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## DEFAULT LT base_type
##

parsing "unary_expr": seen "DEFAULT LT base_type", expecting "GT"

cn_statements: CN_EXTRACT CN_MATCH WHILE
##
## Ends in an error in state: 1038.
##
## expr_without_let -> CN_MATCH . match_target LBRACE match_cases RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_MATCH
##

parsing "expr_without_let": seen "CN_MATCH", expecting "match_target LBRACE match_cases RBRACE"

cn_statements: CN_EXTRACT CN_MATCH LPAREN WHILE
##
## Ends in an error in state: 1042.
##
## match_target -> LPAREN . expr RPAREN [ LBRACE ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

parsing "match_target": seen "LPAREN", expecting "expr RPAREN"

cn_statements: CN_EXTRACT CN_LET UNAME VARIABLE WHILE
##
## Ends in an error in state: 1045.
##
## expr -> CN_LET UNAME VARIABLE . EQ expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE
##

parsing "expr": seen "CN_LET UNAME VARIABLE", expecting "EQ expr SEMICOLON expr"

cn_statements: CN_EXTRACT CN_LET UNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1046.
##
## expr -> CN_LET UNAME VARIABLE EQ . expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ
##

parsing "expr": seen "CN_LET UNAME VARIABLE EQ", expecting "expr SEMICOLON expr"

cn_statements: CN_EXTRACT CN_GOOD WHILE
##
## Ends in an error in state: 1047.
##
## cn_good -> CN_GOOD . LT ctype GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_GOOD
##

parsing "cn_good": seen "CN_GOOD", expecting "LT ctype GT"

cn_statements: CN_EXTRACT CN_GOOD LT WHILE
##
## Ends in an error in state: 1048.
##
## cn_good -> CN_GOOD LT . ctype GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_GOOD LT
##

parsing "cn_good": seen "CN_GOOD LT", expecting "ctype GT"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE WHILE
##
## Ends in an error in state: 1056.
##
## expr_without_let -> CN_EACH LPAREN base_type UNAME VARIABLE . COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type UNAME VARIABLE", expecting "COLON int_range SEMICOLON expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE COLON WHILE
##
## Ends in an error in state: 1057.
##
## expr_without_let -> CN_EACH LPAREN base_type UNAME VARIABLE COLON . int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE COLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type UNAME VARIABLE COLON", expecting "int_range SEMICOLON expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE COLON CONSTANT WHILE
##
## Ends in an error in state: 1058.
##
## int_range -> CONSTANT . COMMA CONSTANT [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CONSTANT
##

parsing "int_range": seen "CONSTANT", expecting "COMMA CONSTANT"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE COLON CONSTANT COMMA WHILE
##
## Ends in an error in state: 1059.
##
## int_range -> CONSTANT COMMA . CONSTANT [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CONSTANT COMMA
##

parsing "int_range": seen "CONSTANT COMMA", expecting "CONSTANT"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE COLON CONSTANT COMMA CONSTANT WHILE
##
## Ends in an error in state: 1061.
##
## expr_without_let -> CN_EACH LPAREN base_type UNAME VARIABLE COLON int_range . SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE COLON int_range
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type UNAME VARIABLE COLON int_range", expecting "SEMICOLON expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE COLON CONSTANT COMMA CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1062.
##
## expr_without_let -> CN_EACH LPAREN base_type UNAME VARIABLE COLON int_range SEMICOLON . expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE COLON int_range SEMICOLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type UNAME VARIABLE COLON int_range SEMICOLON", expecting "expr RPAREN"

cn_statements: CN_EXTRACT CN_ARRAY_SHIFT LT WHILE
##
## Ends in an error in state: 1065.
##
## prim_expr -> CN_ARRAY_SHIFT LT . ctype GT LPAREN expr COMMA expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_ARRAY_SHIFT LT
##

parsing "prim_expr": seen "CN_ARRAY_SHIFT LT", expecting "ctype GT LPAREN expr COMMA expr RPAREN"

cn_statements: CN_EXTRACT CN_ARRAY_SHIFT LT BOOL GT WHILE
##
## Ends in an error in state: 1067.
##
## prim_expr -> CN_ARRAY_SHIFT LT ctype GT . LPAREN expr COMMA expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_ARRAY_SHIFT LT ctype GT
##

parsing "prim_expr": seen "CN_ARRAY_SHIFT LT ctype GT", expecting "LPAREN expr COMMA expr RPAREN"

cn_statements: CN_EXTRACT CN_ARRAY_SHIFT LT BOOL GT LPAREN WHILE
##
## Ends in an error in state: 1068.
##
## prim_expr -> CN_ARRAY_SHIFT LT ctype GT LPAREN . expr COMMA expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_ARRAY_SHIFT LT ctype GT LPAREN
##

parsing "prim_expr": seen "CN_ARRAY_SHIFT LT ctype GT LPAREN", expecting "expr COMMA expr RPAREN"

cn_statements: CN_EXTRACT BANG WHILE
##
## Ends in an error in state: 1069.
##
## unary_expr -> BANG . unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BANG
##

parsing "unary_expr": seen "BANG", expecting "prim_expr"

cn_statements: CN_EXTRACT BANG LPAREN WHILE
##
## Ends in an error in state: 928.
##
## prim_expr -> LPAREN . expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> LPAREN . base_type_explicit RPAREN unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

parsing "prim_expr": seen "LPAREN", expecting "expr RPAREN"

cn_statements: CN_EXTRACT LBRACE LNAME VARIABLE COLON WHILE
##
## Ends in an error in state: 937.
##
## member_def -> LNAME VARIABLE COLON . expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE COLON
##

parsing "member_def": seen "LNAME VARIABLE COLON", expecting "expr"

cn_statements: CN_EXTRACT CN_CONSTANT LT_EQ WHILE
##
## Ends in an error in state: 1078.
##
## rel_expr -> rel_expr LT_EQ . add_expr [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PIPE_PIPE LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## rel_expr LT_EQ
##

parsing "rel_expr": seen "rel_expr LT_EQ", expecting "add_expr"

cn_statements: CN_EXTRACT CN_CONSTANT LBRACK CN_CONSTANT COLON WHILE
##
## Ends in an error in state: 1098.
##
## index_update -> prim_expr COLON . expr [ RBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## prim_expr COLON
##

parsing "index_update": seen "prim_expr COLON", expecting "expr"

cn_statements: CN_EXTRACT MINUS WHILE
##
## Ends in an error in state: 927.
##
## unary_expr -> MINUS . unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## MINUS
##

parsing "unary_expr": seen "MINUS", expecting "prim_expr"

cn_statements: CN_EXTRACT CN_CONSTANT STAR WHILE
##
## Ends in an error in state: 1100.
##
## mul_expr -> mul_expr STAR . unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## mul_expr STAR
##

parsing "mul_expr": seen "mul_expr STAR", expecting "unary_expr"

cn_statements: CN_EXTRACT CN_GOOD LT BOOL GT WHILE
##
## Ends in an error in state: 1102.
##
## prim_expr -> cn_good . LPAREN expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## cn_good
##

parsing "prim_expr": seen "cn_good", expecting "LPAREN expr RPAREN"

cn_statements: CN_EXTRACT CN_GOOD LT BOOL GT LPAREN WHILE
##
## Ends in an error in state: 1103.
##
## prim_expr -> cn_good LPAREN . expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## cn_good LPAREN
##

parsing "prim_expr": seen "cn_good LPAREN", expecting "expr RPAREN"

cn_statements: CN_EXTRACT CN_CONSTANT QUESTION WHILE
##
## Ends in an error in state: 1105.
##
## expr_without_let -> list_expr QUESTION . list_expr COLON list_expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## list_expr QUESTION
##

parsing "expr_without_let": seen "list_expr QUESTION", expecting "list_expr COLON list_expr"

cn_statements: CN_EXTRACT CN_CONSTANT QUESTION CN_CONSTANT COLON WHILE
##
## Ends in an error in state: 1107.
##
## expr_without_let -> list_expr QUESTION list_expr COLON . list_expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## list_expr QUESTION list_expr COLON
##

parsing "expr_without_let": seen "list_expr QUESTION list_expr COLON", expecting "list_expr"

cn_statements: CN_EXTRACT CN_CONSTANT PIPE_PIPE WHILE
##
## Ends in an error in state: 1110.
##
## bool_or_expr -> bool_or_expr PIPE_PIPE . bool_implies_expr [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PIPE_PIPE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## bool_or_expr PIPE_PIPE
##

parsing "bool_bin_expr": seen "bool_bin_expr PIPE_PIPE", expecting "rel_expr"

cn_statements: CN_EXTRACT CN_CONSTANT LT WHILE
##
## Ends in an error in state: 1132.
##
## rel_expr -> rel_expr LT . add_expr [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PIPE_PIPE LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## rel_expr LT
##

parsing "rel_expr": seen "rel_expr LT", expecting "add_expr"

cn_statements: CN_EXTRACT CN_CONSTANT PLUS WHILE
##
## Ends in an error in state: 1116.
##
## add_expr -> add_expr PLUS . mul_expr [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## add_expr PLUS
##

parsing "add_expr": seen "add_expr PLUS", expecting "mul_expr"

cn_statements: CN_EXTRACT CN_CONSTANT SLASH WHILE
##
## Ends in an error in state: 1118.
##
## mul_expr -> mul_expr SLASH . unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## mul_expr SLASH
##

parsing "mul_expr": seen "mul_expr SLASH", expecting "unary_expr"

cn_statements: CN_EXTRACT CN_CONSTANT MINUS WHILE
##
## Ends in an error in state: 1128.
##
## add_expr -> add_expr MINUS . mul_expr [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## add_expr MINUS
##

parsing "add_expr": seen "add_expr MINUS", expecting "mul_expr"

cn_statements: CN_EXTRACT CN_CONSTANT GT_EQ WHILE
##
## Ends in an error in state: 1134.
##
## rel_expr -> rel_expr GT_EQ . add_expr [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PIPE_PIPE LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## rel_expr GT_EQ
##

parsing "rel_expr": seen "rel_expr GT_EQ", expecting "add_expr"

cn_statements: CN_EXTRACT CN_CONSTANT GT WHILE
##
## Ends in an error in state: 1136.
##
## rel_expr -> rel_expr GT . add_expr [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PIPE_PIPE LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## rel_expr GT
##

parsing "rel_expr": seen "rel_expr GT", expecting "add_expr"

cn_statements: CN_EXTRACT CN_CONSTANT EQ_EQ WHILE
##
## Ends in an error in state: 1138.
##
## rel_expr -> rel_expr EQ_EQ . add_expr [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PIPE_PIPE LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## rel_expr EQ_EQ
##

parsing "rel_expr": seen "rel_expr EQ_EQ", expecting "add_expr"

cn_statements: CN_EXTRACT CN_CONSTANT BANG_EQ WHILE
##
## Ends in an error in state: 1140.
##
## rel_expr -> rel_expr BANG_EQ . add_expr [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PIPE_PIPE LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## rel_expr BANG_EQ
##

parsing "rel_expr": seen "rel_expr BANG_EQ", expecting "add_expr"

cn_statements: CN_EXTRACT CN_CONSTANT AMPERSAND_AMPERSAND WHILE
##
## Ends in an error in state: 1130.
##
## bool_and_expr -> bool_and_expr AMPERSAND_AMPERSAND . rel_expr [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PIPE_PIPE COMMA COLON CN_IMPLIES AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## bool_and_expr AMPERSAND_AMPERSAND
##

parsing "bool_bin_expr": seen "bool_bin_expr AMPERSAND_AMPERSAND", expecting "rel_expr"

cn_statements: CN_EXTRACT CN_CONSTANT LBRACK CN_CONSTANT COLON CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 1148.
##
## separated_nonempty_list(COMMA,index_update) -> index_update COMMA . separated_nonempty_list(COMMA,index_update) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## index_update COMMA
##

parsing "separated_nonempty_list(COMMA,index_update)": seen "index_update COMMA", expecting "separated_nonempty_list(COMMA,index_update)"

cn_statements: CN_EXTRACT LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1154.
##
## prim_expr -> LNAME TYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE LPAREN
##

parsing "prim_expr": seen "LNAME TYPE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN"

cn_statements: CN_PACK CN_OWNED LPAREN CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 1159.
##
## separated_nonempty_list(COMMA,expr) -> expr COMMA . separated_nonempty_list(COMMA,expr) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr COMMA
##

parsing "separated_nonempty_list(COMMA,expr)": seen "expr COMMA", expecting "separated_nonempty_list(COMMA,expr)"

cn_statements: CN_EXTRACT LBRACE LNAME TYPE COLON WHILE
##
## Ends in an error in state: 1161.
##
## member_def -> LNAME TYPE COLON . expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE COLON
##

parsing "member_def": seen "LNAME TYPE COLON", expecting "expr"

cn_statements: CN_EXTRACT LNAME TYPE LBRACE LNAME VARIABLE WHILE
##
## Ends in an error in state: 936.
##
## member_def -> LNAME VARIABLE . COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

parsing "member_def": seen "LNAME VARIABLE", expecting "COLON expr"

cn_statements: CN_EXTRACT LNAME TYPE LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 1403.
##
## member_def -> LNAME TYPE . COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

parsing "member_def": seen "LNAME TYPE", expecting "COLON expr"

cn_statements: CN_EXTRACT LBRACE UNAME TYPE COLON CN_CONSTANT COMMA DOT WHILE
##
## Ends in an error in state: 1171.
##
## member_updates -> DOT . DOT expr [ RBRACE ]
##
## The known suffix of the stack is as follows:
## DOT
##

parsing "member_updates": seen "DOT", expecting "DOT expr"

cn_statements: CN_EXTRACT LBRACE UNAME TYPE COLON CN_CONSTANT COMMA DOT DOT WHILE
##
## Ends in an error in state: 1172.
##
## member_updates -> DOT DOT . expr [ RBRACE ]
##
## The known suffix of the stack is as follows:
## DOT DOT
##

parsing "member_updates": seen "DOT DOT", expecting "expr"

cn_statements: CN_EXTRACT LBRACE CN_CONSTANT RBRACE PERCENT UNAME WHILE
##
## Ends in an error in state: 1181.
##
## prim_expr -> LBRACE expr RBRACE PERCENT UNAME . VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACE expr RBRACE PERCENT UNAME
##

parsing "prim_expr": seen "LBRACE expr RBRACE PERCENT UNAME", expecting "VARIABLE"

cn_statements: CN_EXTRACT LBRACE CN_CONSTANT RBRACE PERCENT LNAME WHILE
##
## Ends in an error in state: 1183.
##
## prim_expr -> LBRACE expr RBRACE PERCENT LNAME . VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACE expr RBRACE PERCENT LNAME
##

parsing "prim_expr": seen "LBRACE expr RBRACE PERCENT LNAME", expecting "VARIABLE"

cn_statements: CN_EXTRACT AMPERSAND LPAREN CN_CONSTANT MINUS_GT UNAME VARIABLE WHILE
##
## Ends in an error in state: 1195.
##
## prim_expr -> prim_expr MINUS_GT UNAME VARIABLE . [ MINUS_GT LBRACK DOT ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT UNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT UNAME VARIABLE
##

parsing "unary_expr": seen "AMPERSAND LPAREN prim_expr MINUS_GT UNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT AMPERSAND LPAREN CN_CONSTANT MINUS_GT UNAME TYPE WHILE
##
## Ends in an error in state: 1197.
##
## prim_expr -> prim_expr MINUS_GT UNAME TYPE . [ MINUS_GT LBRACK DOT ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT UNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT UNAME TYPE
##

parsing "unary_expr": seen "AMPERSAND LPAREN prim_expr MINUS_GT UNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT AMPERSAND LPAREN CN_CONSTANT MINUS_GT LNAME VARIABLE WHILE
##
## Ends in an error in state: 1200.
##
## prim_expr -> prim_expr MINUS_GT LNAME VARIABLE . [ MINUS_GT LBRACK DOT ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT LNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT LNAME VARIABLE
##

parsing "unary_expr": seen "AMPERSAND LPAREN prim_expr MINUS_GT LNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT AMPERSAND LPAREN CN_CONSTANT MINUS_GT LNAME TYPE WHILE
##
## Ends in an error in state: 1202.
##
## prim_expr -> prim_expr MINUS_GT LNAME TYPE . [ MINUS_GT LBRACK DOT ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT LNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT LNAME TYPE
##

parsing "unary_expr": seen "AMPERSAND LPAREN prim_expr MINUS_GT LNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_ARRAY_SHIFT LT BOOL GT LPAREN CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 1209.
##
## prim_expr -> CN_ARRAY_SHIFT LT ctype GT LPAREN expr COMMA . expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_ARRAY_SHIFT LT ctype GT LPAREN expr COMMA
##

parsing "prim_expr": seen "CN_ARRAY_SHIFT LT ctype GT LPAREN expr COMMA", expecting "expr RPAREN"

cn_statements: CN_EXTRACT CN_ARRAY_SHIFT LPAREN WHILE
##
## Ends in an error in state: 1212.
##
## prim_expr -> CN_ARRAY_SHIFT LPAREN . expr COMMA expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_ARRAY_SHIFT LPAREN
##

parsing "prim_expr": seen "CN_ARRAY_SHIFT LPAREN", expecting "expr COMMA expr RPAREN"

cn_statements: CN_EXTRACT CN_ARRAY_SHIFT LPAREN CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 1214.
##
## prim_expr -> CN_ARRAY_SHIFT LPAREN expr COMMA . expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_ARRAY_SHIFT LPAREN expr COMMA
##

parsing "prim_expr": seen "CN_ARRAY_SHIFT LPAREN expr COMMA", expecting "expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE WHILE
##
## Ends in an error in state: 1219.
##
## expr_without_let -> CN_EACH LPAREN base_type UNAME TYPE . COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type UNAME TYPE", expecting "COLON int_range SEMICOLON expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE COLON WHILE
##
## Ends in an error in state: 1220.
##
## expr_without_let -> CN_EACH LPAREN base_type UNAME TYPE COLON . int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE COLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type UNAME TYPE COLON", expecting "int_range SEMICOLON expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE COLON CONSTANT COMMA CONSTANT WHILE
##
## Ends in an error in state: 1221.
##
## expr_without_let -> CN_EACH LPAREN base_type UNAME TYPE COLON int_range . SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE COLON int_range
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type UNAME TYPE COLON int_range", expecting "SEMICOLON expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE COLON CONSTANT COMMA CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1222.
##
## expr_without_let -> CN_EACH LPAREN base_type UNAME TYPE COLON int_range SEMICOLON . expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE COLON int_range SEMICOLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type UNAME TYPE COLON int_range SEMICOLON", expecting "expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE WHILE
##
## Ends in an error in state: 1226.
##
## expr_without_let -> CN_EACH LPAREN base_type LNAME VARIABLE . COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type LNAME VARIABLE", expecting "COLON int_range SEMICOLON expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE COLON WHILE
##
## Ends in an error in state: 1227.
##
## expr_without_let -> CN_EACH LPAREN base_type LNAME VARIABLE COLON . int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE COLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type LNAME VARIABLE COLON", expecting "int_range SEMICOLON expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE COLON CONSTANT COMMA CONSTANT WHILE
##
## Ends in an error in state: 1228.
##
## expr_without_let -> CN_EACH LPAREN base_type LNAME VARIABLE COLON int_range . SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE COLON int_range
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type LNAME VARIABLE COLON int_range", expecting "SEMICOLON expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE COLON CONSTANT COMMA CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1229.
##
## expr_without_let -> CN_EACH LPAREN base_type LNAME VARIABLE COLON int_range SEMICOLON . expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE COLON int_range SEMICOLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type LNAME VARIABLE COLON int_range SEMICOLON", expecting "expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE WHILE
##
## Ends in an error in state: 1232.
##
## expr_without_let -> CN_EACH LPAREN base_type LNAME TYPE . COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type LNAME TYPE", expecting "COLON int_range SEMICOLON expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE COLON WHILE
##
## Ends in an error in state: 1233.
##
## expr_without_let -> CN_EACH LPAREN base_type LNAME TYPE COLON . int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE COLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type LNAME TYPE COLON", expecting "int_range SEMICOLON expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE COLON CONSTANT COMMA CONSTANT WHILE
##
## Ends in an error in state: 1234.
##
## expr_without_let -> CN_EACH LPAREN base_type LNAME TYPE COLON int_range . SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE COLON int_range
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type LNAME TYPE COLON int_range", expecting "SEMICOLON expr RPAREN"

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE COLON CONSTANT COMMA CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1235.
##
## expr_without_let -> CN_EACH LPAREN base_type LNAME TYPE COLON int_range SEMICOLON . expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE COLON int_range SEMICOLON
##

parsing "expr_without_let": seen "CN_EACH LPAREN base_type LNAME TYPE COLON int_range SEMICOLON", expecting "expr RPAREN"

cn_statements: CN_EXTRACT CN_LET UNAME VARIABLE EQ CN_CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1239.
##
## expr -> CN_LET UNAME VARIABLE EQ expr SEMICOLON . expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ expr SEMICOLON
##

parsing "expr": seen "CN_LET UNAME VARIABLE EQ expr SEMICOLON", expecting "expr"

cn_statements: CN_EXTRACT CN_LET UNAME TYPE WHILE
##
## Ends in an error in state: 1241.
##
## expr -> CN_LET UNAME TYPE . EQ expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE
##

parsing "expr": seen "CN_LET UNAME TYPE", expecting "EQ expr SEMICOLON expr"

cn_statements: CN_EXTRACT CN_LET UNAME TYPE EQ WHILE
##
## Ends in an error in state: 1242.
##
## expr -> CN_LET UNAME TYPE EQ . expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ
##

parsing "expr": seen "CN_LET UNAME TYPE EQ", expecting "expr SEMICOLON expr"

cn_statements: CN_EXTRACT CN_LET UNAME TYPE EQ CN_CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1244.
##
## expr -> CN_LET UNAME TYPE EQ expr SEMICOLON . expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ expr SEMICOLON
##

parsing "expr": seen "CN_LET UNAME TYPE EQ expr SEMICOLON", expecting "expr"

cn_statements: CN_EXTRACT CN_LET LNAME VARIABLE WHILE
##
## Ends in an error in state: 1247.
##
## expr -> CN_LET LNAME VARIABLE . EQ expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE
##

parsing "expr": seen "CN_LET LNAME VARIABLE", expecting "EQ expr SEMICOLON expr"

cn_statements: CN_EXTRACT CN_LET LNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1248.
##
## expr -> CN_LET LNAME VARIABLE EQ . expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ
##

parsing "expr": seen "CN_LET LNAME VARIABLE EQ", expecting "expr SEMICOLON expr"

cn_statements: CN_EXTRACT CN_LET LNAME VARIABLE EQ CN_CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1250.
##
## expr -> CN_LET LNAME VARIABLE EQ expr SEMICOLON . expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ expr SEMICOLON
##

parsing "expr": seen "CN_LET LNAME VARIABLE EQ expr SEMICOLON", expecting "expr"

cn_statements: CN_EXTRACT CN_LET LNAME TYPE WHILE
##
## Ends in an error in state: 1252.
##
## expr -> CN_LET LNAME TYPE . EQ expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE
##

parsing "expr": seen "CN_LET LNAME TYPE", expecting "EQ expr SEMICOLON expr"

cn_statements: CN_EXTRACT CN_LET LNAME TYPE EQ WHILE
##
## Ends in an error in state: 1253.
##
## expr -> CN_LET LNAME TYPE EQ . expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ
##

parsing "expr": seen "CN_LET LNAME TYPE EQ", expecting "expr SEMICOLON expr"

cn_statements: CN_EXTRACT CN_LET LNAME TYPE EQ CN_CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1255.
##
## expr -> CN_LET LNAME TYPE EQ expr SEMICOLON . expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ expr SEMICOLON
##

parsing "expr": seen "CN_LET LNAME TYPE EQ expr SEMICOLON", expecting "expr"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE WHILE
##
## Ends in an error in state: 1262.
##
## expr_without_let -> CN_MATCH match_target . LBRACE match_cases RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_MATCH match_target
##

parsing "expr_without_let": seen "CN_MATCH match_target", expecting "LBRACE match_cases RBRACE"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 1263.
##
## expr_without_let -> CN_MATCH match_target LBRACE . match_cases RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_MATCH match_target LBRACE
##

parsing "expr_without_let": seen "CN_MATCH match_target LBRACE", expecting "match_cases RBRACE"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 1266.
##
## pattern_cons_args -> LBRACE . loption(separated_nonempty_list(COMMA,pattern_member_def)) RBRACE [ RBRACE EQ COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "pattern_cons_args": seen "LBRACE", expecting "loption(separated_nonempty_list(COMMA,pattern_member_def)) RBRACE"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1268.
##
## pattern_member_def -> UNAME VARIABLE . COLON pattern [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

parsing "pattern_member_def": seen "UNAME VARIABLE", expecting "COLON pattern"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE UNAME VARIABLE COLON WHILE
##
## Ends in an error in state: 1269.
##
## pattern_member_def -> UNAME VARIABLE COLON . pattern [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE COLON
##

parsing "pattern_member_def": seen "UNAME VARIABLE COLON", expecting "pattern"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE UNAME TYPE WHILE
##
## Ends in an error in state: 1277.
##
## pattern_member_def -> UNAME TYPE . COLON pattern [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

parsing "pattern_member_def": seen "UNAME TYPE", expecting "COLON pattern"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE UNAME TYPE COLON WHILE
##
## Ends in an error in state: 1278.
##
## pattern_member_def -> UNAME TYPE COLON . pattern [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE COLON
##

parsing "pattern_member_def": seen "UNAME TYPE COLON", expecting "pattern"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1281.
##
## pattern_member_def -> LNAME VARIABLE . COLON pattern [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

parsing "pattern_member_def": seen "LNAME VARIABLE", expecting "COLON pattern"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE LNAME VARIABLE COLON WHILE
##
## Ends in an error in state: 1282.
##
## pattern_member_def -> LNAME VARIABLE COLON . pattern [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE COLON
##

parsing "pattern_member_def": seen "LNAME VARIABLE COLON", expecting "pattern"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 1284.
##
## pattern_member_def -> LNAME TYPE . COLON pattern [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

parsing "pattern_member_def": seen "LNAME TYPE", expecting "COLON pattern"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE LNAME TYPE COLON WHILE
##
## Ends in an error in state: 1285.
##
## pattern_member_def -> LNAME TYPE COLON . pattern [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE COLON
##

parsing "pattern_member_def": seen "LNAME TYPE COLON", expecting "pattern"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE LNAME TYPE COLON CN_WILD COMMA WHILE
##
## Ends in an error in state: 1289.
##
## separated_nonempty_list(COMMA,pattern_member_def) -> pattern_member_def COMMA . separated_nonempty_list(COMMA,pattern_member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## pattern_member_def COMMA
##

parsing "separated_nonempty_list(COMMA,pattern_member_def)": seen "pattern_member_def COMMA", expecting "separated_nonempty_list(COMMA,pattern_member_def)"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE CN_WILD RBRACE
##
## Ends in an error in state: 1296.
##
## match_case -> pattern . EQ GT LBRACE expr RBRACE [ UNAME RBRACE LNAME CN_WILD ]
##
## The known suffix of the stack is as follows:
## pattern
##

parsing "match_case": seen "pattern", expecting "EQ GT LBRACE expr RBRACE"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE CN_WILD EQ WHILE
##
## Ends in an error in state: 1297.
##
## match_case -> pattern EQ . GT LBRACE expr RBRACE [ UNAME RBRACE LNAME CN_WILD ]
##
## The known suffix of the stack is as follows:
## pattern EQ
##

parsing "match_case": seen "pattern EQ", expecting "GT LBRACE expr RBRACE"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE CN_WILD EQ GT WHILE
##
## Ends in an error in state: 1298.
##
## match_case -> pattern EQ GT . LBRACE expr RBRACE [ UNAME RBRACE LNAME CN_WILD ]
##
## The known suffix of the stack is as follows:
## pattern EQ GT
##

parsing "match_case": seen "pattern EQ GT", expecting "LBRACE expr RBRACE"

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE CN_WILD EQ GT LBRACE WHILE
##
## Ends in an error in state: 1299.
##
## match_case -> pattern EQ GT LBRACE . expr RBRACE [ UNAME RBRACE LNAME CN_WILD ]
##
## The known suffix of the stack is as follows:
## pattern EQ GT LBRACE
##

parsing "match_case": seen "pattern EQ GT LBRACE", expecting "expr RBRACE"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN CN_CONSTANT COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 1309.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA UNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA UNAME VARIABLE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN CN_CONSTANT COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 1311.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA UNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA UNAME TYPE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA UNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN CN_CONSTANT COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 1314.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA LNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA LNAME VARIABLE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN CN_CONSTANT COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 1316.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA LNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA LNAME TYPE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA LNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN CN_CONSTANT COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 1324.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA UNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA UNAME VARIABLE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN CN_CONSTANT COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 1326.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA UNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA UNAME TYPE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA UNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN CN_CONSTANT COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 1329.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA LNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA LNAME VARIABLE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN CN_CONSTANT COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 1331.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA LNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA LNAME TYPE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA LNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN CN_CONSTANT COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 1340.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA UNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA UNAME VARIABLE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN CN_CONSTANT COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 1342.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA UNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA UNAME TYPE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA UNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN CN_CONSTANT COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 1345.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA LNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA LNAME VARIABLE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN CN_CONSTANT COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 1347.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA LNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA LNAME TYPE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA LNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN CN_CONSTANT COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 1355.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA UNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA UNAME VARIABLE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN CN_CONSTANT COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 1357.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA UNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA UNAME TYPE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA UNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN CN_CONSTANT COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 1360.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA LNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA LNAME VARIABLE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN CN_CONSTANT COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 1362.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA LNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA LNAME TYPE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA LNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LPAREN CN_CONSTANT COMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 1368.
##
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr COMMA UNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LPAREN expr COMMA UNAME VARIABLE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LPAREN expr COMMA UNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LPAREN CN_CONSTANT COMMA UNAME TYPE WHILE
##
## Ends in an error in state: 1370.
##
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr COMMA UNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LPAREN expr COMMA UNAME TYPE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LPAREN expr COMMA UNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LPAREN CN_CONSTANT COMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 1373.
##
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr COMMA LNAME VARIABLE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LPAREN expr COMMA LNAME VARIABLE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LPAREN expr COMMA LNAME VARIABLE", expecting "RPAREN"

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LPAREN CN_CONSTANT COMMA LNAME TYPE WHILE
##
## Ends in an error in state: 1375.
##
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr COMMA LNAME TYPE . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LPAREN expr COMMA LNAME TYPE
##

parsing "prim_expr": seen "CN_MEMBER_SHIFT LPAREN expr COMMA LNAME TYPE", expecting "RPAREN"

cn_statements: CN_EXTRACT IF LPAREN CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1378.
##
## expr_without_let -> IF LPAREN expr RPAREN . LBRACE expr RBRACE ELSE LBRACE expr RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN
##

parsing "expr_without_let": seen "IF LPAREN expr RPAREN", expecting "LBRACE expr RBRACE ELSE LBRACE expr RBRACE"

cn_statements: CN_EXTRACT IF LPAREN CN_CONSTANT RPAREN LBRACE WHILE
##
## Ends in an error in state: 1379.
##
## expr_without_let -> IF LPAREN expr RPAREN LBRACE . expr RBRACE ELSE LBRACE expr RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE
##

parsing "expr_without_let": seen "IF LPAREN expr RPAREN LBRACE", expecting "expr RBRACE ELSE LBRACE expr RBRACE"

cn_statements: CN_EXTRACT IF LPAREN CN_CONSTANT RPAREN LBRACE CN_CONSTANT RBRACE WHILE
##
## Ends in an error in state: 1381.
##
## expr_without_let -> IF LPAREN expr RPAREN LBRACE expr RBRACE . ELSE LBRACE expr RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE expr RBRACE
##

parsing "expr_without_let": seen "IF LPAREN expr RPAREN LBRACE expr RBRACE", expecting "ELSE LBRACE expr RBRACE"

cn_statements: CN_EXTRACT IF LPAREN CN_CONSTANT RPAREN LBRACE CN_CONSTANT RBRACE ELSE WHILE
##
## Ends in an error in state: 1382.
##
## expr_without_let -> IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE . LBRACE expr RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE
##

parsing "expr_without_let": seen "IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE", expecting "LBRACE expr RBRACE"

cn_statements: CN_EXTRACT IF LPAREN CN_CONSTANT RPAREN LBRACE CN_CONSTANT RBRACE ELSE LBRACE WHILE
##
## Ends in an error in state: 1383.
##
## expr_without_let -> IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE . expr RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE
##

parsing "expr_without_let": seen "IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE", expecting "expr RBRACE"

cn_statements: CN_EXTRACT LNAME TYPE LBRACE UNAME TYPE WHILE
##
## Ends in an error in state: 1428.
##
## member_def -> UNAME TYPE . COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

parsing "member_def": seen "UNAME TYPE", expecting "COLON expr"

cn_statements: CN_EXTRACT LBRACE UNAME TYPE COLON WHILE
##
## Ends in an error in state: 1388.
##
## member_def -> UNAME TYPE COLON . expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE COLON
##

parsing "member_def": seen "UNAME TYPE COLON", expecting "expr"

cn_statements: CN_EXTRACT LNAME TYPE LBRACE UNAME TYPE COLON CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 948.
##
## separated_nonempty_list(COMMA,member_def) -> member_def COMMA . separated_nonempty_list(COMMA,member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## member_def COMMA
##

parsing "separated_nonempty_list(COMMA,member_def)": seen "member_def COMMA", expecting "separated_nonempty_list(COMMA,member_def)"

cn_statements: CN_EXTRACT UNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 954.
##
## prim_expr -> UNAME TYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE LPAREN
##

parsing "prim_expr": seen "UNAME TYPE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN"

cn_statements: CN_EXTRACT LBRACK CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 1397.
##
## separated_nonempty_list(COMMA,rel_expr) -> rel_expr COMMA . separated_nonempty_list(COMMA,rel_expr) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## rel_expr COMMA
##

parsing "separated_nonempty_list(COMMA,rel_expr)": seen "rel_expr COMMA", expecting "separated_nonempty_list(COMMA,rel_expr)"

cn_statements: CN_EXTRACT LPAREN CN_ALLOC_ID WHILE
##
## Ends in an error in state: 1422.
##
## unary_expr -> LPAREN base_type_explicit . RPAREN unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN base_type_explicit
##

parsing "unary_expr": seen "LPAREN base_type_explicit", expecting "RPAREN prim_expr"

cn_statements: CN_EXTRACT LPAREN CN_ALLOC_ID RPAREN WHILE
##
## Ends in an error in state: 1423.
##
## unary_expr -> LPAREN base_type_explicit RPAREN . unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN base_type_explicit RPAREN
##

parsing "unary_expr": seen "LPAREN base_type_explicit RPAREN", expecting "prim_expr"

cn_statements: CN_UNPACK CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1440.
##
## cn_statement -> CN_UNPACK pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNPACK pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_UNPACK pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statements: CN_UNFOLD UNAME VARIABLE WHILE
##
## Ends in an error in state: 1444.
##
## cn_statement -> CN_UNFOLD UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME VARIABLE
##

parsing "cn_statement": seen "CN_UNFOLD UNAME VARIABLE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_UNFOLD UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1445.
##
## cn_statement -> CN_UNFOLD UNAME VARIABLE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME VARIABLE LPAREN
##

parsing "cn_statement": seen "CN_UNFOLD UNAME VARIABLE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_UNFOLD UNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1447.
##
## cn_statement -> CN_UNFOLD UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_UNFOLD UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statements: CN_UNFOLD UNAME TYPE WHILE
##
## Ends in an error in state: 1449.
##
## cn_statement -> CN_UNFOLD UNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME TYPE
##

parsing "cn_statement": seen "CN_UNFOLD UNAME TYPE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_UNFOLD UNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1450.
##
## cn_statement -> CN_UNFOLD UNAME TYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME TYPE LPAREN
##

parsing "cn_statement": seen "CN_UNFOLD UNAME TYPE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_UNFOLD UNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1452.
##
## cn_statement -> CN_UNFOLD UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_UNFOLD UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statements: CN_UNFOLD LNAME VARIABLE WHILE
##
## Ends in an error in state: 1455.
##
## cn_statement -> CN_UNFOLD LNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME VARIABLE
##

parsing "cn_statement": seen "CN_UNFOLD LNAME VARIABLE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_UNFOLD LNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1456.
##
## cn_statement -> CN_UNFOLD LNAME VARIABLE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME VARIABLE LPAREN
##

parsing "cn_statement": seen "CN_UNFOLD LNAME VARIABLE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_UNFOLD LNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1458.
##
## cn_statement -> CN_UNFOLD LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_UNFOLD LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statements: CN_UNFOLD LNAME TYPE WHILE
##
## Ends in an error in state: 1460.
##
## cn_statement -> CN_UNFOLD LNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME TYPE
##

parsing "cn_statement": seen "CN_UNFOLD LNAME TYPE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_UNFOLD LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1461.
##
## cn_statement -> CN_UNFOLD LNAME TYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME TYPE LPAREN
##

parsing "cn_statement": seen "CN_UNFOLD LNAME TYPE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_UNFOLD LNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1463.
##
## cn_statement -> CN_UNFOLD LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_UNFOLD LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statements: CN_SPLIT_CASE WHILE
##
## Ends in an error in state: 1471.
##
## cn_statement -> CN_SPLIT_CASE . assert_expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_SPLIT_CASE
##

parsing "cn_statement": seen "CN_SPLIT_CASE", expecting "assert_expr SEMICOLON"

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE SEMICOLON WHILE
##
## Ends in an error in state: 1477.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON . expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON", expecting "expr RPAREN LBRACE expr RBRACE"

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1479.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN . LBRACE expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN", expecting "LBRACE expr RBRACE"

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN LBRACE WHILE
##
## Ends in an error in state: 1480.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE . expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE", expecting "expr RBRACE"

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE SEMICOLON WHILE
##
## Ends in an error in state: 1484.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON . expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON", expecting "expr RPAREN LBRACE expr RBRACE"

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE SEMICOLON CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1486.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN . LBRACE expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN", expecting "LBRACE expr RBRACE"

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE SEMICOLON CN_CONSTANT RPAREN LBRACE WHILE
##
## Ends in an error in state: 1487.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE . expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE", expecting "expr RBRACE"

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE SEMICOLON WHILE
##
## Ends in an error in state: 1492.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON . expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON", expecting "expr RPAREN LBRACE expr RBRACE"

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1494.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN . LBRACE expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN", expecting "LBRACE expr RBRACE"

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN LBRACE WHILE
##
## Ends in an error in state: 1495.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE . expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE", expecting "expr RBRACE"

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE SEMICOLON WHILE
##
## Ends in an error in state: 1499.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON . expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON", expecting "expr RPAREN LBRACE expr RBRACE"

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE SEMICOLON CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1501.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN . LBRACE expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN", expecting "LBRACE expr RBRACE"

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE SEMICOLON CN_CONSTANT RPAREN LBRACE WHILE
##
## Ends in an error in state: 1502.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE . expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE
##

parsing "assert_expr": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE", expecting "expr RBRACE"

cn_statements: CN_PRINT WHILE
##
## Ends in an error in state: 1508.
##
## cn_statement -> CN_PRINT . LPAREN expr RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_PRINT
##

parsing "cn_statement": seen "CN_PRINT", expecting "LPAREN expr RPAREN SEMICOLON"

cn_statements: CN_PRINT LPAREN WHILE
##
## Ends in an error in state: 1509.
##
## cn_statement -> CN_PRINT LPAREN . expr RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_PRINT LPAREN
##

parsing "cn_statement": seen "CN_PRINT LPAREN", expecting "expr RPAREN SEMICOLON"

cn_statements: CN_PRINT LPAREN CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1511.
##
## cn_statement -> CN_PRINT LPAREN expr RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_PRINT LPAREN expr RPAREN
##

parsing "cn_statement": seen "CN_PRINT LPAREN expr RPAREN", expecting "SEMICOLON"

cn_statements: CN_PACK WHILE
##
## Ends in an error in state: 1513.
##
## cn_statement -> CN_PACK . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_PACK
##

parsing "cn_statement": seen "CN_PACK", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_PACK CN_OWNED LPAREN WHILE
##
## Ends in an error in state: 1515.
##
## cn_statement -> CN_PACK pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_PACK pred LPAREN
##

parsing "cn_statement": seen "CN_PACK pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_PACK CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1517.
##
## cn_statement -> CN_PACK pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_PACK pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_PACK pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statements: CN_INSTANTIATE UNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 1522.
##
## cn_statement -> CN_INSTANTIATE UNAME VARIABLE COMMA . expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME VARIABLE COMMA
##

parsing "cn_statement": seen "CN_INSTANTIATE UNAME VARIABLE COMMA", expecting "expr SEMICOLON"

cn_statements: CN_INSTANTIATE UNAME TYPE COMMA WHILE
##
## Ends in an error in state: 1526.
##
## cn_statement -> CN_INSTANTIATE UNAME TYPE COMMA . expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME TYPE COMMA
##

parsing "cn_statement": seen "CN_INSTANTIATE UNAME TYPE COMMA", expecting "expr SEMICOLON"

cn_statements: CN_INSTANTIATE LNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 1531.
##
## cn_statement -> CN_INSTANTIATE LNAME VARIABLE COMMA . expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME VARIABLE COMMA
##

parsing "cn_statement": seen "CN_INSTANTIATE LNAME VARIABLE COMMA", expecting "expr SEMICOLON"

cn_statements: CN_INSTANTIATE LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 1535.
##
## cn_statement -> CN_INSTANTIATE LNAME TYPE COMMA . expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME TYPE COMMA
##

parsing "cn_statement": seen "CN_INSTANTIATE LNAME TYPE COMMA", expecting "expr SEMICOLON"

cn_statements: CN_INSTANTIATE CN_GOOD LT BOOL GT COMMA WHILE
##
## Ends in an error in state: 1541.
##
## cn_statement -> CN_INSTANTIATE cn_good COMMA . expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE cn_good COMMA
##

parsing "cn_statement": seen "CN_INSTANTIATE cn_good COMMA", expecting "expr SEMICOLON"

cn_statements: CN_HAVE WHILE
##
## Ends in an error in state: 1544.
##
## cn_statement -> CN_HAVE . assert_expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_HAVE
##

parsing "cn_statement": seen "CN_HAVE", expecting "assert_expr SEMICOLON"

cn_statements: CN_EXTRACT CN_OWNED COMMA WHILE
##
## Ends in an error in state: 1557.
##
## cn_statement -> CN_EXTRACT pred COMMA . expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_EXTRACT pred COMMA
##

parsing "cn_statement": seen "CN_EXTRACT pred COMMA", expecting "expr SEMICOLON"

cn_statements: CN_APPLY UNAME VARIABLE WHILE
##
## Ends in an error in state: 1564.
##
## cn_statement -> CN_APPLY UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME VARIABLE
##

parsing "cn_statement": seen "CN_APPLY UNAME VARIABLE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_APPLY UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1565.
##
## cn_statement -> CN_APPLY UNAME VARIABLE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME VARIABLE LPAREN
##

parsing "cn_statement": seen "CN_APPLY UNAME VARIABLE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_APPLY UNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1567.
##
## cn_statement -> CN_APPLY UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_APPLY UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statements: CN_APPLY UNAME TYPE WHILE
##
## Ends in an error in state: 1569.
##
## cn_statement -> CN_APPLY UNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME TYPE
##

parsing "cn_statement": seen "CN_APPLY UNAME TYPE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_APPLY UNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1570.
##
## cn_statement -> CN_APPLY UNAME TYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME TYPE LPAREN
##

parsing "cn_statement": seen "CN_APPLY UNAME TYPE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_APPLY UNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1572.
##
## cn_statement -> CN_APPLY UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_APPLY UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statements: CN_APPLY LNAME VARIABLE WHILE
##
## Ends in an error in state: 1575.
##
## cn_statement -> CN_APPLY LNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME VARIABLE
##

parsing "cn_statement": seen "CN_APPLY LNAME VARIABLE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_APPLY LNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1576.
##
## cn_statement -> CN_APPLY LNAME VARIABLE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME VARIABLE LPAREN
##

parsing "cn_statement": seen "CN_APPLY LNAME VARIABLE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_APPLY LNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1578.
##
## cn_statement -> CN_APPLY LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_APPLY LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statements: CN_APPLY LNAME TYPE WHILE
##
## Ends in an error in state: 1580.
##
## cn_statement -> CN_APPLY LNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME TYPE
##

parsing "cn_statement": seen "CN_APPLY LNAME TYPE", expecting "LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_APPLY LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1581.
##
## cn_statement -> CN_APPLY LNAME TYPE LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME TYPE LPAREN
##

parsing "cn_statement": seen "CN_APPLY LNAME TYPE LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_APPLY LNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1583.
##
## cn_statement -> CN_APPLY LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_APPLY LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statements: ASSERT WHILE
##
## Ends in an error in state: 1585.
##
## cn_statement -> ASSERT . LPAREN assert_expr RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## ASSERT
##

parsing "cn_statement": seen "ASSERT", expecting "LPAREN assert_expr RPAREN SEMICOLON"

cn_statements: ASSERT LPAREN WHILE
##
## Ends in an error in state: 1586.
##
## cn_statement -> ASSERT LPAREN . assert_expr RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN
##

parsing "cn_statement": seen "ASSERT LPAREN", expecting "assert_expr RPAREN SEMICOLON"

cn_statements: ASSERT LPAREN CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1588.
##
## cn_statement -> ASSERT LPAREN assert_expr RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN assert_expr RPAREN
##

parsing "cn_statement": seen "ASSERT LPAREN assert_expr RPAREN", expecting "SEMICOLON"

cn_toplevel: WHILE
##
## Ends in an error in state: 1595.
##
## cn_toplevel' -> . cn_toplevel [ # ]
##
## The known suffix of the stack is as follows:
##
##

parsing "cn_toplevel'": expected "cn_toplevel"

cn_toplevel: CN_TYPE_SYNONYM UNAME VARIABLE WHILE
##
## Ends in an error in state: 1598.
##
## cn_type_synonym -> CN_TYPE_SYNONYM UNAME VARIABLE . EQ opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TYPE_SYNONYM UNAME VARIABLE
##

parsing "cn_type_synonym": seen "CN_TYPE_SYNONYM UNAME VARIABLE", expecting "EQ opt_paren(base_type)"

cn_toplevel: CN_TYPE_SYNONYM UNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1599.
##
## cn_type_synonym -> CN_TYPE_SYNONYM UNAME VARIABLE EQ . opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TYPE_SYNONYM UNAME VARIABLE EQ
##

parsing "cn_type_synonym": seen "CN_TYPE_SYNONYM UNAME VARIABLE EQ", expecting "opt_paren(base_type)"

cn_toplevel: CN_PREDICATE LPAREN WHILE
##
## Ends in an error in state: 1600.
##
## opt_paren(base_type) -> LPAREN . base_type RPAREN [ UNAME EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

parsing "opt_paren(base_type)": seen "LPAREN", expecting "base_type RPAREN"

cn_toplevel: CN_PREDICATE LPAREN CN_ALLOC_ID WHILE
##
## Ends in an error in state: 1601.
##
## opt_paren(base_type) -> LPAREN base_type . RPAREN [ UNAME EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## LPAREN base_type
##

parsing "opt_paren(base_type)": seen "LPAREN base_type", expecting "RPAREN"

cn_toplevel: CN_TYPE_SYNONYM UNAME TYPE WHILE
##
## Ends in an error in state: 1605.
##
## cn_type_synonym -> CN_TYPE_SYNONYM UNAME TYPE . EQ opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TYPE_SYNONYM UNAME TYPE
##

parsing "cn_type_synonym": seen "CN_TYPE_SYNONYM UNAME TYPE", expecting "EQ opt_paren(base_type)"

cn_toplevel: CN_TYPE_SYNONYM UNAME TYPE EQ WHILE
##
## Ends in an error in state: 1606.
##
## cn_type_synonym -> CN_TYPE_SYNONYM UNAME TYPE EQ . opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TYPE_SYNONYM UNAME TYPE EQ
##

parsing "cn_type_synonym": seen "CN_TYPE_SYNONYM UNAME TYPE EQ", expecting "opt_paren(base_type)"

cn_toplevel: CN_TYPE_SYNONYM LNAME VARIABLE WHILE
##
## Ends in an error in state: 1609.
##
## cn_type_synonym -> CN_TYPE_SYNONYM LNAME VARIABLE . EQ opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TYPE_SYNONYM LNAME VARIABLE
##

parsing "cn_type_synonym": seen "CN_TYPE_SYNONYM LNAME VARIABLE", expecting "EQ opt_paren(base_type)"

cn_toplevel: CN_TYPE_SYNONYM LNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1610.
##
## cn_type_synonym -> CN_TYPE_SYNONYM LNAME VARIABLE EQ . opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TYPE_SYNONYM LNAME VARIABLE EQ
##

parsing "cn_type_synonym": seen "CN_TYPE_SYNONYM LNAME VARIABLE EQ", expecting "opt_paren(base_type)"

cn_toplevel: CN_TYPE_SYNONYM LNAME TYPE WHILE
##
## Ends in an error in state: 1612.
##
## cn_type_synonym -> CN_TYPE_SYNONYM LNAME TYPE . EQ opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TYPE_SYNONYM LNAME TYPE
##

parsing "cn_type_synonym": seen "CN_TYPE_SYNONYM LNAME TYPE", expecting "EQ opt_paren(base_type)"

cn_toplevel: CN_TYPE_SYNONYM LNAME TYPE EQ WHILE
##
## Ends in an error in state: 1613.
##
## cn_type_synonym -> CN_TYPE_SYNONYM LNAME TYPE EQ . opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TYPE_SYNONYM LNAME TYPE EQ
##

parsing "cn_type_synonym": seen "CN_TYPE_SYNONYM LNAME TYPE EQ", expecting "opt_paren(base_type)"

cn_toplevel: CN_SPEC UNAME VARIABLE WHILE
##
## Ends in an error in state: 1617.
##
## cn_fun_spec -> CN_SPEC UNAME VARIABLE . LPAREN cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC UNAME VARIABLE
##

parsing "cn_fun_spec": seen "CN_SPEC UNAME VARIABLE", expecting "LPAREN cn_args RPAREN SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1618.
##
## cn_fun_spec -> CN_SPEC UNAME VARIABLE LPAREN . cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC UNAME VARIABLE LPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC UNAME VARIABLE LPAREN", expecting "cn_args RPAREN SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC UNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1622.
##
## cn_fun_spec -> CN_SPEC UNAME VARIABLE LPAREN cn_args RPAREN . SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC UNAME VARIABLE LPAREN cn_args RPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC UNAME VARIABLE LPAREN cn_args RPAREN", expecting "SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC UNAME VARIABLE LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1623.
##
## cn_fun_spec -> CN_SPEC UNAME VARIABLE LPAREN cn_args RPAREN SEMICOLON . function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC UNAME VARIABLE LPAREN cn_args RPAREN SEMICOLON
##

parsing "cn_fun_spec": seen "CN_SPEC UNAME VARIABLE LPAREN cn_args RPAREN SEMICOLON", expecting "CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC UNAME VARIABLE LPAREN RPAREN SEMICOLON CN_REQUIRES WHILE
##
## Ends in an error in state: 1642.
##
## requires_clauses -> CN_REQUIRES . nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_REQUIRES
##

parsing "cn_fun_spec": seen "CN_SPEC UNAME VARIABLE LPAREN cn_args RPAREN SEMICOLON CN_REQUIRES", expecting "nonempty_list(condition) CN_ENSURES nonempty_list(condition)"














































cn_toplevel: CN_SPEC UNAME VARIABLE LPAREN RPAREN SEMICOLON CN_REQUIRES CN_CONSTANT SEMICOLON CN_ENSURES WHILE
##
## Ends in an error in state: 1737.
##
## ensures_clauses -> CN_ENSURES . nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_ENSURES
##

parsing "cn_fun_spec": seen "CN_SPEC UNAME VARIABLE LPAREN cn_args RPAREN SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES", expecting "nonempty_list(condition)"

cn_toplevel: CN_SPEC UNAME TYPE WHILE
##
## Ends in an error in state: 1746.
##
## cn_fun_spec -> CN_SPEC UNAME TYPE . LPAREN cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC UNAME TYPE
##

parsing "cn_fun_spec": seen "CN_SPEC UNAME TYPE", expecting "LPAREN cn_args RPAREN SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC UNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1747.
##
## cn_fun_spec -> CN_SPEC UNAME TYPE LPAREN . cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC UNAME TYPE LPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC UNAME TYPE LPAREN", expecting "cn_args RPAREN SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC UNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1749.
##
## cn_fun_spec -> CN_SPEC UNAME TYPE LPAREN cn_args RPAREN . SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC UNAME TYPE LPAREN cn_args RPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC UNAME TYPE LPAREN cn_args RPAREN", expecting "SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC UNAME TYPE LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1750.
##
## cn_fun_spec -> CN_SPEC UNAME TYPE LPAREN cn_args RPAREN SEMICOLON . function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC UNAME TYPE LPAREN cn_args RPAREN SEMICOLON
##

parsing "cn_fun_spec": seen "CN_SPEC UNAME TYPE LPAREN cn_args RPAREN SEMICOLON", expecting "CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC LNAME VARIABLE WHILE
##
## Ends in an error in state: 1753.
##
## cn_fun_spec -> CN_SPEC LNAME VARIABLE . LPAREN cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC LNAME VARIABLE
##

parsing "cn_fun_spec": seen "CN_SPEC LNAME VARIABLE", expecting "LPAREN cn_args RPAREN SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC LNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1754.
##
## cn_fun_spec -> CN_SPEC LNAME VARIABLE LPAREN . cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC LNAME VARIABLE LPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC LNAME VARIABLE LPAREN", expecting "cn_args RPAREN SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC LNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1756.
##
## cn_fun_spec -> CN_SPEC LNAME VARIABLE LPAREN cn_args RPAREN . SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC LNAME VARIABLE LPAREN cn_args RPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC LNAME VARIABLE LPAREN cn_args RPAREN", expecting "SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC LNAME VARIABLE LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1757.
##
## cn_fun_spec -> CN_SPEC LNAME VARIABLE LPAREN cn_args RPAREN SEMICOLON . function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC LNAME VARIABLE LPAREN cn_args RPAREN SEMICOLON
##

parsing "cn_fun_spec": seen "CN_SPEC LNAME VARIABLE LPAREN cn_args RPAREN SEMICOLON", expecting "CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC LNAME TYPE WHILE
##
## Ends in an error in state: 1759.
##
## cn_fun_spec -> CN_SPEC LNAME TYPE . LPAREN cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC LNAME TYPE
##

parsing "cn_fun_spec": seen "CN_SPEC LNAME TYPE", expecting "LPAREN cn_args RPAREN SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1760.
##
## cn_fun_spec -> CN_SPEC LNAME TYPE LPAREN . cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC LNAME TYPE LPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC LNAME TYPE LPAREN", expecting "cn_args RPAREN SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC LNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1762.
##
## cn_fun_spec -> CN_SPEC LNAME TYPE LPAREN cn_args RPAREN . SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC LNAME TYPE LPAREN cn_args RPAREN
##

parsing "cn_fun_spec": seen "CN_SPEC LNAME TYPE LPAREN cn_args RPAREN", expecting "SEMICOLON CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_SPEC LNAME TYPE LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1763.
##
## cn_fun_spec -> CN_SPEC LNAME TYPE LPAREN cn_args RPAREN SEMICOLON . function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC LNAME TYPE LPAREN cn_args RPAREN SEMICOLON
##

parsing "cn_fun_spec": seen "CN_SPEC LNAME TYPE LPAREN cn_args RPAREN SEMICOLON", expecting "CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_PREDICATE WHILE
##
## Ends in an error in state: 1765.
##
## cn_predicate -> CN_PREDICATE . cn_attrs cn_pred_output UNAME VARIABLE LPAREN cn_args RPAREN cn_option_pred_clauses [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE
##

parsing "cn_predicate": seen "CN_PREDICATE", expecting "cn_attrs cn_pred_output UNAME VARIABLE LPAREN cn_args RPAREN cn_option_pred_clauses"

cn_toplevel: CN_FUNCTION LBRACK WHILE
##
## Ends in an error in state: 1766.
##
## cn_attrs -> LBRACK . loption(separated_nonempty_list(COMMA,cn_variable)) RBRACK [ VOID UNAME STRUCT LPAREN LNAME LBRACE CN_TUPLE CN_SET CN_REAL CN_POINTER CN_MAP CN_LIST CN_INTEGER CN_DATATYPE CN_BOOL CN_BITS CN_ALLOC_ID ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

parsing "cn_attrs": seen "LBRACK", expecting "loption(separated_nonempty_list(COMMA,cn_variable)) RBRACK"

cn_toplevel: CN_PREDICATE LBRACK RBRACK WHILE
##
## Ends in an error in state: 1769.
##
## cn_predicate -> CN_PREDICATE cn_attrs . cn_pred_output UNAME VARIABLE LPAREN cn_args RPAREN cn_option_pred_clauses [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE cn_attrs
##

parsing "cn_predicate": seen "CN_PREDICATE cn_attrs", expecting "cn_pred_output UNAME VARIABLE LPAREN cn_args RPAREN cn_option_pred_clauses"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID WHILE
##
## Ends in an error in state: 1771.
##
## cn_predicate -> CN_PREDICATE cn_attrs cn_pred_output . UNAME VARIABLE LPAREN cn_args RPAREN cn_option_pred_clauses [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE cn_attrs cn_pred_output
##

parsing "cn_predicate": seen "CN_PREDICATE cn_attrs cn_pred_output", expecting "UNAME VARIABLE LPAREN cn_args RPAREN cn_option_pred_clauses"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME WHILE
##
## Ends in an error in state: 1772.
##
## cn_predicate -> CN_PREDICATE cn_attrs cn_pred_output UNAME . VARIABLE LPAREN cn_args RPAREN cn_option_pred_clauses [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE cn_attrs cn_pred_output UNAME
##

parsing "cn_predicate": seen "CN_PREDICATE cn_attrs cn_pred_output UNAME", expecting "VARIABLE LPAREN cn_args RPAREN cn_option_pred_clauses"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE WHILE
##
## Ends in an error in state: 1773.
##
## cn_predicate -> CN_PREDICATE cn_attrs cn_pred_output UNAME VARIABLE . LPAREN cn_args RPAREN cn_option_pred_clauses [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE cn_attrs cn_pred_output UNAME VARIABLE
##

parsing "cn_predicate": seen "CN_PREDICATE cn_attrs cn_pred_output UNAME VARIABLE", expecting "LPAREN cn_args RPAREN cn_option_pred_clauses"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1774.
##
## cn_predicate -> CN_PREDICATE cn_attrs cn_pred_output UNAME VARIABLE LPAREN . cn_args RPAREN cn_option_pred_clauses [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE cn_attrs cn_pred_output UNAME VARIABLE LPAREN
##

parsing "cn_predicate": seen "CN_PREDICATE cn_attrs cn_pred_output UNAME VARIABLE LPAREN", expecting "cn_args RPAREN cn_option_pred_clauses"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1776.
##
## cn_predicate -> CN_PREDICATE cn_attrs cn_pred_output UNAME VARIABLE LPAREN cn_args RPAREN . cn_option_pred_clauses [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE cn_attrs cn_pred_output UNAME VARIABLE LPAREN cn_args RPAREN
##

parsing "cn_predicate": seen "CN_PREDICATE cn_attrs cn_pred_output UNAME VARIABLE LPAREN cn_args RPAREN", expecting "cn_option_pred_clauses"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE WHILE
##
## Ends in an error in state: 1777.
##
## cn_option_pred_clauses -> LBRACE . clauses RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "cn_option_pred_clauses": seen "LBRACE", expecting "clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE IF WHILE
##
## Ends in an error in state: 1780.
##
## clauses -> IF . LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF
##

parsing "clauses": seen "IF", expecting "LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN WHILE
##
## Ends in an error in state: 1781.
##
## clauses -> IF LPAREN . expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN
##

parsing "clauses": seen "IF LPAREN", expecting "expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1783.
##
## clauses -> IF LPAREN expr RPAREN . LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN
##

parsing "clauses": seen "IF LPAREN expr RPAREN", expecting "LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_CONSTANT RPAREN LBRACE WHILE
##
## Ends in an error in state: 1784.
##
## clauses -> IF LPAREN expr RPAREN LBRACE . clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE
##

parsing "clauses": seen "IF LPAREN expr RPAREN LBRACE", expecting "clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1787.
##
## clause -> CN_TAKE UNAME VARIABLE . EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE
##

parsing "clause": seen "CN_TAKE UNAME VARIABLE", expecting "EQ resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1788.
##
## clause -> CN_TAKE UNAME VARIABLE EQ . resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE EQ
##

parsing "clause": seen "CN_TAKE UNAME VARIABLE EQ", expecting "resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME VARIABLE EQ CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1789.
##
## clause -> CN_TAKE UNAME VARIABLE EQ resource . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE EQ resource
##

parsing "clause": seen "CN_TAKE UNAME VARIABLE EQ resource", expecting "SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME VARIABLE EQ CN_OWNED LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1790.
##
## clause -> CN_TAKE UNAME VARIABLE EQ resource SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE EQ resource SEMICOLON
##

parsing "clause": seen "CN_TAKE UNAME VARIABLE EQ resource SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME VARIABLE WHILE
##
## Ends in an error in state: 1793.
##
## clause -> CN_LET UNAME VARIABLE . EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE
##

parsing "clause": seen "CN_LET UNAME VARIABLE", expecting "EQ expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1794.
##
## clause -> CN_LET UNAME VARIABLE EQ . expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ
##

parsing "clause": seen "CN_LET UNAME VARIABLE EQ", expecting "expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME VARIABLE EQ CN_CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1796.
##
## clause -> CN_LET UNAME VARIABLE EQ expr SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ expr SEMICOLON
##

parsing "clause": seen "CN_LET UNAME VARIABLE EQ expr SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE ASSERT WHILE
##
## Ends in an error in state: 1797.
##
## clause -> ASSERT . LPAREN assert_expr RPAREN SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSERT
##

parsing "clause": seen "ASSERT", expecting "LPAREN assert_expr RPAREN SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE ASSERT LPAREN WHILE
##
## Ends in an error in state: 1798.
##
## clause -> ASSERT LPAREN . assert_expr RPAREN SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN
##

parsing "clause": seen "ASSERT LPAREN", expecting "assert_expr RPAREN SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE ASSERT LPAREN CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1800.
##
## clause -> ASSERT LPAREN assert_expr RPAREN . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN assert_expr RPAREN
##

parsing "clause": seen "ASSERT LPAREN assert_expr RPAREN", expecting "SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE ASSERT LPAREN CN_CONSTANT RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1801.
##
## clause -> ASSERT LPAREN assert_expr RPAREN SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN assert_expr RPAREN SEMICOLON
##

parsing "clause": seen "ASSERT LPAREN assert_expr RPAREN SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME TYPE WHILE
##
## Ends in an error in state: 1804.
##
## clause -> CN_LET UNAME TYPE . EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE
##

parsing "clause": seen "CN_LET UNAME TYPE", expecting "EQ expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME TYPE EQ WHILE
##
## Ends in an error in state: 1805.
##
## clause -> CN_LET UNAME TYPE EQ . expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ
##

parsing "clause": seen "CN_LET UNAME TYPE EQ", expecting "expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME TYPE EQ CN_CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1807.
##
## clause -> CN_LET UNAME TYPE EQ expr SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ expr SEMICOLON
##

parsing "clause": seen "CN_LET UNAME TYPE EQ expr SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME VARIABLE WHILE
##
## Ends in an error in state: 1810.
##
## clause -> CN_LET LNAME VARIABLE . EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE
##

parsing "clause": seen "CN_LET LNAME VARIABLE", expecting "EQ expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1811.
##
## clause -> CN_LET LNAME VARIABLE EQ . expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ
##

parsing "clause": seen "CN_LET LNAME VARIABLE EQ", expecting "expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME VARIABLE EQ CN_CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1813.
##
## clause -> CN_LET LNAME VARIABLE EQ expr SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ expr SEMICOLON
##

parsing "clause": seen "CN_LET LNAME VARIABLE EQ expr SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME TYPE WHILE
##
## Ends in an error in state: 1815.
##
## clause -> CN_LET LNAME TYPE . EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE
##

parsing "clause": seen "CN_LET LNAME TYPE", expecting "EQ expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME TYPE EQ WHILE
##
## Ends in an error in state: 1816.
##
## clause -> CN_LET LNAME TYPE EQ . expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ
##

parsing "clause": seen "CN_LET LNAME TYPE EQ", expecting "expr SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME TYPE EQ CN_CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1818.
##
## clause -> CN_LET LNAME TYPE EQ expr SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ expr SEMICOLON
##

parsing "clause": seen "CN_LET LNAME TYPE EQ expr SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME TYPE WHILE
##
## Ends in an error in state: 1821.
##
## clause -> CN_TAKE UNAME TYPE . EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE
##

parsing "clause": seen "CN_TAKE UNAME TYPE", expecting "EQ resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME TYPE EQ WHILE
##
## Ends in an error in state: 1822.
##
## clause -> CN_TAKE UNAME TYPE EQ . resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE EQ
##

parsing "clause": seen "CN_TAKE UNAME TYPE EQ", expecting "resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME TYPE EQ CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1823.
##
## clause -> CN_TAKE UNAME TYPE EQ resource . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE EQ resource
##

parsing "clause": seen "CN_TAKE UNAME TYPE EQ resource", expecting "SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME TYPE EQ CN_OWNED LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1824.
##
## clause -> CN_TAKE UNAME TYPE EQ resource SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE EQ resource SEMICOLON
##

parsing "clause": seen "CN_TAKE UNAME TYPE EQ resource SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1827.
##
## clause -> CN_TAKE LNAME VARIABLE . EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE
##

parsing "clause": seen "CN_TAKE LNAME VARIABLE", expecting "EQ resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1828.
##
## clause -> CN_TAKE LNAME VARIABLE EQ . resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE EQ
##

parsing "clause": seen "CN_TAKE LNAME VARIABLE EQ", expecting "resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME VARIABLE EQ CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1829.
##
## clause -> CN_TAKE LNAME VARIABLE EQ resource . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE EQ resource
##

parsing "clause": seen "CN_TAKE LNAME VARIABLE EQ resource", expecting "SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME VARIABLE EQ CN_OWNED LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1830.
##
## clause -> CN_TAKE LNAME VARIABLE EQ resource SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE EQ resource SEMICOLON
##

parsing "clause": seen "CN_TAKE LNAME VARIABLE EQ resource SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME TYPE WHILE
##
## Ends in an error in state: 1832.
##
## clause -> CN_TAKE LNAME TYPE . EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE
##

parsing "clause": seen "CN_TAKE LNAME TYPE", expecting "EQ resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME TYPE EQ WHILE
##
## Ends in an error in state: 1833.
##
## clause -> CN_TAKE LNAME TYPE EQ . resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE EQ
##

parsing "clause": seen "CN_TAKE LNAME TYPE EQ", expecting "resource SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME TYPE EQ CN_OWNED LPAREN RPAREN WHILE
##
## Ends in an error in state: 1834.
##
## clause -> CN_TAKE LNAME TYPE EQ resource . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE EQ resource
##

parsing "clause": seen "CN_TAKE LNAME TYPE EQ resource", expecting "SEMICOLON clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME TYPE EQ CN_OWNED LPAREN RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 1835.
##
## clause -> CN_TAKE LNAME TYPE EQ resource SEMICOLON . clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE EQ resource SEMICOLON
##

parsing "clause": seen "CN_TAKE LNAME TYPE EQ resource SEMICOLON", expecting "clause"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_CONSTANT RPAREN LBRACE RETURN SEMICOLON WHILE
##
## Ends in an error in state: 1838.
##
## clauses -> IF LPAREN expr RPAREN LBRACE clause SEMICOLON . RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE clause SEMICOLON
##

parsing "clauses": seen "IF LPAREN expr RPAREN LBRACE clause SEMICOLON", expecting "RBRACE ELSE LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_CONSTANT RPAREN LBRACE RETURN SEMICOLON RBRACE WHILE
##
## Ends in an error in state: 1839.
##
## clauses -> IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE . ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE
##

parsing "clauses": seen "IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE", expecting "ELSE LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_CONSTANT RPAREN LBRACE RETURN SEMICOLON RBRACE ELSE WHILE
##
## Ends in an error in state: 1840.
##
## clauses -> IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE . LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE
##

parsing "clauses": seen "IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE", expecting "LBRACE clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_CONSTANT RPAREN LBRACE RETURN SEMICOLON RBRACE ELSE LBRACE WHILE
##
## Ends in an error in state: 1841.
##
## clauses -> IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE . clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE
##

parsing "clauses": seen "IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE", expecting "clauses RBRACE"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_CONSTANT RPAREN LBRACE RETURN SEMICOLON RBRACE ELSE LBRACE RETURN SEMICOLON WHILE
##
## Ends in an error in state: 1842.
##
## clauses -> IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses . RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses
##

parsing "clauses": seen "IF LPAREN expr RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses", expecting "RBRACE"

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE RETURN SEMICOLON WHILE
##
## Ends in an error in state: 1846.
##
## cn_option_pred_clauses -> LBRACE clauses . RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## LBRACE clauses
##

parsing "cn_option_pred_clauses": seen "LBRACE clauses", expecting "RBRACE"

cn_toplevel: CN_LEMMA UNAME VARIABLE WHILE
##
## Ends in an error in state: 1851.
##
## cn_lemma -> CN_LEMMA UNAME VARIABLE . LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME VARIABLE
##

parsing "cn_lemma": seen "CN_LEMMA UNAME VARIABLE", expecting "LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1852.
##
## cn_lemma -> CN_LEMMA UNAME VARIABLE LPAREN . cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME VARIABLE LPAREN
##

parsing "cn_lemma": seen "CN_LEMMA UNAME VARIABLE LPAREN", expecting "cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA UNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1854.
##
## cn_lemma -> CN_LEMMA UNAME VARIABLE LPAREN cn_args RPAREN . CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME VARIABLE LPAREN cn_args RPAREN
##

parsing "cn_lemma": seen "CN_LEMMA UNAME VARIABLE LPAREN cn_args RPAREN", expecting "CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA UNAME VARIABLE LPAREN RPAREN CN_REQUIRES WHILE
##
## Ends in an error in state: 1855.
##
## cn_lemma -> CN_LEMMA UNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES . nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES
##

parsing "cn_lemma": seen "CN_LEMMA UNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES", expecting "nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA UNAME VARIABLE LPAREN RPAREN CN_REQUIRES CN_CONSTANT SEMICOLON CN_ENSURES WHILE
##
## Ends in an error in state: 1857.
##
## cn_lemma -> CN_LEMMA UNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES . nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES
##

parsing "cn_lemma": seen "CN_LEMMA UNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES", expecting "nonempty_list(condition)"

cn_toplevel: CN_LEMMA UNAME TYPE WHILE
##
## Ends in an error in state: 1859.
##
## cn_lemma -> CN_LEMMA UNAME TYPE . LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME TYPE
##

parsing "cn_lemma": seen "CN_LEMMA UNAME TYPE", expecting "LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA UNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1860.
##
## cn_lemma -> CN_LEMMA UNAME TYPE LPAREN . cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME TYPE LPAREN
##

parsing "cn_lemma": seen "CN_LEMMA UNAME TYPE LPAREN", expecting "cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA UNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1862.
##
## cn_lemma -> CN_LEMMA UNAME TYPE LPAREN cn_args RPAREN . CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME TYPE LPAREN cn_args RPAREN
##

parsing "cn_lemma": seen "CN_LEMMA UNAME TYPE LPAREN cn_args RPAREN", expecting "CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA UNAME TYPE LPAREN RPAREN CN_REQUIRES WHILE
##
## Ends in an error in state: 1863.
##
## cn_lemma -> CN_LEMMA UNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES . nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES
##

parsing "cn_lemma": seen "CN_LEMMA UNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES", expecting "nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA UNAME TYPE LPAREN RPAREN CN_REQUIRES CN_CONSTANT SEMICOLON CN_ENSURES WHILE
##
## Ends in an error in state: 1865.
##
## cn_lemma -> CN_LEMMA UNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES . nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES
##

parsing "cn_lemma": seen "CN_LEMMA UNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES", expecting "nonempty_list(condition)"

cn_toplevel: CN_LEMMA LNAME VARIABLE WHILE
##
## Ends in an error in state: 1868.
##
## cn_lemma -> CN_LEMMA LNAME VARIABLE . LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME VARIABLE
##

parsing "cn_lemma": seen "CN_LEMMA LNAME VARIABLE", expecting "LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA LNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1869.
##
## cn_lemma -> CN_LEMMA LNAME VARIABLE LPAREN . cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME VARIABLE LPAREN
##

parsing "cn_lemma": seen "CN_LEMMA LNAME VARIABLE LPAREN", expecting "cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA LNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1871.
##
## cn_lemma -> CN_LEMMA LNAME VARIABLE LPAREN cn_args RPAREN . CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME VARIABLE LPAREN cn_args RPAREN
##

parsing "cn_lemma": seen "CN_LEMMA LNAME VARIABLE LPAREN cn_args RPAREN", expecting "CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA LNAME VARIABLE LPAREN RPAREN CN_REQUIRES WHILE
##
## Ends in an error in state: 1872.
##
## cn_lemma -> CN_LEMMA LNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES . nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES
##

parsing "cn_lemma": seen "CN_LEMMA LNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES", expecting "nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA LNAME VARIABLE LPAREN RPAREN CN_REQUIRES CN_CONSTANT SEMICOLON CN_ENSURES WHILE
##
## Ends in an error in state: 1874.
##
## cn_lemma -> CN_LEMMA LNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES . nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES
##

parsing "cn_lemma": seen "CN_LEMMA LNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES", expecting "nonempty_list(condition)"

cn_toplevel: CN_LEMMA LNAME TYPE WHILE
##
## Ends in an error in state: 1876.
##
## cn_lemma -> CN_LEMMA LNAME TYPE . LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME TYPE
##

parsing "cn_lemma": seen "CN_LEMMA LNAME TYPE", expecting "LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1877.
##
## cn_lemma -> CN_LEMMA LNAME TYPE LPAREN . cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME TYPE LPAREN
##

parsing "cn_lemma": seen "CN_LEMMA LNAME TYPE LPAREN", expecting "cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA LNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1879.
##
## cn_lemma -> CN_LEMMA LNAME TYPE LPAREN cn_args RPAREN . CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME TYPE LPAREN cn_args RPAREN
##

parsing "cn_lemma": seen "CN_LEMMA LNAME TYPE LPAREN cn_args RPAREN", expecting "CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA LNAME TYPE LPAREN RPAREN CN_REQUIRES WHILE
##
## Ends in an error in state: 1880.
##
## cn_lemma -> CN_LEMMA LNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES . nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES
##

parsing "cn_lemma": seen "CN_LEMMA LNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES", expecting "nonempty_list(condition) CN_ENSURES nonempty_list(condition)"

cn_toplevel: CN_LEMMA LNAME TYPE LPAREN RPAREN CN_REQUIRES CN_CONSTANT SEMICOLON CN_ENSURES WHILE
##
## Ends in an error in state: 1882.
##
## cn_lemma -> CN_LEMMA LNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES . nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES
##

parsing "cn_lemma": seen "CN_LEMMA LNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES", expecting "nonempty_list(condition)"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN UNAME VARIABLE WHILE
##
## Ends in an error in state: 1890.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME VARIABLE . LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME VARIABLE
##

parsing "cn_function": seen "CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME VARIABLE", expecting "LPAREN cn_args RPAREN cn_option_func_body"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN UNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1891.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN . cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN
##

parsing "cn_function": seen "CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN", expecting "cn_args RPAREN cn_option_func_body"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN UNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1893.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN cn_args RPAREN . cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN cn_args RPAREN
##

parsing "cn_function": seen "CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN cn_args RPAREN", expecting "cn_option_func_body"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN LNAME TYPE LPAREN RPAREN LBRACE WHILE
##
## Ends in an error in state: 1894.
##
## cn_option_func_body -> LBRACE . expr RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "cn_option_func_body": seen "LBRACE", expecting "expr RBRACE"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN UNAME TYPE WHILE
##
## Ends in an error in state: 1898.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME TYPE . LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME TYPE
##

parsing "cn_function": seen "CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME TYPE", expecting "LPAREN cn_args RPAREN cn_option_func_body"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN UNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1899.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN . cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN
##

parsing "cn_function": seen "CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN", expecting "cn_args RPAREN cn_option_func_body"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN UNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1901.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN cn_args RPAREN . cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN cn_args RPAREN
##

parsing "cn_function": seen "CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN cn_args RPAREN", expecting "cn_option_func_body"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN LNAME VARIABLE WHILE
##
## Ends in an error in state: 1904.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME VARIABLE . LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME VARIABLE
##

parsing "cn_function": seen "CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME VARIABLE", expecting "LPAREN cn_args RPAREN cn_option_func_body"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN LNAME VARIABLE LPAREN WHILE
##
## Ends in an error in state: 1905.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN . cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN
##

parsing "cn_function": seen "CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN", expecting "cn_args RPAREN cn_option_func_body"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN LNAME VARIABLE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1907.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN cn_args RPAREN . cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN cn_args RPAREN
##

parsing "cn_function": seen "CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN cn_args RPAREN", expecting "cn_option_func_body"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN LNAME TYPE WHILE
##
## Ends in an error in state: 1909.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME TYPE . LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME TYPE
##

parsing "cn_function": seen "CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME TYPE", expecting "LPAREN cn_args RPAREN cn_option_func_body"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 1910.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN . cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN
##

parsing "cn_function": seen "CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN", expecting "cn_args RPAREN cn_option_func_body"

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN LNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 1912.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN cn_args RPAREN . cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN cn_args RPAREN
##

parsing "cn_function": seen "CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN cn_args RPAREN", expecting "cn_option_func_body"

cn_toplevel: CN_DATATYPE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1916.
##
## cn_datatype -> CN_DATATYPE UNAME VARIABLE . LBRACE cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE UNAME VARIABLE
##

parsing "cn_datatype": seen "CN_DATATYPE UNAME VARIABLE", expecting "LBRACE cn_cons_cases RBRACE"

cn_toplevel: CN_DATATYPE UNAME VARIABLE LBRACE WHILE
##
## Ends in an error in state: 1917.
##
## cn_datatype -> CN_DATATYPE UNAME VARIABLE LBRACE . cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE UNAME VARIABLE LBRACE
##

parsing "cn_datatype": seen "CN_DATATYPE UNAME VARIABLE LBRACE", expecting "cn_cons_cases RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1919.
##
## cn_cons_case -> UNAME VARIABLE . LBRACE cn_args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

parsing "cn_cons_case": seen "UNAME VARIABLE", expecting "LBRACE cn_args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME VARIABLE LBRACE WHILE
##
## Ends in an error in state: 1920.
##
## cn_cons_case -> UNAME VARIABLE LBRACE . cn_args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE LBRACE
##

parsing "cn_cons_case": seen "UNAME VARIABLE LBRACE", expecting "cn_args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME TYPE WHILE
##
## Ends in an error in state: 1923.
##
## cn_cons_case -> UNAME TYPE . LBRACE cn_args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

parsing "cn_cons_case": seen "UNAME TYPE", expecting "LBRACE cn_args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 1924.
##
## cn_cons_case -> UNAME TYPE LBRACE . cn_args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE LBRACE
##

parsing "cn_cons_case": seen "UNAME TYPE LBRACE", expecting "cn_args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1928.
##
## cn_cons_case -> LNAME VARIABLE . LBRACE cn_args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

parsing "cn_cons_case": seen "LNAME VARIABLE", expecting "LBRACE cn_args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME VARIABLE LBRACE WHILE
##
## Ends in an error in state: 1929.
##
## cn_cons_case -> LNAME VARIABLE LBRACE . cn_args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE LBRACE
##

parsing "cn_cons_case": seen "LNAME VARIABLE LBRACE", expecting "cn_args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 1932.
##
## cn_cons_case -> LNAME TYPE . LBRACE cn_args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

parsing "cn_cons_case": seen "LNAME TYPE", expecting "LBRACE cn_args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 1933.
##
## cn_cons_case -> LNAME TYPE LBRACE . cn_args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE LBRACE
##

parsing "cn_cons_case": seen "LNAME TYPE LBRACE", expecting "cn_args RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME TYPE LBRACE RBRACE COMMA WHILE
##
## Ends in an error in state: 1941.
##
## separated_nonempty_list(COMMA,cn_cons_case) -> cn_cons_case COMMA . separated_nonempty_list(COMMA,cn_cons_case) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## cn_cons_case COMMA
##

parsing "separated_nonempty_list(COMMA,cn_cons_case)": seen "cn_cons_case COMMA", expecting "separated_nonempty_list(COMMA,cn_cons_case)"

cn_toplevel: CN_DATATYPE UNAME TYPE WHILE
##
## Ends in an error in state: 1943.
##
## cn_datatype -> CN_DATATYPE UNAME TYPE . LBRACE cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE UNAME TYPE
##

parsing "cn_datatype": seen "CN_DATATYPE UNAME TYPE", expecting "LBRACE cn_cons_cases RBRACE"

cn_toplevel: CN_DATATYPE UNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 1944.
##
## cn_datatype -> CN_DATATYPE UNAME TYPE LBRACE . cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE UNAME TYPE LBRACE
##

parsing "cn_datatype": seen "CN_DATATYPE UNAME TYPE LBRACE", expecting "cn_cons_cases RBRACE"

cn_toplevel: CN_DATATYPE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1948.
##
## cn_datatype -> CN_DATATYPE LNAME VARIABLE . LBRACE cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE LNAME VARIABLE
##

parsing "cn_datatype": seen "CN_DATATYPE LNAME VARIABLE", expecting "LBRACE cn_cons_cases RBRACE"

cn_toplevel: CN_DATATYPE LNAME VARIABLE LBRACE WHILE
##
## Ends in an error in state: 1949.
##
## cn_datatype -> CN_DATATYPE LNAME VARIABLE LBRACE . cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE LNAME VARIABLE LBRACE
##

parsing "cn_datatype": seen "CN_DATATYPE LNAME VARIABLE LBRACE", expecting "cn_cons_cases RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE WHILE
##
## Ends in an error in state: 1952.
##
## cn_datatype -> CN_DATATYPE LNAME TYPE . LBRACE cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE LNAME TYPE
##

parsing "cn_datatype": seen "CN_DATATYPE LNAME TYPE", expecting "LBRACE cn_cons_cases RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 1953.
##
## cn_datatype -> CN_DATATYPE LNAME TYPE LBRACE . cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE LNAME TYPE LBRACE
##

parsing "cn_datatype": seen "CN_DATATYPE LNAME TYPE LBRACE", expecting "cn_cons_cases RBRACE"

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE RBRACE WHILE
##
## Ends in an error in state: 1959.
##
## list(cn_toplevel_elem) -> cn_toplevel_elem . list(cn_toplevel_elem) [ EOF ]
##
## The known suffix of the stack is as follows:
## cn_toplevel_elem
##

parsing "list(cn_toplevel_elem)": seen "cn_toplevel_elem", expecting "list(cn_toplevel_elem)"











loop_spec: WHILE
##
## Ends in an error in state: 1971.
##
## loop_spec' -> . loop_spec [ # ]
##
## The known suffix of the stack is as follows:
##
##

parsing "loop_spec'": expected "loop_spec"

loop_spec: CN_INV WHILE
##
## Ends in an error in state: 1972.
##
## loop_spec -> CN_INV . nonempty_list(condition) EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_INV
##

parsing "loop_spec": seen "CN_INV", expecting "nonempty_list(condition) EOF"

translation_unit: WHILE
##
## Ends in an error in state: 1976.
##
## translation_unit' -> . translation_unit [ # ]
##
## The known suffix of the stack is as follows:
##
##

parsing "translation_unit'": expected "translation_unit"


cn_statements: CN_EXTRACT AMPERSAND LPAREN LPAREN WHILE
##
## Ends in an error in state: 1075.
##
## prim_expr -> LPAREN . expr RPAREN [ MINUS_GT LBRACK DOT COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

parsing "prim_expr": seen "LPAREN", expecting "expr RPAREN"

translation_unit: ALIGNAS LPAREN LPAREN LBRACE IF LPAREN STRING_LITERAL RPAREN VOLATILE
##
## Ends in an error in state: 658.
##
## scoped(statement) -> save_context . statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## save_context
##

parsing "scoped(statement)": seen "save_context", expecting "statement"

cn_statements: CN_EXTRACT CN_CONSTANT CN_IMPLIES WHILE
##
## Ends in an error in state: 1113.
##
## bool_implies_expr -> bool_and_expr CN_IMPLIES . bool_implies_expr [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PIPE_PIPE COMMA COLON ]
##
## The known suffix of the stack is as follows:
## bool_and_expr CN_IMPLIES
##

parsing "bool_implies_expr": seen "bool_and_expr CN_IMPLIES", expecting "bool_implies_expr"


cn_statements: CN_EXTRACT STRUCT UNAME VARIABLE WHILE
##
## Ends in an error in state: 864.
##
## prim_expr -> STRUCT UNAME VARIABLE . LBRACE record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT UNAME VARIABLE
##

parsing "prim_expr": seen "STRUCT UNAME VARIABLE", expecting "LBRACE record_def RBRACE"

cn_statements: CN_EXTRACT STRUCT UNAME VARIABLE LBRACE WHILE
##
## Ends in an error in state: 865.
##
## prim_expr -> STRUCT UNAME VARIABLE LBRACE . record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT UNAME VARIABLE LBRACE
##

parsing "prim_expr": seen "STRUCT UNAME VARIABLE LBRACE", expecting "record_def RBRACE"

cn_statements: CN_EXTRACT STRUCT UNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 934.
##
## prim_expr -> STRUCT UNAME TYPE LBRACE . record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT UNAME TYPE LBRACE
##

parsing "prim_expr": seen "STRUCT UNAME TYPE LBRACE", expecting "record_def RBRACE"


cn_statements: CN_EXTRACT STRUCT LNAME VARIABLE LBRACE WHILE
##
## Ends in an error in state: 1408.
##
## prim_expr -> STRUCT LNAME VARIABLE LBRACE . record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT LNAME VARIABLE LBRACE
##

parsing "prim_expr": seen "STRUCT LNAME VARIABLE LBRACE", expecting "record_def RBRACE"

cn_statements: CN_EXTRACT STRUCT LNAME TYPE LBRACE WHILE
##
## Ends in an error in state: 1412.
##
## prim_expr -> STRUCT LNAME TYPE LBRACE . record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT LNAME TYPE LBRACE
##

parsing "prim_expr": seen "STRUCT LNAME TYPE LBRACE", expecting "record_def RBRACE"

cn_statements: CN_EXTRACT STRUCT UNAME TYPE WHILE
##
## Ends in an error in state: 1431.
##
## prim_expr -> STRUCT UNAME TYPE . LBRACE record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT UNAME TYPE
##

parsing "prim_expr": seen "STRUCT UNAME TYPE", expecting "LBRACE record_def RBRACE"

cn_statements: CN_EXTRACT STRUCT LNAME VARIABLE WHILE
##
## Ends in an error in state: 1433.
##
## prim_expr -> STRUCT LNAME VARIABLE . LBRACE record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT LNAME VARIABLE
##

parsing "prim_expr": seen "STRUCT LNAME VARIABLE", expecting "LBRACE record_def RBRACE"

cn_statements: CN_EXTRACT STRUCT LNAME TYPE WHILE
##
## Ends in an error in state: 1434.
##
## prim_expr -> STRUCT LNAME TYPE . LBRACE record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT LNAME TYPE
##

parsing "prim_expr": seen "STRUCT LNAME TYPE", expecting "LBRACE record_def RBRACE"

cn_statements: CN_EXTRACT TILDE WHILE
##
## Ends in an error in state: 861.
##
## unary_expr -> TILDE . unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## TILDE
##

parsing "unary_expr": seen "TILDE", expecting "unary_expr"

cn_statements: CN_EXTRACT CN_CONSTANT PERCENT WHILE
##
## Ends in an error in state: 1120.
##
## mul_expr -> mul_expr PERCENT . unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## mul_expr PERCENT
##

parsing "mul_expr": seen "mul_expr PERCENT", expecting "unary_expr"

cn_statements: CN_EXTRACT CN_CONSTANT AMPERSAND WHILE
##
## Ends in an error in state: 1124.
##
## mul_expr -> mul_expr AMPERSAND . unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## mul_expr AMPERSAND
##

parsing "mul_expr": seen "mul_expr AMPERSAND", expecting "unary_expr"

cn_toplevel: CN_PREDICATE CN_LIST WHILE
##
## Ends in an error in state: 981.
##
## base_type_explicit -> CN_LIST . LT base_type GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LIST
##

parsing "base_type_explicit": seen "CN_LIST", expecting "LT base_type GT"

cn_toplevel: CN_PREDICATE CN_LIST LT WHILE
##
## Ends in an error in state: 982.
##
## base_type_explicit -> CN_LIST LT . base_type GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LIST LT
##

parsing "base_type_explicit": seen "CN_LIST LT", expecting "base_type GT"

cn_toplevel: CN_PREDICATE CN_LIST LT CN_ALLOC_ID WHILE
##
## Ends in an error in state: 995.
##
## base_type_explicit -> CN_LIST LT base_type . GT [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LIST LT base_type
##

parsing "base_type_explicit": seen "CN_LIST LT base_type", expecting "GT"

cn_statements: CN_EXTRACT CN_CONSTANT CARET WHILE
##
## Ends in an error in state: 1122.
##
## mul_expr -> mul_expr CARET . unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## mul_expr CARET
##

parsing "mul_expr": seen "mul_expr CARET", expecting "unary_expr"

cn_statements: CN_EXTRACT CN_CONSTANT PIPE WHILE
##
## Ends in an error in state: 1126.
##
## add_expr -> add_expr PIPE . mul_expr [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
##
## The known suffix of the stack is as follows:
## add_expr PIPE
##

parsing "add_expr": seen "add_expr PIPE", expecting "mul_expr"

cn_statements: CN_TO_BYTES WHILE
##
## Ends in an error in state: 1465.
##
## cn_statement -> CN_TO_BYTES . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_TO_BYTES
##

parsing "cn_statement": seen "CN_TO_BYTES", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_TO_BYTES CN_BLOCK LPAREN RPAREN WHILE
##
## Ends in an error in state: 1469.
##
## cn_statement -> CN_TO_BYTES pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_TO_BYTES pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_TO_BYTES pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"

cn_statements: CN_FROM_BYTES WHILE
##
## Ends in an error in state: 1547.
##
## cn_statement -> CN_FROM_BYTES . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_FROM_BYTES
##

parsing "cn_statement": seen "CN_FROM_BYTES", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_FROM_BYTES CN_BLOCK LPAREN RPAREN WHILE
##
## Ends in an error in state: 1551.
##
## cn_statement -> CN_FROM_BYTES pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_FROM_BYTES pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "cn_statement": seen "CN_FROM_BYTES pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "SEMICOLON"














cn_statements: CN_TO_BYTES CN_BLOCK LPAREN WHILE
##
## Ends in an error in state: 1467.
##
## cn_statement -> CN_TO_BYTES pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_TO_BYTES pred LPAREN
##

parsing "cn_statement": seen "CN_TO_BYTES pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"

cn_statements: CN_FROM_BYTES CN_BLOCK LPAREN WHILE
##
## Ends in an error in state: 1549.
##
## cn_statement -> CN_FROM_BYTES pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_FROM_BYTES pred LPAREN
##

parsing "cn_statement": seen "CN_FROM_BYTES pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON"










































loop_spec: CN_INV CN_TAKE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1645.
##
## condition -> CN_TAKE UNAME VARIABLE . EQ resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE
##

parsing "condition": seen "CN_TAKE UNAME VARIABLE", expecting "EQ resource SEMICOLON"

loop_spec: CN_INV CN_TAKE UNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1646.
##
## condition -> CN_TAKE UNAME VARIABLE EQ . resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE EQ
##

parsing "condition": seen "CN_TAKE UNAME VARIABLE EQ", expecting "resource SEMICOLON"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE WHILE
##
## Ends in an error in state: 1651.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE . SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME VARIABLE", expecting "SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE SEMICOLON WHILE
##
## Ends in an error in state: 1652.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON . expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON", expecting "expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1654.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN . LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN", expecting "LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN LBRACE WHILE
##
## Ends in an error in state: 1655.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_BLOCK LPAREN WHILE
##
## Ends in an error in state: 1657.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_BLOCK LPAREN RPAREN WHILE
##
## Ends in an error in state: 1659.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE WHILE
##
## Ends in an error in state: 1661.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE . SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME TYPE", expecting "SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE SEMICOLON WHILE
##
## Ends in an error in state: 1662.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON . expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON", expecting "expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE SEMICOLON CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1664.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN . LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN", expecting "LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE SEMICOLON CN_CONSTANT RPAREN LBRACE WHILE
##
## Ends in an error in state: 1665.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_BLOCK LPAREN WHILE
##
## Ends in an error in state: 1667.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_BLOCK LPAREN RPAREN WHILE
##
## Ends in an error in state: 1669.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE WHILE
##
## Ends in an error in state: 1672.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE . SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME VARIABLE", expecting "SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE SEMICOLON WHILE
##
## Ends in an error in state: 1673.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON . expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON", expecting "expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1675.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN . LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN", expecting "LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN LBRACE WHILE
##
## Ends in an error in state: 1676.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_BLOCK LPAREN WHILE
##
## Ends in an error in state: 1678.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_BLOCK LPAREN RPAREN WHILE
##
## Ends in an error in state: 1680.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE WHILE
##
## Ends in an error in state: 1682.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE . SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME TYPE", expecting "SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE SEMICOLON WHILE
##
## Ends in an error in state: 1683.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON . expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON", expecting "expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE SEMICOLON CN_CONSTANT RPAREN WHILE
##
## Ends in an error in state: 1685.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN . LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN", expecting "LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE SEMICOLON CN_CONSTANT RPAREN LBRACE WHILE
##
## Ends in an error in state: 1686.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE . pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE", expecting "pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_BLOCK LPAREN WHILE
##
## Ends in an error in state: 1688.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_BLOCK LPAREN RPAREN WHILE
##
## Ends in an error in state: 1690.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN . RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN
##

parsing "resource": seen "CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN", expecting "RBRACE"

loop_spec: CN_INV CN_TAKE UNAME VARIABLE EQ CN_BLOCK LPAREN RPAREN WHILE
##
## Ends in an error in state: 1692.
##
## condition -> CN_TAKE UNAME VARIABLE EQ resource . SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME VARIABLE EQ resource
##

parsing "condition": seen "CN_TAKE UNAME VARIABLE EQ resource", expecting "SEMICOLON"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_BLOCK LPAREN WHILE
##
## Ends in an error in state: 1695.
##
## resource -> pred LPAREN . loption(separated_nonempty_list(COMMA,expr)) RPAREN [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## pred LPAREN
##

parsing "resource": seen "pred LPAREN", expecting "loption(separated_nonempty_list(COMMA,expr)) RPAREN"

loop_spec: CN_INV CN_TAKE UNAME TYPE WHILE
##
## Ends in an error in state: 1698.
##
## condition -> CN_TAKE UNAME TYPE . EQ resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE
##

parsing "condition": seen "CN_TAKE UNAME TYPE", expecting "EQ resource SEMICOLON"

loop_spec: CN_INV CN_TAKE UNAME TYPE EQ WHILE
##
## Ends in an error in state: 1699.
##
## condition -> CN_TAKE UNAME TYPE EQ . resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE EQ
##

parsing "condition": seen "CN_TAKE UNAME TYPE EQ", expecting "resource SEMICOLON"

loop_spec: CN_INV CN_TAKE UNAME TYPE EQ CN_BLOCK LPAREN RPAREN WHILE
##
## Ends in an error in state: 1700.
##
## condition -> CN_TAKE UNAME TYPE EQ resource . SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME TYPE EQ resource
##

parsing "condition": seen "CN_TAKE UNAME TYPE EQ resource", expecting "SEMICOLON"

loop_spec: CN_INV CN_TAKE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1703.
##
## condition -> CN_TAKE LNAME VARIABLE . EQ resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE
##

parsing "condition": seen "CN_TAKE LNAME VARIABLE", expecting "EQ resource SEMICOLON"

loop_spec: CN_INV CN_TAKE LNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1704.
##
## condition -> CN_TAKE LNAME VARIABLE EQ . resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE EQ
##

parsing "condition": seen "CN_TAKE LNAME VARIABLE EQ", expecting "resource SEMICOLON"

loop_spec: CN_INV CN_TAKE LNAME VARIABLE EQ CN_BLOCK LPAREN RPAREN WHILE
##
## Ends in an error in state: 1705.
##
## condition -> CN_TAKE LNAME VARIABLE EQ resource . SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME VARIABLE EQ resource
##

parsing "condition": seen "CN_TAKE LNAME VARIABLE EQ resource", expecting "SEMICOLON"

loop_spec: CN_INV CN_TAKE LNAME TYPE WHILE
##
## Ends in an error in state: 1707.
##
## condition -> CN_TAKE LNAME TYPE . EQ resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE
##

parsing "condition": seen "CN_TAKE LNAME TYPE", expecting "EQ resource SEMICOLON"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ WHILE
##
## Ends in an error in state: 1708.
##
## condition -> CN_TAKE LNAME TYPE EQ . resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE EQ
##

parsing "condition": seen "CN_TAKE LNAME TYPE EQ", expecting "resource SEMICOLON"

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_BLOCK LPAREN RPAREN WHILE
##
## Ends in an error in state: 1709.
##
## condition -> CN_TAKE LNAME TYPE EQ resource . SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME TYPE EQ resource
##

parsing "condition": seen "CN_TAKE LNAME TYPE EQ resource", expecting "SEMICOLON"

loop_spec: CN_INV CN_LET UNAME VARIABLE WHILE
##
## Ends in an error in state: 1713.
##
## condition -> CN_LET UNAME VARIABLE . EQ expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE
##

parsing "condition": seen "CN_LET UNAME VARIABLE", expecting "EQ expr SEMICOLON"

loop_spec: CN_INV CN_LET UNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1714.
##
## condition -> CN_LET UNAME VARIABLE EQ . expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ
##

parsing "condition": seen "CN_LET UNAME VARIABLE EQ", expecting "expr SEMICOLON"

loop_spec: CN_INV CN_LET UNAME TYPE WHILE
##
## Ends in an error in state: 1717.
##
## condition -> CN_LET UNAME TYPE . EQ expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE
##

parsing "condition": seen "CN_LET UNAME TYPE", expecting "EQ expr SEMICOLON"

loop_spec: CN_INV CN_LET UNAME TYPE EQ WHILE
##
## Ends in an error in state: 1718.
##
## condition -> CN_LET UNAME TYPE EQ . expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ
##

parsing "condition": seen "CN_LET UNAME TYPE EQ", expecting "expr SEMICOLON"

loop_spec: CN_INV CN_LET LNAME VARIABLE WHILE
##
## Ends in an error in state: 1722.
##
## condition -> CN_LET LNAME VARIABLE . EQ expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE
##

parsing "condition": seen "CN_LET LNAME VARIABLE", expecting "EQ expr SEMICOLON"

loop_spec: CN_INV CN_LET LNAME VARIABLE EQ WHILE
##
## Ends in an error in state: 1723.
##
## condition -> CN_LET LNAME VARIABLE EQ . expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ
##

parsing "condition": seen "CN_LET LNAME VARIABLE EQ", expecting "expr SEMICOLON"

loop_spec: CN_INV CN_LET LNAME TYPE WHILE
##
## Ends in an error in state: 1726.
##
## condition -> CN_LET LNAME TYPE . EQ expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE
##

parsing "condition": seen "CN_LET LNAME TYPE", expecting "EQ expr SEMICOLON"

loop_spec: CN_INV CN_LET LNAME TYPE EQ WHILE
##
## Ends in an error in state: 1727.
##
## condition -> CN_LET LNAME TYPE EQ . expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ
##

parsing "condition": seen "CN_LET LNAME TYPE EQ", expecting "expr SEMICOLON"
















translation_unit: BOOL LNAME TYPE CERB_MAGIC LBRACES LNAME TYPE WHILE
##
## Ends in an error in state: 624.
##
## labeled_statement -> general_identifier . COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## general_identifier
##

parsing "labeled_statement": seen "general_identifier", expecting "COLON statement"

translation_unit: BOOL LNAME TYPE CERB_MAGIC LBRACES LBRACK_LBRACK ALIGNAS RBRACK RBRACK LNAME TYPE WHILE
##
## Ends in an error in state: 629.
##
## labeled_statement -> attribute_specifier_sequence general_identifier . COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence general_identifier
##

parsing "labeled_statement": seen "attribute_specifier_sequence general_identifier", expecting "COLON statement"

translation_unit: BOOL LNAME TYPE CERB_MAGIC LBRACES VOLATILE
##
## Ends in an error in state: 665.
##
## compound_statement -> LBRACES . separated_nonempty_list(PIPES,statement) RBRACES [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACES
##

parsing "compound_statement": seen "LBRACES", expecting "separated_nonempty_list(PIPES,statement) RBRACES"

translation_unit: BOOL LNAME TYPE CERB_MAGIC LBRACES SEMICOLON PIPES VOLATILE
##
## Ends in an error in state: 667.
##
## separated_nonempty_list(PIPES,statement) -> statement PIPES . separated_nonempty_list(PIPES,statement) [ RBRACES ]
##
## The known suffix of the stack is as follows:
## statement PIPES
##

parsing "separated_nonempty_list(PIPES,statement)": seen "statement PIPES", expecting "separated_nonempty_list(PIPES,statement)"

translation_unit: BOOL LNAME TYPE CERB_MAGIC LBRACE VARIABLE
##
## Ends in an error in state: 671.
##
## compound_statement -> LBRACE . option(block_item_list) RBRACE [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

parsing "compound_statement": seen "LBRACE", expecting "option(block_item_list) RBRACE"

translation_unit: BOOL LNAME TYPE CERB_MAGIC WHILE
##
## Ends in an error in state: 1982.
##
## function_definition -> function_definition1 option(declaration_list) magic_comment_list . compound_statement boption(SEMICOLON) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## magic_comment_list -> magic_comment_list . CERB_MAGIC [ LBRACES LBRACE CERB_MAGIC ]
##
## The known suffix of the stack is as follows:
## function_definition1 option(declaration_list) magic_comment_list
##

parsing "function_definition": seen "function_definition1 option(declaration_list) CERB_MAGIC", expecting "compound_statement boption(SEMICOLON)"

translation_unit: BOOL LNAME TYPE CERB_MAGIC LBRACE RBRACE WHILE
##
## Ends in an error in state: 1983.
##
## function_definition -> function_definition1 option(declaration_list) magic_comment_list compound_statement . boption(SEMICOLON) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## function_definition1 option(declaration_list) magic_comment_list compound_statement
##

parsing "function_definition": seen "function_definition1 option(declaration_list) CERB_MAGIC compound_statement", expecting "boption(SEMICOLON)"















fundef_spec: WHILE
##
## Ends in an error in state: 1967.
##
## fundef_spec' -> . fundef_spec [ # ]
##
## The known suffix of the stack is as follows:
##
##

parsing "fundef_spec'": expected "fundef_spec"

fundef_spec: CN_TRUSTED WHILE
##
## Ends in an error in state: 1624.
##
## option(__anonymous_0) -> CN_TRUSTED . SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LIFT_FUNCTION CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CN_ACCESSES ]
##
## The known suffix of the stack is as follows:
## CN_TRUSTED
##

parsing "option(trusted)": seen "CN_TRUSTED", expecting "SEMICOLON"

fundef_spec: CN_TRUSTED SEMICOLON WHILE
##
## Ends in an error in state: 1626.
##
## function_spec -> option(__anonymous_0) . option(accesses_or_function) option(requires_clauses) option(ensures_clauses) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## option(__anonymous_0)
##

parsing "fundef_spec": seen "option(trusted)", expecting "option(accesses_or_function) option(requires_clauses) option(ensures_clauses)"


fundef_spec: CN_ACCESSES WHILE
##
## Ends in an error in state: 1638.
##
## accesses -> CN_ACCESSES . separated_nonempty_list(COMMA,cn_variable) SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CN_ACCESSES ]
##
## The known suffix of the stack is as follows:
## CN_ACCESSES
##

parsing "accesses": seen "CN_ACCESSES", expecting "separated_nonempty_list(COMMA,cn_variable) SEMICOLON"

fundef_spec: CN_ACCESSES UNAME TYPE SEMICOLON WHILE
##
## Ends in an error in state: 1743.
##
## nonempty_list(accesses) -> accesses . [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
## nonempty_list(accesses) -> accesses . nonempty_list(accesses) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## accesses
##

I've seen an 'accesses' list, and I'm expecting requires/ensures clauses now.

cn_statements: INLINE UNAME WHILE
##
## Ends in an error in state: 2.
##
## separated_nonempty_list(COMMA,cn_variable) -> UNAME . VARIABLE [ SEMICOLON RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> UNAME . TYPE [ SEMICOLON RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> UNAME . VARIABLE COMMA separated_nonempty_list(COMMA,cn_variable) [ SEMICOLON RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> UNAME . TYPE COMMA separated_nonempty_list(COMMA,cn_variable) [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: INLINE UNAME VARIABLE WHILE
##
## Ends in an error in state: 3.
##
## separated_nonempty_list(COMMA,cn_variable) -> UNAME VARIABLE . [ SEMICOLON RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> UNAME VARIABLE . COMMA separated_nonempty_list(COMMA,cn_variable) [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: INLINE LNAME WHILE
##
## Ends in an error in state: 5.
##
## separated_nonempty_list(COMMA,cn_variable) -> LNAME . VARIABLE [ SEMICOLON RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> LNAME . TYPE [ SEMICOLON RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> LNAME . VARIABLE COMMA separated_nonempty_list(COMMA,cn_variable) [ SEMICOLON RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> LNAME . TYPE COMMA separated_nonempty_list(COMMA,cn_variable) [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: INLINE LNAME VARIABLE WHILE
##
## Ends in an error in state: 6.
##
## separated_nonempty_list(COMMA,cn_variable) -> LNAME VARIABLE . [ SEMICOLON RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> LNAME VARIABLE . COMMA separated_nonempty_list(COMMA,cn_variable) [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: INLINE LNAME TYPE WHILE
##
## Ends in an error in state: 9.
##
## separated_nonempty_list(COMMA,cn_variable) -> LNAME TYPE . [ SEMICOLON RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> LNAME TYPE . COMMA separated_nonempty_list(COMMA,cn_variable) [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: INLINE UNAME TYPE WHILE
##
## Ends in an error in state: 13.
##
## separated_nonempty_list(COMMA,cn_variable) -> UNAME TYPE . [ SEMICOLON RBRACK ]
## separated_nonempty_list(COMMA,cn_variable) -> UNAME TYPE . COMMA separated_nonempty_list(COMMA,cn_variable) [ SEMICOLON RBRACK ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: INLINE UNAME TYPE RBRACK
##
## Ends in an error in state: 17.
##
## cn_statement -> INLINE loption(separated_nonempty_list(COMMA,cn_variable)) . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## INLINE loption(separated_nonempty_list(COMMA,cn_variable))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production separated_nonempty_list(COMMA,cn_variable) -> UNAME TYPE
## In state 16, spurious reduction of production loption(separated_nonempty_list(COMMA,cn_variable)) -> separated_nonempty_list(COMMA,cn_variable)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_OWNED WHILE
##
## Ends in an error in state: 22.
##
## pred -> CN_OWNED . LT ctype GT [ LPAREN COMMA ]
## pred -> CN_OWNED . [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_OWNED
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEOF WHILE
##
## Ends in an error in state: 30.
##
## type_specifier_unique -> TYPEOF . LPAREN expression RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## type_specifier_unique -> TYPEOF . LPAREN type_name RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## TYPEOF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEOF LPAREN WHILE
##
## Ends in an error in state: 31.
##
## type_specifier_unique -> TYPEOF LPAREN . expression RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## type_specifier_unique -> TYPEOF LPAREN . type_name RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## TYPEOF LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN SIZEOF WHILE
##
## Ends in an error in state: 45.
##
## unary_expression -> SIZEOF . unary_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expression -> SIZEOF . LPAREN type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## SIZEOF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM WHILE
##
## Ends in an error in state: 61.
##
## enum_specifier -> ENUM . option(general_identifier) LBRACE enumerator_list option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## enum_specifier -> ENUM . attribute_specifier_sequence option(general_identifier) LBRACE enumerator_list option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## enum_specifier -> ENUM . general_identifier [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## enum_specifier -> ENUM . attribute_specifier_sequence general_identifier [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ENUM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL UNAME WHILE
##
## Ends in an error in state: 62.
##
## typedef_name -> UNAME . TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NORETURN MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE GT_GT_EQ GT_GT GT_EQ GT FLOAT EXTERN EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT CONST COMPLEX COMMA COLON_COLON COLON CHAR CERB_MAGIC CARET_EQ CARET BOOL BANG_EQ AUTO ATOMIC ASM AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ALIGNAS ]
## var_name -> UNAME . VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NORETURN MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE GT_GT_EQ GT_GT GT_EQ GT FLOAT EXTERN EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT CONST COMPLEX COMMA COLON_COLON COLON CHAR CERB_MAGIC CARET_EQ CARET BOOL BANG_EQ AUTO ATOMIC ASM AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME WHILE
##
## Ends in an error in state: 63.
##
## typedef_name -> LNAME . TYPE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NORETURN MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE GT_GT_EQ GT_GT GT_EQ GT FLOAT EXTERN EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT CONST COMPLEX COMMA COLON_COLON COLON CHAR CERB_MAGIC CARET_EQ CARET BOOL BANG_EQ AUTO ATOMIC ASM AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ALIGNAS ]
## var_name -> LNAME . VARIABLE [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC STAR_EQ STAR SLASH_EQ SLASH SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT NORETURN MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE GT_GT_EQ GT_GT GT_EQ GT FLOAT EXTERN EQ_EQ EQ ENUM ELLIPSIS DOUBLE DOT CONST COMPLEX COMMA COLON_COLON COLON CHAR CERB_MAGIC CARET_EQ CARET BOOL BANG_EQ AUTO ATOMIC ASM AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL WHILE
##
## Ends in an error in state: 118.
##
## nonempty_list(string_literal_component) -> string_literal_component . [ STRING_LITERAL STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK LBRACE GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## nonempty_list(string_literal_component) -> string_literal_component . nonempty_list(string_literal_component) [ STRING_LITERAL STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK LBRACE GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## string_literal_component
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 123.
##
## separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal . [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
## separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal . COMMA separated_nonempty_list(COMMA,located_string_literal) [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## located_string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 120, spurious reduction of production located_string_literal -> string_literal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN LBRACE STRING_LITERAL RPAREN
##
## Ends in an error in state: 126.
##
## balanced_token -> LBRACE balanced_token_sequence . RBRACE [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
## balanced_token_sequence -> balanced_token_sequence . balanced_token [ STRING_LITERAL RBRACE LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACE balanced_token_sequence
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 120, spurious reduction of production located_string_literal -> string_literal
## In state 123, spurious reduction of production separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal
## In state 121, spurious reduction of production balanced_token -> separated_nonempty_list(COMMA,located_string_literal)
## In state 129, spurious reduction of production balanced_token_sequence -> balanced_token
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN LBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 130.
##
## balanced_token -> LBRACK balanced_token_sequence . RBRACK [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
## balanced_token_sequence -> balanced_token_sequence . balanced_token [ STRING_LITERAL RBRACK LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LBRACK balanced_token_sequence
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 120, spurious reduction of production located_string_literal -> string_literal
## In state 123, spurious reduction of production separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal
## In state 121, spurious reduction of production balanced_token -> separated_nonempty_list(COMMA,located_string_literal)
## In state 129, spurious reduction of production balanced_token_sequence -> balanced_token
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 132.
##
## balanced_token -> LPAREN balanced_token_sequence . RPAREN [ STRING_LITERAL RPAREN RBRACK RBRACE LPAREN LBRACK LBRACE ]
## balanced_token_sequence -> balanced_token_sequence . balanced_token [ STRING_LITERAL RPAREN LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LPAREN balanced_token_sequence
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 120, spurious reduction of production located_string_literal -> string_literal
## In state 123, spurious reduction of production separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal
## In state 121, spurious reduction of production balanced_token -> separated_nonempty_list(COMMA,located_string_literal)
## In state 129, spurious reduction of production balanced_token_sequence -> balanced_token
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 134.
##
## attribute_argument_clause -> LPAREN balanced_token_sequence . RPAREN [ RBRACK COMMA ]
## balanced_token_sequence -> balanced_token_sequence . balanced_token [ STRING_LITERAL RPAREN LPAREN LBRACK LBRACE ]
##
## The known suffix of the stack is as follows:
## LPAREN balanced_token_sequence
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 120, spurious reduction of production located_string_literal -> string_literal
## In state 123, spurious reduction of production separated_nonempty_list(COMMA,located_string_literal) -> located_string_literal
## In state 121, spurious reduction of production balanced_token -> separated_nonempty_list(COMMA,located_string_literal)
## In state 129, spurious reduction of production balanced_token_sequence -> balanced_token
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 139.
##
## attribute_list -> attribute_list . COMMA attribute [ RBRACK COMMA ]
## attribute_specifier -> LBRACK_LBRACK attribute_list . RBRACK RBRACK [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE IF GT GOTO GENERIC FOR FLOAT EXTERN EQ ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX COMMA COLON CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LBRACK_LBRACK attribute_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS WHILE
##
## Ends in an error in state: 143.
##
## attribute_prefixed_token -> attribute_identifier . COLON_COLON attribute_identifier [ RBRACK LPAREN COMMA ]
## attribute_token -> attribute_identifier . [ RBRACK LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACE LNAME TYPE EQ STRING_LITERAL RPAREN
##
## Ends in an error in state: 151.
##
## enum_specifier -> ENUM option(general_identifier) LBRACE enumerator_list . option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## enumerator_list -> enumerator_list . COMMA enumerator [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM option(general_identifier) LBRACE enumerator_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 242, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 493, spurious reduction of production constant_expression -> conditional_expression
## In state 805, spurious reduction of production enumerator -> enumeration_constant EQ constant_expression
## In state 811, spurious reduction of production enumerator_list -> enumerator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACE LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 152.
##
## enumerator_list -> enumerator_list COMMA . enumerator [ RBRACE COMMA ]
## option(COMMA) -> COMMA . [ RBRACE ]
##
## The known suffix of the stack is as follows:
## enumerator_list COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 154.
##
## enumerator -> enumeration_constant . [ RBRACE COMMA ]
## enumerator -> enumeration_constant . attribute_specifier_sequence [ RBRACE COMMA ]
## enumerator -> enumeration_constant . EQ constant_expression [ RBRACE COMMA ]
## enumerator -> enumeration_constant . attribute_specifier_sequence EQ constant_expression [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## enumeration_constant
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN MINUS_MINUS LPAREN WHILE
##
## Ends in an error in state: 158.
##
## postfix_expression -> LPAREN . type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## primary_expression -> LPAREN . expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## primary_expression -> LPAREN . LBRACE option(block_item_list) RBRACE RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN WHILE
##
## Ends in an error in state: 159.
##
## cast_expression -> LPAREN . type_name RPAREN cast_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> LPAREN . type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## primary_expression -> LPAREN . expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## primary_expression -> LPAREN . LBRACE option(block_item_list) RBRACE RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEDEF WHILE
##
## Ends in an error in state: 161.
##
## list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier) -> TYPEDEF . list_eq1(attribute_type_specifier_unique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) -> TYPEDEF . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## TYPEDEF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ATOMIC WHILE
##
## Ends in an error in state: 174.
##
## atomic_type_specifier -> ATOMIC . LPAREN type_name RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## type_qualifier -> ATOMIC . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ATOMIC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS WHILE
##
## Ends in an error in state: 176.
##
## alignment_specifier -> ALIGNAS . LPAREN type_name RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL AUTO ATOMIC ALIGNAS ]
## alignment_specifier -> ALIGNAS . LPAREN constant_expression RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ALIGNAS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN WHILE
##
## Ends in an error in state: 177.
##
## alignment_specifier -> ALIGNAS LPAREN . type_name RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL AUTO ATOMIC ALIGNAS ]
## alignment_specifier -> ALIGNAS LPAREN . constant_expression RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ALIGNAS LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL WHILE
##
## Ends in an error in state: 186.
##
## attribute_type_specifier_unique -> type_specifier_unique . [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## attribute_type_specifier_unique -> type_specifier_unique . attribute_specifier_sequence [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_specifier_unique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 187.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## attribute_type_specifier_unique -> type_specifier_unique attribute_specifier_sequence . [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_specifier_unique attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CHAR WHILE
##
## Ends in an error in state: 190.
##
## attribute_type_specifier_nonunique -> type_specifier_nonunique . [ VOLATILE UNSIGNED UNAME TYPEDEF THREAD_LOCAL STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE GT FLOAT EXTERN DOUBLE CONST COMPLEX COMMA COLON CHAR AUTO ATOMIC ALIGNAS ]
## attribute_type_specifier_nonunique -> type_specifier_nonunique . attribute_specifier_sequence [ VOLATILE UNSIGNED UNAME TYPEDEF THREAD_LOCAL STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE GT FLOAT EXTERN DOUBLE CONST COMPLEX COMMA COLON CHAR AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_specifier_nonunique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CHAR LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 191.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE UNSIGNED UNAME TYPEDEF THREAD_LOCAL STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN DOUBLE CONST COMPLEX COMMA COLON CHAR AUTO ATOMIC ALIGNAS ]
## attribute_type_specifier_nonunique -> type_specifier_nonunique attribute_specifier_sequence . [ VOLATILE UNSIGNED UNAME TYPEDEF THREAD_LOCAL STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE GT FLOAT EXTERN DOUBLE CONST COMPLEX COMMA COLON CHAR AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_specifier_nonunique attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ATOMIC TYPEDEF
##
## Ends in an error in state: 192.
##
## attribute_type_qualifier -> type_qualifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
## attribute_type_qualifier -> type_qualifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_qualifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 174, spurious reduction of production type_qualifier -> ATOMIC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ATOMIC LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 193.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
## attribute_type_qualifier -> type_qualifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_qualifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BUILTIN_TYPES_COMPATIBLE_P LPAREN BOOL GT
##
## Ends in an error in state: 194.
##
## postfix_expression -> BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name . COMMA type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BUILTIN_TYPES_COMPATIBLE_P LPAREN BOOL COMMA BOOL GT
##
## Ends in an error in state: 196.
##
## postfix_expression -> BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name COMMA type_name . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_TYPES_COMPATIBLE_P LPAREN type_name COMMA type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT WHILE
##
## Ends in an error in state: 199.
##
## struct_or_union_specifier -> struct_or_union . option(attribute_specifier_sequence) option(general_identifier) LBRACE boption(nonempty_list(SEMICOLON)) struct_declaration_list RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## struct_or_union_specifier -> struct_or_union . option(attribute_specifier_sequence) general_identifier [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## struct_or_union_specifier -> struct_or_union . option(attribute_specifier_sequence) option(general_identifier) LBRACE RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## struct_or_union
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE WHILE
##
## Ends in an error in state: 202.
##
## struct_or_union_specifier -> struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE . boption(nonempty_list(SEMICOLON)) struct_declaration_list RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## struct_or_union_specifier -> struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE . RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE SEMICOLON WHILE
##
## Ends in an error in state: 203.
##
## nonempty_list(SEMICOLON) -> SEMICOLON . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
## nonempty_list(SEMICOLON) -> SEMICOLON . nonempty_list(SEMICOLON) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE SEMICOLON RBRACE
##
## Ends in an error in state: 207.
##
## struct_or_union_specifier -> struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE boption(nonempty_list(SEMICOLON)) . struct_declaration_list RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE boption(nonempty_list(SEMICOLON))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 203, spurious reduction of production nonempty_list(SEMICOLON) -> SEMICOLON
## In state 206, spurious reduction of production boption(nonempty_list(SEMICOLON)) -> nonempty_list(SEMICOLON)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ALIGNOF LPAREN BOOL GT
##
## Ends in an error in state: 220.
##
## unary_expression -> ALIGNOF LPAREN type_name . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## ALIGNOF LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL SEMICOLON
##
## Ends in an error in state: 222.
##
## type_name -> specifier_qualifier_list . option(abstract_declarator) [ RPAREN GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## specifier_qualifier_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR WHILE
##
## Ends in an error in state: 223.
##
## pointer -> STAR . option(type_qualifier_list) option(pointer) [ UNAME RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
## pointer -> STAR . attribute_specifier_sequence option(type_qualifier_list) option(pointer) [ UNAME RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR ATOMIC WHILE
##
## Ends in an error in state: 225.
##
## option(type_qualifier_list) -> type_qualifier_list . [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF RPAREN PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACK GT GENERIC CONSTANT COMMA COLON BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
## type_qualifier_list -> type_qualifier_list . type_qualifier [ VOLATILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF RPAREN RESTRICT PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACK GT GENERIC CONSTANT CONST COMMA COLON BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ATOMIC ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR ATOMIC VA_START
##
## Ends in an error in state: 228.
##
## pointer -> STAR option(type_qualifier_list) . option(pointer) [ UNAME RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## STAR option(type_qualifier_list)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 225, spurious reduction of production option(type_qualifier_list) -> type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 231.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE UNAME STAR RPAREN RESTRICT LPAREN LNAME LBRACK_LBRACK LBRACK GT CONST COMMA COLON ATOMIC ]
## pointer -> STAR attribute_specifier_sequence . option(type_qualifier_list) option(pointer) [ UNAME RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## STAR attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR LBRACK_LBRACK ALIGNAS RBRACK RBRACK ATOMIC VA_START
##
## Ends in an error in state: 232.
##
## pointer -> STAR attribute_specifier_sequence option(type_qualifier_list) . option(pointer) [ UNAME RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## STAR attribute_specifier_sequence option(type_qualifier_list)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 225, spurious reduction of production option(type_qualifier_list) -> type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LPAREN WHILE
##
## Ends in an error in state: 234.
##
## direct_abstract_declarator -> LPAREN . save_context abstract_declarator RPAREN [ RPAREN LPAREN LBRACK GT COMMA COLON ]
## function_abstract_declarator -> LPAREN . option(scoped(parameter_type_list)) RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK WHILE
##
## Ends in an error in state: 237.
##
## array_abstract_declarator -> LBRACK . option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> LBRACK . type_qualifier_list option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> LBRACK . STATIC option(type_qualifier_list) assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> LBRACK . type_qualifier_list STATIC assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> LBRACK . STAR RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK STATIC ATOMIC RPAREN
##
## Ends in an error in state: 239.
##
## array_abstract_declarator -> LBRACK STATIC option(type_qualifier_list) . assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK STATIC option(type_qualifier_list)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 225, spurious reduction of production option(type_qualifier_list) -> type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN CONSTANT WHILE
##
## Ends in an error in state: 245.
##
## postfix_expression -> postfix_expression . LBRACK expression RBRACK [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> postfix_expression . LPAREN option(argument_expression_list) RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> postfix_expression . DOT general_identifier [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> postfix_expression . MINUS_GT general_identifier [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> postfix_expression . PLUS_PLUS [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> postfix_expression . MINUS_MINUS [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expression -> postfix_expression . [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## postfix_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEOF LPAREN STRING_LITERAL ELLIPSIS
##
## Ends in an error in state: 251.
##
## assignment_expression -> unary_expression . assignment_operator assignment_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
## cast_expression -> unary_expression . [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## unary_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 266.
##
## additive_expression -> multiplicative_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . STAR cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## multiplicative_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 242, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL PLUS STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 277.
##
## additive_expression -> additive_expression PLUS multiplicative_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . STAR cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## additive_expression PLUS multiplicative_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 242, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL MINUS STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 279.
##
## additive_expression -> additive_expression MINUS multiplicative_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . STAR cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . SLASH cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## multiplicative_expression -> multiplicative_expression . PERCENT cast_expression [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_LT LT_EQ LT GT_GT GT_EQ GT EQ_EQ ELLIPSIS COMMA COLON CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## additive_expression MINUS multiplicative_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 242, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL QUESTION STRING_LITERAL RPAREN
##
## Ends in an error in state: 313.
##
## conditional_expression -> logical_OR_expression QUESTION expression . COLON conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE ELLIPSIS COMMA COLON ]
## expression -> expression . COMMA assignment_expression [ COMMA COLON ]
##
## The known suffix of the stack is as follows:
## logical_OR_expression QUESTION expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 326.
##
## argument_expression_list -> argument_expression_list . COMMA assignment_expression [ RPAREN COMMA ]
## option(argument_expression_list) -> argument_expression_list . [ RPAREN ]
##
## The known suffix of the stack is as follows:
## argument_expression_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 325, spurious reduction of production argument_expression_list -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL LBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 330.
##
## expression -> expression . COMMA assignment_expression [ RBRACK COMMA ]
## postfix_expression -> postfix_expression LBRACK expression . RBRACK [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## postfix_expression LBRACK expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK STATIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 335.
##
## array_abstract_declarator -> LBRACK STATIC option(type_qualifier_list) assignment_expression . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK STATIC option(type_qualifier_list) assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK STAR WHILE
##
## Ends in an error in state: 337.
##
## array_abstract_declarator -> LBRACK STAR . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## unary_operator -> STAR . [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## LBRACK STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK ATOMIC WHILE
##
## Ends in an error in state: 339.
##
## array_abstract_declarator -> LBRACK type_qualifier_list . option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> LBRACK type_qualifier_list . STATIC assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## type_qualifier_list -> type_qualifier_list . type_qualifier [ VOLATILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STATIC STAR SIZEOF RESTRICT RBRACK PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT CONST BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ATOMIC ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## LBRACK type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK ATOMIC STATIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 341.
##
## array_abstract_declarator -> LBRACK type_qualifier_list STATIC assignment_expression . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK type_qualifier_list STATIC assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK ATOMIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 343.
##
## array_abstract_declarator -> LBRACK type_qualifier_list option(assignment_expression) . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK type_qualifier_list option(assignment_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 345, spurious reduction of production option(assignment_expression) -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 346.
##
## array_abstract_declarator -> LBRACK option(assignment_expression) . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK option(assignment_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 345, spurious reduction of production option(assignment_expression) -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CONST WHILE
##
## Ends in an error in state: 348.
##
## declaration_specifier -> type_qualifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> type_qualifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_qualifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ATOMIC LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 349.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> type_qualifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## type_qualifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: AUTO WHILE
##
## Ends in an error in state: 350.
##
## declaration_specifier -> storage_class_specifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> storage_class_specifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## storage_class_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: AUTO LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 351.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> storage_class_specifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## storage_class_specifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL STAR UNAME
##
## Ends in an error in state: 352.
##
## abstract_declarator -> pointer . [ RPAREN GT COMMA COLON ]
## abstract_declarator -> pointer . direct_abstract_declarator [ RPAREN GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## pointer
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 223, spurious reduction of production option(type_qualifier_list) ->
## In state 228, spurious reduction of production option(pointer) ->
## In state 230, spurious reduction of production pointer -> STAR option(type_qualifier_list) option(pointer)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LPAREN RPAREN WHILE
##
## Ends in an error in state: 353.
##
## direct_abstract_declarator -> function_abstract_declarator . [ RPAREN LPAREN LBRACK GT COMMA COLON ]
## direct_abstract_declarator -> function_abstract_declarator . attribute_specifier_sequence [ RPAREN LPAREN LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## function_abstract_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LPAREN RPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 354.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## direct_abstract_declarator -> function_abstract_declarator attribute_specifier_sequence . [ RPAREN LPAREN LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## function_abstract_declarator attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL STAR LPAREN STAR RPAREN WHILE
##
## Ends in an error in state: 355.
##
## abstract_declarator -> pointer direct_abstract_declarator . [ RPAREN GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK type_qualifier_list option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK STATIC option(type_qualifier_list) assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK type_qualifier_list STATIC assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK STAR RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## function_abstract_declarator -> direct_abstract_declarator . LPAREN option(scoped(parameter_type_list)) RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## pointer direct_abstract_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL LNAME TYPE VOLATILE
##
## Ends in an error in state: 359.
##
## parameter_list -> parameter_list . COMMA parameter_declaration [ RPAREN COMMA ]
## parameter_type_list -> parameter_list . save_context [ RPAREN ]
## parameter_type_list -> parameter_list . COMMA ELLIPSIS save_context [ RPAREN ]
##
## The known suffix of the stack is as follows:
## parameter_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 374, spurious reduction of production direct_declarator -> general_identifier
## In state 406, spurious reduction of production declarator -> direct_declarator
## In state 438, spurious reduction of production declarator_varname -> declarator
## In state 450, spurious reduction of production parameter_declaration -> declaration_specifiers declarator_varname
## In state 385, spurious reduction of production parameter_list -> parameter_declaration
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL COMMA WHILE
##
## Ends in an error in state: 360.
##
## parameter_list -> parameter_list COMMA . parameter_declaration [ RPAREN COMMA ]
## parameter_type_list -> parameter_list COMMA . ELLIPSIS save_context [ RPAREN ]
##
## The known suffix of the stack is as follows:
## parameter_list COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: INLINE WHILE
##
## Ends in an error in state: 366.
##
## declaration_specifier -> function_specifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> function_specifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: INLINE LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 367.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> function_specifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## function_specifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL SEMICOLON
##
## Ends in an error in state: 369.
##
## parameter_declaration -> declaration_specifiers . declarator_varname [ RPAREN COMMA ]
## parameter_declaration -> declaration_specifiers . [ RPAREN COMMA ]
## parameter_declaration -> declaration_specifiers . abstract_declarator [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## declaration_specifiers
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 393, spurious reduction of production list(declaration_specifier) ->
## In state 394, spurious reduction of production list_eq1(attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique list(declaration_specifier)
## In state 365, spurious reduction of production declaration_specifiers -> list_eq1(attribute_type_specifier_unique,declaration_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL LPAREN WHILE
##
## Ends in an error in state: 370.
##
## direct_abstract_declarator -> LPAREN . save_context abstract_declarator RPAREN [ RPAREN LPAREN LBRACK COMMA ]
## direct_declarator -> LPAREN . save_context declarator RPAREN [ RPAREN LPAREN LBRACK COMMA ]
## function_abstract_declarator -> LPAREN . option(scoped(parameter_type_list)) RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 372.
##
## general_identifier -> typedef_name . [ RPAREN LPAREN LBRACK_LBRACK LBRACK COLON ]
## typedef_name_spec -> typedef_name . [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE EXTERN CONST COMMA AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## typedef_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL STAR GT
##
## Ends in an error in state: 373.
##
## abstract_declarator -> pointer . [ RPAREN COMMA ]
## abstract_declarator -> pointer . direct_abstract_declarator [ RPAREN COMMA ]
## declarator -> pointer . direct_declarator [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## pointer
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 223, spurious reduction of production option(type_qualifier_list) ->
## In state 228, spurious reduction of production option(pointer) ->
## In state 230, spurious reduction of production pointer -> STAR option(type_qualifier_list) option(pointer)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE WHILE
##
## Ends in an error in state: 374.
##
## direct_declarator -> general_identifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> general_identifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## general_identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 375.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> general_identifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## general_identifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL RPAREN WHILE
##
## Ends in an error in state: 376.
##
## direct_declarator -> function_declarator . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> function_declarator . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## function_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN BOOL RPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 377.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> function_declarator attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## function_declarator attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR LPAREN LNAME TYPE RPAREN WHILE
##
## Ends in an error in state: 378.
##
## array_declarator -> direct_declarator . LBRACK option(type_qualifier_list) option(assignment_expression) RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator . LBRACK STATIC option(type_qualifier_list) assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator . LBRACK type_qualifier_list STATIC assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator . LBRACK option(type_qualifier_list) STAR RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## declarator -> pointer direct_declarator . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> direct_declarator . LPAREN save_context RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> direct_declarator . LPAREN save_context identifier_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## function_declarator -> direct_declarator . LPAREN scoped(parameter_type_list) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## pointer direct_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN WHILE
##
## Ends in an error in state: 382.
##
## direct_declarator -> direct_declarator LPAREN save_context . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> direct_declarator LPAREN save_context . identifier_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## scoped(parameter_type_list) -> save_context . parameter_type_list [ RPAREN ]
##
## The known suffix of the stack is as follows:
## direct_declarator LPAREN save_context
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN LNAME VARIABLE WHILE
##
## Ends in an error in state: 386.
##
## direct_declarator -> direct_declarator LPAREN save_context identifier_list . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## identifier_list -> identifier_list . COMMA var_name [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## direct_declarator LPAREN save_context identifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEDEF INLINE TYPEDEF
##
## Ends in an error in state: 390.
##
## list_eq1(attribute_type_specifier_unique,declaration_specifier) -> declaration_specifier . list_eq1(attribute_type_specifier_unique,declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> declaration_specifier . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## declaration_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 366, spurious reduction of production declaration_specifier -> function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEDEF BOOL TYPEDEF
##
## Ends in an error in state: 393.
##
## list_eq1(attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique . list(declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_type_specifier_unique
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL TYPEDEF INLINE VOID
##
## Ends in an error in state: 395.
##
## list(declaration_specifier) -> declaration_specifier . list(declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## declaration_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 366, spurious reduction of production declaration_specifier -> function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 397.
##
## declaration_specifier -> alignment_specifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> alignment_specifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## alignment_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL RPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 398.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration_specifier -> alignment_specifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## alignment_specifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEDEF CHAR TYPEDEF
##
## Ends in an error in state: 399.
##
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> attribute_type_specifier_nonunique . list(declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> attribute_type_specifier_nonunique . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_type_specifier_nonunique
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 190, spurious reduction of production attribute_type_specifier_nonunique -> type_specifier_nonunique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CHAR TYPEDEF INLINE VOID
##
## Ends in an error in state: 402.
##
## list(declaration_specifier) -> declaration_specifier . list(declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> declaration_specifier . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK COMMA ]
##
## The known suffix of the stack is as follows:
## declaration_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 366, spurious reduction of production declaration_specifier -> function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 404.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF THREAD_LOCAL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR BOOL AUTO ATOMIC ALIGNAS ]
## parameter_declaration -> attribute_specifier_sequence . declaration_specifiers declarator_varname [ RPAREN COMMA ]
## parameter_declaration -> attribute_specifier_sequence . declaration_specifiers [ RPAREN COMMA ]
## parameter_declaration -> attribute_specifier_sequence . declaration_specifiers abstract_declarator [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK BOOL SEMICOLON
##
## Ends in an error in state: 405.
##
## parameter_declaration -> attribute_specifier_sequence declaration_specifiers . declarator_varname [ RPAREN COMMA ]
## parameter_declaration -> attribute_specifier_sequence declaration_specifiers . [ RPAREN COMMA ]
## parameter_declaration -> attribute_specifier_sequence declaration_specifiers . abstract_declarator [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence declaration_specifiers
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 393, spurious reduction of production list(declaration_specifier) ->
## In state 394, spurious reduction of production list_eq1(attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique list(declaration_specifier)
## In state 365, spurious reduction of production declaration_specifiers -> list_eq1(attribute_type_specifier_unique,declaration_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LPAREN RPAREN WHILE
##
## Ends in an error in state: 406.
##
## array_declarator -> direct_declarator . LBRACK option(type_qualifier_list) option(assignment_expression) RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator . LBRACK STATIC option(type_qualifier_list) assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator . LBRACK type_qualifier_list STATIC assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator . LBRACK option(type_qualifier_list) STAR RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## declarator -> direct_declarator . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> direct_declarator . LPAREN save_context RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> direct_declarator . LPAREN save_context identifier_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## function_declarator -> direct_declarator . LPAREN scoped(parameter_type_list) RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK WHILE
##
## Ends in an error in state: 407.
##
## array_declarator -> direct_declarator LBRACK . option(type_qualifier_list) option(assignment_expression) RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator LBRACK . STATIC option(type_qualifier_list) assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator LBRACK . type_qualifier_list STATIC assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## array_declarator -> direct_declarator LBRACK . option(type_qualifier_list) STAR RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK STATIC ATOMIC RPAREN
##
## Ends in an error in state: 409.
##
## array_declarator -> direct_declarator LBRACK STATIC option(type_qualifier_list) . assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK STATIC option(type_qualifier_list)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 225, spurious reduction of production option(type_qualifier_list) -> type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK STATIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 410.
##
## array_declarator -> direct_declarator LBRACK STATIC option(type_qualifier_list) assignment_expression . RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK STATIC option(type_qualifier_list) assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK ATOMIC WHILE
##
## Ends in an error in state: 412.
##
## array_declarator -> direct_declarator LBRACK type_qualifier_list . STATIC assignment_expression RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## option(type_qualifier_list) -> type_qualifier_list . [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF RBRACK PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
## type_qualifier_list -> type_qualifier_list . type_qualifier [ VOLATILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STATIC STAR SIZEOF RESTRICT RBRACK PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT CONST BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ATOMIC ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK ATOMIC STATIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 414.
##
## array_declarator -> direct_declarator LBRACK type_qualifier_list STATIC assignment_expression . RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK type_qualifier_list STATIC assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK STAR WHILE
##
## Ends in an error in state: 417.
##
## array_declarator -> direct_declarator LBRACK option(type_qualifier_list) STAR . RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## unary_operator -> STAR . [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK option(type_qualifier_list) STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 419.
##
## array_declarator -> direct_declarator LBRACK option(type_qualifier_list) option(assignment_expression) . RBRACK [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## direct_declarator LBRACK option(type_qualifier_list) option(assignment_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 345, spurious reduction of production option(assignment_expression) -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LPAREN STAR RPAREN WHILE
##
## Ends in an error in state: 421.
##
## abstract_declarator -> direct_abstract_declarator . [ RPAREN GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK type_qualifier_list option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK STATIC option(type_qualifier_list) assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK type_qualifier_list STATIC assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator . LBRACK STAR RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## function_abstract_declarator -> direct_abstract_declarator . LPAREN option(scoped(parameter_type_list)) RPAREN [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK WHILE
##
## Ends in an error in state: 422.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK . option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator LBRACK . type_qualifier_list option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator LBRACK . STATIC option(type_qualifier_list) assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator LBRACK . type_qualifier_list STATIC assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator LBRACK . STAR RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK STATIC ATOMIC RPAREN
##
## Ends in an error in state: 424.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK STATIC option(type_qualifier_list) . assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK STATIC option(type_qualifier_list)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 225, spurious reduction of production option(type_qualifier_list) -> type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK STATIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 425.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK STATIC option(type_qualifier_list) assignment_expression . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK STATIC option(type_qualifier_list) assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK STAR WHILE
##
## Ends in an error in state: 427.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK STAR . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## unary_operator -> STAR . [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK STAR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK ATOMIC WHILE
##
## Ends in an error in state: 429.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK type_qualifier_list . option(assignment_expression) RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## array_abstract_declarator -> direct_abstract_declarator LBRACK type_qualifier_list . STATIC assignment_expression RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## type_qualifier_list -> type_qualifier_list . type_qualifier [ VOLATILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STATIC STAR SIZEOF RESTRICT RBRACK PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT CONST BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ATOMIC ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK type_qualifier_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK ATOMIC STATIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 431.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK type_qualifier_list STATIC assignment_expression . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK type_qualifier_list STATIC assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK ATOMIC STRING_LITERAL RPAREN
##
## Ends in an error in state: 433.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK type_qualifier_list option(assignment_expression) . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK type_qualifier_list option(assignment_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 345, spurious reduction of production option(assignment_expression) -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 435.
##
## array_abstract_declarator -> direct_abstract_declarator LBRACK option(assignment_expression) . RBRACK [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## direct_abstract_declarator LBRACK option(assignment_expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 345, spurious reduction of production option(assignment_expression) -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK RBRACK WHILE
##
## Ends in an error in state: 439.
##
## direct_declarator -> array_declarator . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> array_declarator . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## array_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACK RBRACK LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 440.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
## direct_declarator -> array_declarator attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## array_declarator attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK WHILE
##
## Ends in an error in state: 441.
##
## direct_abstract_declarator -> array_abstract_declarator . [ RPAREN LPAREN LBRACK GT COMMA COLON ]
## direct_abstract_declarator -> array_abstract_declarator . attribute_specifier_sequence [ RPAREN LPAREN LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## array_abstract_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LBRACK RBRACK LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 442.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ RPAREN LPAREN LBRACK_LBRACK LBRACK GT COMMA COLON ]
## direct_abstract_declarator -> array_abstract_declarator attribute_specifier_sequence . [ RPAREN LPAREN LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## array_abstract_declarator attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LPAREN LNAME TYPE VOLATILE
##
## Ends in an error in state: 444.
##
## direct_declarator -> LPAREN save_context declarator . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## LPAREN save_context declarator
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 374, spurious reduction of production direct_declarator -> general_identifier
## In state 406, spurious reduction of production declarator -> direct_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL LPAREN STAR COMMA
##
## Ends in an error in state: 446.
##
## direct_abstract_declarator -> LPAREN save_context abstract_declarator . RPAREN [ RPAREN LPAREN LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN save_context abstract_declarator
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 223, spurious reduction of production option(type_qualifier_list) ->
## In state 228, spurious reduction of production option(pointer) ->
## In state 230, spurious reduction of production pointer -> STAR option(type_qualifier_list) option(pointer)
## In state 352, spurious reduction of production abstract_declarator -> pointer
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL TYPEDEF
##
## Ends in an error in state: 459.
##
## list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique . list_pair(attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_type_specifier_unique
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL ATOMIC VOID
##
## Ends in an error in state: 461.
##
## list_pair(attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_qualifier . list_pair(attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_type_qualifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 192, spurious reduction of production attribute_type_qualifier -> type_qualifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL ALIGNAS LPAREN STRING_LITERAL RPAREN VOID
##
## Ends in an error in state: 463.
##
## list_pair(attribute_type_qualifier,attribute_alignment_specifier) -> attribute_alignment_specifier . list_pair(attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_alignment_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 465, spurious reduction of production attribute_alignment_specifier -> alignment_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ALIGNAS LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 465.
##
## attribute_alignment_specifier -> alignment_specifier . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
## attribute_alignment_specifier -> alignment_specifier . attribute_specifier_sequence [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## alignment_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ALIGNAS LPAREN STRING_LITERAL RPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 466.
##
## attribute_alignment_specifier -> alignment_specifier attribute_specifier_sequence . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT GT FLOAT ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## alignment_specifier attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN CHAR TYPEDEF
##
## Ends in an error in state: 467.
##
## list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_nonunique . list_pair(attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
## list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_nonunique . list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_type_specifier_nonunique
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 190, spurious reduction of production attribute_type_specifier_nonunique -> type_specifier_nonunique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN CHAR ATOMIC VOID
##
## Ends in an error in state: 470.
##
## list_pair(attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_qualifier . list_pair(attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
## list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_qualifier . list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_type_qualifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 192, spurious reduction of production attribute_type_qualifier -> type_qualifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN CHAR ALIGNAS LPAREN STRING_LITERAL RPAREN VOID
##
## Ends in an error in state: 472.
##
## list_pair(attribute_type_qualifier,attribute_alignment_specifier) -> attribute_alignment_specifier . list_pair(attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
## list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_alignment_specifier . list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_alignment_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 465, spurious reduction of production attribute_alignment_specifier -> alignment_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN CONST STAR
##
## Ends in an error in state: 474.
##
## list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_qualifier . list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
## list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_qualifier . list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_type_qualifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 192, spurious reduction of production attribute_type_qualifier -> type_qualifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ALIGNAS LPAREN STRING_LITERAL RPAREN STAR
##
## Ends in an error in state: 476.
##
## list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_alignment_specifier . list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
## list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_alignment_specifier . list_tuple3_ge1(attribute_type_specifier_nonunique,attribute_type_qualifier,attribute_alignment_specifier) [ UNAME STAR SEMICOLON RPAREN LPAREN LNAME LBRACK GT COMMA COLON ]
##
## The known suffix of the stack is as follows:
## attribute_alignment_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 465, spurious reduction of production attribute_alignment_specifier -> alignment_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN ASSERT LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 478.
##
## postfix_expression -> ASSERT LPAREN assignment_expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BMC_ASSUME LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 480.
##
## postfix_expression -> BMC_ASSUME LPAREN assignment_expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BMC_ASSUME LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 482.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR LPAREN assignment_expression . COMMA assignment_expression COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR LPAREN STRING_LITERAL COMMA STRING_LITERAL RPAREN
##
## Ends in an error in state: 484.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression . COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BUILTIN_CHOOSE_EXPR LPAREN STRING_LITERAL COMMA STRING_LITERAL COMMA STRING_LITERAL RBRACK
##
## Ends in an error in state: 486.
##
## postfix_expression -> BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression COMMA assignment_expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## BUILTIN_CHOOSE_EXPR LPAREN assignment_expression COMMA assignment_expression COMMA assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STATIC_ASSERT LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 488.
##
## static_assert_declaration -> STATIC_ASSERT LPAREN constant_expression . COMMA string_literal RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STATIC_ASSERT LPAREN constant_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 242, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 493, spurious reduction of production constant_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STATIC_ASSERT LPAREN STRING_LITERAL COMMA STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 490.
##
## static_assert_declaration -> STATIC_ASSERT LPAREN constant_expression COMMA string_literal . RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## STATIC_ASSERT LPAREN constant_expression COMMA string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE STATIC_ASSERT LPAREN STRING_LITERAL COMMA STRING_LITERAL RPAREN SEMICOLON WHILE
##
## Ends in an error in state: 494.
##
## struct_declaration_list -> struct_declaration_list . struct_declaration [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
## struct_or_union_specifier -> struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE boption(nonempty_list(SEMICOLON)) struct_declaration_list . RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## struct_or_union option(attribute_specifier_sequence) option(general_identifier) LBRACE boption(nonempty_list(SEMICOLON)) struct_declaration_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE BOOL GT
##
## Ends in an error in state: 498.
##
## struct_declaration -> specifier_qualifier_list . option(struct_declarator_list) SEMICOLON boption(nonempty_list(SEMICOLON)) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## specifier_qualifier_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL STAR RPAREN
##
## Ends in an error in state: 501.
##
## declarator -> pointer . direct_declarator [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR CERB_MAGIC BOOL AUTO ATOMIC ASM ALIGNAS ]
##
## The known suffix of the stack is as follows:
## pointer
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 223, spurious reduction of production option(type_qualifier_list) ->
## In state 228, spurious reduction of production option(pointer) ->
## In state 230, spurious reduction of production pointer -> STAR option(type_qualifier_list) option(pointer)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE BOOL COLON STRING_LITERAL RPAREN
##
## Ends in an error in state: 502.
##
## option(struct_declarator_list) -> struct_declarator_list . [ SEMICOLON ]
## struct_declarator_list -> struct_declarator_list . COMMA struct_declarator [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## struct_declarator_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 242, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 493, spurious reduction of production constant_expression -> conditional_expression
## In state 507, spurious reduction of production struct_declarator -> option(declarator) COLON constant_expression
## In state 509, spurious reduction of production struct_declarator_list -> struct_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE BOOL LNAME TYPE VOLATILE
##
## Ends in an error in state: 508.
##
## option(declarator) -> declarator . [ COLON ]
## struct_declarator -> declarator . [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 374, spurious reduction of production direct_declarator -> general_identifier
## In state 406, spurious reduction of production declarator -> direct_declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 513.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT SIGNED SHORT RESTRICT LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
## struct_declaration -> attribute_specifier_sequence . specifier_qualifier_list option(struct_declarator_list) SEMICOLON boption(nonempty_list(SEMICOLON)) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACE LBRACK_LBRACK ALIGNAS RBRACK RBRACK BOOL GT
##
## Ends in an error in state: 514.
##
## struct_declaration -> attribute_specifier_sequence specifier_qualifier_list . option(struct_declarator_list) SEMICOLON boption(nonempty_list(SEMICOLON)) [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF STRUCT STATIC_ASSERT SIGNED SHORT RESTRICT RBRACE LONG LNAME LBRACK_LBRACK INT FLOAT ENUM DOUBLE CONST COMPLEX CHAR BOOL ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence specifier_qualifier_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LNAME TYPE WHILE
##
## Ends in an error in state: 519.
##
## option(general_identifier) -> general_identifier . [ LBRACE ]
## struct_or_union_specifier -> struct_or_union option(attribute_specifier_sequence) general_identifier . [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## struct_or_union option(attribute_specifier_sequence) general_identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: STRUCT LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 520.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ UNAME LNAME LBRACK_LBRACK LBRACE ]
## option(attribute_specifier_sequence) -> attribute_specifier_sequence . [ UNAME LNAME LBRACE ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 521.
##
## generic_selection -> GENERIC LPAREN assignment_expression . COMMA generic_assoc_list RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## GENERIC LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA BOOL GT
##
## Ends in an error in state: 526.
##
## generic_association -> type_name . COLON assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN GENERIC LPAREN STRING_LITERAL COMMA BOOL COLON STRING_LITERAL RBRACK
##
## Ends in an error in state: 530.
##
## generic_assoc_list -> generic_assoc_list . COMMA generic_association [ RPAREN COMMA ]
## generic_selection -> GENERIC LPAREN assignment_expression COMMA generic_assoc_list . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## GENERIC LPAREN assignment_expression COMMA generic_assoc_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 528, spurious reduction of production generic_association -> type_name COLON assignment_expression
## In state 529, spurious reduction of production generic_assoc_list -> generic_association
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN BOOL GT
##
## Ends in an error in state: 534.
##
## alignment_specifier -> ALIGNAS LPAREN type_name . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ALIGNAS LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 536.
##
## alignment_specifier -> ALIGNAS LPAREN constant_expression . RPAREN [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LONG LNAME LBRACK_LBRACK LBRACK INT INLINE GT FLOAT EXTERN ENUM DOUBLE CONST COMPLEX COMMA COLON CHAR BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ALIGNAS LPAREN constant_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 242, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 493, spurious reduction of production constant_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ATOMIC LPAREN BOOL GT
##
## Ends in an error in state: 538.
##
## atomic_type_specifier -> ATOMIC LPAREN type_name . RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ATOMIC LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM WHILE
##
## Ends in an error in state: 543.
##
## asm_statement -> ASM . list(asm_qualifier) LPAREN string_literal RPAREN [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## asm_statement -> ASM . list(asm_qualifier) LPAREN string_literal asm_with_output RPAREN [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ASM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN WHILE
##
## Ends in an error in state: 549.
##
## asm_statement -> ASM list(asm_qualifier) LPAREN . string_literal RPAREN [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## asm_statement -> ASM list(asm_qualifier) LPAREN . string_literal asm_with_output RPAREN [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ASM list(asm_qualifier) LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 550.
##
## asm_statement -> ASM list(asm_qualifier) LPAREN string_literal . RPAREN [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## asm_statement -> ASM list(asm_qualifier) LPAREN string_literal . asm_with_output RPAREN [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ASM list(asm_qualifier) LPAREN string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK WHILE
##
## Ends in an error in state: 553.
##
## asm_output_input -> LBRACK . UNAME VARIABLE RBRACK string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
## asm_output_input -> LBRACK . LNAME VARIABLE RBRACK string_literal LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK UNAME VARIABLE RBRACK STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 557.
##
## asm_output_input -> LBRACK UNAME VARIABLE RBRACK string_literal . LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK UNAME VARIABLE RBRACK string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK UNAME VARIABLE RBRACK STRING_LITERAL LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 559.
##
## asm_output_input -> LBRACK UNAME VARIABLE RBRACK string_literal LPAREN expression . RPAREN [ RPAREN COMMA COLON ]
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACK UNAME VARIABLE RBRACK string_literal LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK LNAME VARIABLE RBRACK STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 564.
##
## asm_output_input -> LBRACK LNAME VARIABLE RBRACK string_literal . LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LBRACK LNAME VARIABLE RBRACK string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON LBRACK LNAME VARIABLE RBRACK STRING_LITERAL LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 566.
##
## asm_output_input -> LBRACK LNAME VARIABLE RBRACK string_literal LPAREN expression . RPAREN [ RPAREN COMMA COLON ]
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACK LNAME VARIABLE RBRACK string_literal LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 568.
##
## asm_output_input -> string_literal . LPAREN expression RPAREN [ RPAREN COMMA COLON ]
##
## The known suffix of the stack is as follows:
## string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON STRING_LITERAL LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 570.
##
## asm_output_input -> string_literal LPAREN expression . RPAREN [ RPAREN COMMA COLON ]
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## string_literal LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON COLON COLON STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 590.
##
## separated_nonempty_list(COMMA,asm_clobber) -> asm_clobber . [ RPAREN COLON ]
## separated_nonempty_list(COMMA,asm_clobber) -> asm_clobber . COMMA separated_nonempty_list(COMMA,asm_clobber) [ RPAREN COLON ]
##
## The known suffix of the stack is as follows:
## asm_clobber
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 577, spurious reduction of production asm_clobber -> string_literal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE ASM LPAREN STRING_LITERAL COLON STRING_LITERAL LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 595.
##
## separated_nonempty_list(COMMA,asm_output_input) -> asm_output_input . [ RPAREN COLON ]
## separated_nonempty_list(COMMA,asm_output_input) -> asm_output_input . COMMA separated_nonempty_list(COMMA,asm_output_input) [ RPAREN COLON ]
##
## The known suffix of the stack is as follows:
## asm_output_input
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE LNAME VARIABLE WHILE
##
## Ends in an error in state: 604.
##
## general_identifier -> var_name . [ COLON ]
## primary_expression -> var_name . [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ DOT COMMA CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## var_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE STRING_LITERAL RPAREN
##
## Ends in an error in state: 607.
##
## expression_statement -> option(expression) . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
## In state 616, spurious reduction of production option(expression) -> expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE RETURN STRING_LITERAL RPAREN
##
## Ends in an error in state: 614.
##
## jump_statement -> RETURN option(expression) . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## RETURN option(expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
## In state 616, spurious reduction of production option(expression) -> expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE STRING_LITERAL RBRACK
##
## Ends in an error in state: 616.
##
## expression -> expression . COMMA assignment_expression [ SEMICOLON RPAREN COMMA ]
## option(expression) -> expression . [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACES LBRACK_LBRACK ALIGNAS RBRACK RBRACK VOLATILE
##
## Ends in an error in state: 628.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ WHILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE SWITCH STRING_LITERAL STAR SIZEOF RETURN PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACK_LBRACK LBRACES LBRACE IF GOTO GENERIC FOR DO DEFAULT CONTINUE CONSTANT CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
## expression_statement -> attribute_specifier_sequence . expression SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## labeled_statement -> attribute_specifier_sequence . general_identifier COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## option(attribute_specifier_sequence) -> attribute_specifier_sequence . [ WHILE SWITCH RETURN LBRACES LBRACE IF GOTO FOR DO DEFAULT CONTINUE CASE BREAK ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE LBRACK_LBRACK ALIGNAS RBRACK RBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 633.
##
## expression -> expression . COMMA assignment_expression [ SEMICOLON COMMA ]
## expression_statement -> attribute_specifier_sequence expression . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CASE WHILE
##
## Ends in an error in state: 637.
##
## labeled_statement -> option(attribute_specifier_sequence) CASE . constant_expression ELLIPSIS constant_expression COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## labeled_statement -> option(attribute_specifier_sequence) CASE . constant_expression COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) CASE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CASE STRING_LITERAL RPAREN
##
## Ends in an error in state: 638.
##
## labeled_statement -> option(attribute_specifier_sequence) CASE constant_expression . ELLIPSIS constant_expression COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## labeled_statement -> option(attribute_specifier_sequence) CASE constant_expression . COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) CASE constant_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 242, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 493, spurious reduction of production constant_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE CASE STRING_LITERAL ELLIPSIS STRING_LITERAL RPAREN
##
## Ends in an error in state: 640.
##
## labeled_statement -> option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS constant_expression . COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## option(attribute_specifier_sequence) CASE constant_expression ELLIPSIS constant_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 242, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 493, spurious reduction of production constant_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE WHILE LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 653.
##
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
## iteration_statement -> WHILE LPAREN expression . RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE WHILE LPAREN STRING_LITERAL RPAREN VOLATILE
##
## Ends in an error in state: 655.
##
## iteration_statement -> WHILE LPAREN expression RPAREN magic_comment_list . scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## magic_comment_list -> magic_comment_list . CERB_MAGIC [ WHILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACK_LBRACK LBRACES LBRACE IF GOTO GENERIC FOR DO DEFAULT CONTINUE CONSTANT CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BMC_ASSUME BANG ASSERT ASM AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## WHILE LPAREN expression RPAREN magic_comment_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE SWITCH LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 662.
##
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
## selection_statement -> SWITCH LPAREN expression . RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## SWITCH LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE LBRACES SEMICOLON WHILE
##
## Ends in an error in state: 666.
##
## separated_nonempty_list(PIPES,statement) -> statement . [ RBRACES ]
## separated_nonempty_list(PIPES,statement) -> statement . PIPES separated_nonempty_list(PIPES,statement) [ RBRACES ]
##
## The known suffix of the stack is as follows:
## statement
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEDEF BOOL RPAREN
##
## Ends in an error in state: 677.
##
## no_leading_attribute_declaration -> declaration_specifiers_typedef . option(init_declarator_list(declarator_typedefname)) SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## declaration_specifiers_typedef
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 393, spurious reduction of production list(declaration_specifier) ->
## In state 394, spurious reduction of production list_eq1(attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique list(declaration_specifier)
## In state 541, spurious reduction of production list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier) -> TYPEDEF list_eq1(attribute_type_specifier_unique,declaration_specifier)
## In state 676, spurious reduction of production declaration_specifiers_typedef -> list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL TYPEDEF LNAME TYPE EQ STRING_LITERAL RPAREN
##
## Ends in an error in state: 680.
##
## init_declarator_list(declarator_typedefname) -> init_declarator_list(declarator_typedefname) . COMMA init_declarator(declarator_typedefname) [ SEMICOLON COMMA ]
## option(init_declarator_list(declarator_typedefname)) -> init_declarator_list(declarator_typedefname) . [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## init_declarator_list(declarator_typedefname)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 693, spurious reduction of production initializer_ -> assignment_expression
## In state 705, spurious reduction of production init_declarator(declarator_typedefname) -> declarator_typedefname EQ initializer_
## In state 714, spurious reduction of production init_declarator_list(declarator_typedefname) -> init_declarator(declarator_typedefname)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL TYPEDEF LNAME TYPE VOLATILE
##
## Ends in an error in state: 683.
##
## init_declarator(declarator_typedefname) -> declarator_typedefname . [ SEMICOLON COMMA ]
## init_declarator(declarator_typedefname) -> declarator_typedefname . asm_register [ SEMICOLON COMMA ]
## init_declarator(declarator_typedefname) -> declarator_typedefname . EQ initializer_ [ SEMICOLON COMMA ]
## init_declarator(declarator_typedefname) -> declarator_typedefname . asm_register EQ initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_typedefname
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 374, spurious reduction of production direct_declarator -> general_identifier
## In state 406, spurious reduction of production declarator -> direct_declarator
## In state 713, spurious reduction of production declarator_typedefname -> declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE EQ LBRACE WHILE
##
## Ends in an error in state: 685.
##
## initializer_ -> LBRACE . initializer_list RBRACE [ SEMICOLON RBRACE COMMA ]
## initializer_ -> LBRACE . initializer_list COMMA RBRACE [ SEMICOLON RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE EQ LBRACE LBRACK STRING_LITERAL RPAREN
##
## Ends in an error in state: 687.
##
## designator -> LBRACK constant_expression . RBRACK [ LBRACK EQ DOT ]
##
## The known suffix of the stack is as follows:
## LBRACK constant_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 242, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 493, spurious reduction of production constant_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE EQ LBRACE STRING_LITERAL RPAREN
##
## Ends in an error in state: 694.
##
## initializer_ -> LBRACE initializer_list . RBRACE [ SEMICOLON RBRACE COMMA ]
## initializer_ -> LBRACE initializer_list . COMMA RBRACE [ SEMICOLON RBRACE COMMA ]
## initializer_list -> initializer_list . COMMA option(designation) initializer_ [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACE initializer_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 693, spurious reduction of production initializer_ -> assignment_expression
## In state 692, spurious reduction of production initializer_list -> option(designation) initializer_
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE EQ LBRACE STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 696.
##
## initializer_ -> LBRACE initializer_list COMMA . RBRACE [ SEMICOLON RBRACE COMMA ]
## initializer_list -> initializer_list COMMA . option(designation) initializer_ [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LBRACE initializer_list COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE EQ LBRACE DOT LNAME TYPE WHILE
##
## Ends in an error in state: 700.
##
## designation -> designator_list . EQ [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACE GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
## designator_list -> designator_list . designator [ LBRACK EQ DOT ]
##
## The known suffix of the stack is as follows:
## designator_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE ASM LPAREN STRING_LITERAL STAR_EQ
##
## Ends in an error in state: 708.
##
## asm_register -> ASM LPAREN string_literal . RPAREN [ SEMICOLON EQ COMMA ]
##
## The known suffix of the stack is as follows:
## ASM LPAREN string_literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL TYPEDEF LNAME TYPE ASM LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 710.
##
## init_declarator(declarator_typedefname) -> declarator_typedefname asm_register . [ SEMICOLON COMMA ]
## init_declarator(declarator_typedefname) -> declarator_typedefname asm_register . EQ initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_typedefname asm_register
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE EQ STRING_LITERAL RPAREN
##
## Ends in an error in state: 718.
##
## init_declarator_list(declarator_varname) -> init_declarator_list(declarator_varname) . COMMA init_declarator(declarator_varname) [ SEMICOLON COMMA ]
## option(init_declarator_list(declarator_varname)) -> init_declarator_list(declarator_varname) . [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## init_declarator_list(declarator_varname)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 693, spurious reduction of production initializer_ -> assignment_expression
## In state 723, spurious reduction of production init_declarator(declarator_varname) -> declarator_varname EQ initializer_
## In state 727, spurious reduction of production init_declarator_list(declarator_varname) -> init_declarator(declarator_varname)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE COMMA LNAME TYPE VOLATILE
##
## Ends in an error in state: 721.
##
## init_declarator(declarator_varname) -> declarator_varname . [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . asm_register [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . EQ initializer_ [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . asm_register EQ initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_varname
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 374, spurious reduction of production direct_declarator -> general_identifier
## In state 406, spurious reduction of production declarator -> direct_declarator
## In state 438, spurious reduction of production declarator_varname -> declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE ASM LPAREN STRING_LITERAL RPAREN WHILE
##
## Ends in an error in state: 724.
##
## init_declarator(declarator_varname) -> declarator_varname asm_register . [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname asm_register . EQ initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declarator_varname asm_register
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: INLINE STAR
##
## Ends in an error in state: 728.
##
## list_eq1(attribute_type_specifier_unique,declaration_specifier) -> declaration_specifier . list_eq1(attribute_type_specifier_unique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier) -> declaration_specifier . list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) -> declaration_specifier . list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> declaration_specifier . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## declaration_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 366, spurious reduction of production declaration_specifier -> function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL RPAREN
##
## Ends in an error in state: 731.
##
## list_eq1(attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique . list(declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique . list_eq1(TYPEDEF,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## attribute_type_specifier_unique
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL INLINE VOID
##
## Ends in an error in state: 735.
##
## list(declaration_specifier) -> declaration_specifier . list(declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1(TYPEDEF,declaration_specifier) -> declaration_specifier . list_eq1(TYPEDEF,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## declaration_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 366, spurious reduction of production declaration_specifier -> function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CHAR RPAREN
##
## Ends in an error in state: 737.
##
## list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) -> attribute_type_specifier_nonunique . list_eq1(TYPEDEF,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) -> attribute_type_specifier_nonunique . list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> attribute_type_specifier_nonunique . list(declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> attribute_type_specifier_nonunique . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## attribute_type_specifier_nonunique
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 190, spurious reduction of production attribute_type_specifier_nonunique -> type_specifier_nonunique
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CHAR TYPEDEF WHILE
##
## Ends in an error in state: 738.
##
## list_eq1(TYPEDEF,declaration_specifier) -> TYPEDEF . list(declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) -> TYPEDEF . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## TYPEDEF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CHAR INLINE VOID
##
## Ends in an error in state: 741.
##
## list(declaration_specifier) -> declaration_specifier . list(declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1(TYPEDEF,declaration_specifier) -> declaration_specifier . list_eq1(TYPEDEF,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) -> declaration_specifier . list_eq1_ge1(TYPEDEF,attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
## list_ge1(attribute_type_specifier_nonunique,declaration_specifier) -> declaration_specifier . list_ge1(attribute_type_specifier_nonunique,declaration_specifier) [ UNAME STAR SEMICOLON LPAREN LNAME ]
##
## The known suffix of the stack is as follows:
## declaration_specifier
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 366, spurious reduction of production declaration_specifier -> function_specifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE SEMICOLON RBRACES
##
## Ends in an error in state: 743.
##
## block_item_list -> block_item_list . block_item [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## option(block_item_list) -> block_item_list . [ RBRACE ]
##
## The known suffix of the stack is as follows:
## block_item_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE LBRACK_LBRACK ALIGNAS RBRACK RBRACK VARIABLE
##
## Ends in an error in state: 745.
##
## attribute_declaration -> attribute_specifier_sequence . SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT AMPERSAND ALIGNOF ALIGNAS ]
## declaration -> attribute_specifier_sequence . declaration_specifiers option(init_declarator_list(declarator_varname)) SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## declaration -> attribute_specifier_sequence . declaration_specifiers_typedef option(init_declarator_list(declarator_typedefname)) SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## expression_statement -> attribute_specifier_sequence . expression SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## labeled_statement -> attribute_specifier_sequence . general_identifier COLON statement [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## option(attribute_specifier_sequence) -> attribute_specifier_sequence . [ WHILE SWITCH RETURN LBRACES LBRACE IF GOTO FOR DO DEFAULT CONTINUE CASE BREAK ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS RBRACK RBRACK TYPEDEF BOOL RPAREN
##
## Ends in an error in state: 747.
##
## declaration -> attribute_specifier_sequence declaration_specifiers_typedef . option(init_declarator_list(declarator_typedefname)) SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRINT_TYPE PLUS_PLUS PLUS OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN EOF ENUM DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence declaration_specifiers_typedef
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 393, spurious reduction of production list(declaration_specifier) ->
## In state 394, spurious reduction of production list_eq1(attribute_type_specifier_unique,declaration_specifier) -> attribute_type_specifier_unique list(declaration_specifier)
## In state 541, spurious reduction of production list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier) -> TYPEDEF list_eq1(attribute_type_specifier_unique,declaration_specifier)
## In state 676, spurious reduction of production declaration_specifiers_typedef -> list_eq1_eq1(TYPEDEF,attribute_type_specifier_unique,declaration_specifier)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE IF WHILE
##
## Ends in an error in state: 755.
##
## selection_statement -> IF . LPAREN expression RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## selection_statement -> IF . LPAREN expression RPAREN scoped(statement) ELSE scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE IF LPAREN WHILE
##
## Ends in an error in state: 756.
##
## selection_statement -> IF LPAREN . expression RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## selection_statement -> IF LPAREN . expression RPAREN scoped(statement) ELSE scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE IF LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 757.
##
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
## selection_statement -> IF LPAREN expression . RPAREN scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## selection_statement -> IF LPAREN expression . RPAREN scoped(statement) ELSE scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE IF LPAREN STRING_LITERAL RPAREN SEMICOLON VARIABLE
##
## Ends in an error in state: 759.
##
## selection_statement -> IF LPAREN expression RPAREN scoped(statement) . [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## selection_statement -> IF LPAREN expression RPAREN scoped(statement) . ELSE scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expression RPAREN scoped(statement)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR WHILE
##
## Ends in an error in state: 762.
##
## iteration_statement -> FOR . LPAREN option(expression) SEMICOLON option(expression) SEMICOLON option(expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## iteration_statement -> FOR . LPAREN declaration option(expression) SEMICOLON option(expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN WHILE
##
## Ends in an error in state: 763.
##
## iteration_statement -> FOR LPAREN . option(expression) SEMICOLON option(expression) SEMICOLON option(expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## iteration_statement -> FOR LPAREN . declaration option(expression) SEMICOLON option(expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 764.
##
## iteration_statement -> FOR LPAREN option(expression) . SEMICOLON option(expression) SEMICOLON option(expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN option(expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
## In state 616, spurious reduction of production option(expression) -> expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN SEMICOLON STRING_LITERAL RPAREN
##
## Ends in an error in state: 766.
##
## iteration_statement -> FOR LPAREN option(expression) SEMICOLON option(expression) . SEMICOLON option(expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN option(expression) SEMICOLON option(expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
## In state 616, spurious reduction of production option(expression) -> expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN SEMICOLON SEMICOLON STRING_LITERAL SEMICOLON
##
## Ends in an error in state: 768.
##
## iteration_statement -> FOR LPAREN option(expression) SEMICOLON option(expression) SEMICOLON option(expression) . RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN option(expression) SEMICOLON option(expression) SEMICOLON option(expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
## In state 616, spurious reduction of production option(expression) -> expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN SEMICOLON SEMICOLON RPAREN VOLATILE
##
## Ends in an error in state: 770.
##
## iteration_statement -> FOR LPAREN option(expression) SEMICOLON option(expression) SEMICOLON option(expression) RPAREN magic_comment_list . scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## magic_comment_list -> magic_comment_list . CERB_MAGIC [ WHILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACK_LBRACK LBRACES LBRACE IF GOTO GENERIC FOR DO DEFAULT CONTINUE CONSTANT CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BMC_ASSUME BANG ASSERT ASM AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN option(expression) SEMICOLON option(expression) SEMICOLON option(expression) RPAREN magic_comment_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN BOOL SEMICOLON STRING_LITERAL RPAREN
##
## Ends in an error in state: 773.
##
## iteration_statement -> FOR LPAREN declaration option(expression) . SEMICOLON option(expression) RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN declaration option(expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
## In state 616, spurious reduction of production option(expression) -> expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN BOOL SEMICOLON SEMICOLON STRING_LITERAL SEMICOLON
##
## Ends in an error in state: 775.
##
## iteration_statement -> FOR LPAREN declaration option(expression) SEMICOLON option(expression) . RPAREN magic_comment_list scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN declaration option(expression) SEMICOLON option(expression)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
## In state 616, spurious reduction of production option(expression) -> expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN BOOL SEMICOLON SEMICOLON RPAREN VOLATILE
##
## Ends in an error in state: 777.
##
## iteration_statement -> FOR LPAREN declaration option(expression) SEMICOLON option(expression) RPAREN magic_comment_list . scoped(statement) [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
## magic_comment_list -> magic_comment_list . CERB_MAGIC [ WHILE VA_START VA_END VA_COPY VA_ARG UNAME TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME LBRACK_LBRACK LBRACES LBRACE IF GOTO GENERIC FOR DO DEFAULT CONTINUE CONSTANT CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BMC_ASSUME BANG ASSERT ASM AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## FOR LPAREN declaration option(expression) SEMICOLON option(expression) RPAREN magic_comment_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE FOR LPAREN LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 779.
##
## attribute_declaration -> attribute_specifier_sequence . SEMICOLON [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF SEMICOLON PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration -> attribute_specifier_sequence . declaration_specifiers option(init_declarator_list(declarator_varname)) SEMICOLON [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF SEMICOLON PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
## declaration -> attribute_specifier_sequence . declaration_specifiers_typedef option(init_declarator_list(declarator_typedefname)) SEMICOLON [ VA_START VA_END VA_COPY VA_ARG UNAME TILDE STRING_LITERAL STAR SIZEOF SEMICOLON PRINT_TYPE PLUS_PLUS PLUS OFFSETOF MINUS_MINUS MINUS LPAREN LNAME GENERIC CONSTANT BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BMC_ASSUME BANG ASSERT AMPERSAND ALIGNOF ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN LBRACE DO SEMICOLON WHILE LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 785.
##
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
## iteration_statement -> DO magic_comment_list scoped(statement) WHILE LPAREN expression . RPAREN SEMICOLON [ WHILE VOLATILE VOID VA_START VA_END VA_COPY VA_ARG UNSIGNED UNION UNAME TYPEOF TYPEDEF TILDE THREAD_LOCAL SWITCH STRUCT STRING_LITERAL STATIC_ASSERT STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACES RBRACE PRINT_TYPE PLUS_PLUS PLUS PIPES OFFSETOF NORETURN MINUS_MINUS MINUS LPAREN LONG LNAME LBRACK_LBRACK LBRACES LBRACE INT INLINE IF GOTO GENERIC FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT CONTINUE CONSTANT CONST COMPLEX CHAR CERB_MAGIC CASE BUILTIN_TYPES_COMPATIBLE_P BUILTIN_CHOOSE_EXPR BREAK BOOL BMC_ASSUME BANG AUTO ATOMIC ASSERT ASM AMPERSAND ALIGNOF ALIGNAS ]
##
## The known suffix of the stack is as follows:
## DO magic_comment_list scoped(statement) WHILE LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN BOOL GT
##
## Ends in an error in state: 792.
##
## cast_expression -> LPAREN type_name . RPAREN cast_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> LPAREN type_name . RPAREN LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN BOOL RPAREN WHILE
##
## Ends in an error in state: 793.
##
## cast_expression -> LPAREN type_name RPAREN . cast_expression [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## postfix_expression -> LPAREN type_name RPAREN . LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN type_name RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN BOOL RPAREN LBRACE STRING_LITERAL RPAREN
##
## Ends in an error in state: 795.
##
## initializer_list -> initializer_list . COMMA option(designation) initializer_ [ RBRACE COMMA ]
## postfix_expression -> LPAREN type_name RPAREN LBRACE initializer_list . option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN type_name RPAREN LBRACE initializer_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 693, spurious reduction of production initializer_ -> assignment_expression
## In state 692, spurious reduction of production initializer_list -> option(designation) initializer_
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN BOOL RPAREN LBRACE STRING_LITERAL COMMA WHILE
##
## Ends in an error in state: 796.
##
## initializer_list -> initializer_list COMMA . option(designation) initializer_ [ RBRACE COMMA ]
## option(COMMA) -> COMMA . [ RBRACE ]
##
## The known suffix of the stack is as follows:
## initializer_list COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 800.
##
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
## primary_expression -> LPAREN expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN MINUS_MINUS LPAREN BOOL GT
##
## Ends in an error in state: 802.
##
## postfix_expression -> LPAREN type_name . RPAREN LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACE LNAME TYPE LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 806.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ RBRACE LBRACK_LBRACK EQ COMMA ]
## enumerator -> enumeration_constant attribute_specifier_sequence . [ RBRACE COMMA ]
## enumerator -> enumeration_constant attribute_specifier_sequence . EQ constant_expression [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## enumeration_constant attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LNAME TYPE WHILE
##
## Ends in an error in state: 812.
##
## enum_specifier -> ENUM general_identifier . [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## option(general_identifier) -> general_identifier . [ LBRACE ]
##
## The known suffix of the stack is as follows:
## ENUM general_identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 813.
##
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ UNAME LNAME LBRACK_LBRACK LBRACE ]
## enum_specifier -> ENUM attribute_specifier_sequence . option(general_identifier) LBRACE enumerator_list option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## enum_specifier -> ENUM attribute_specifier_sequence . general_identifier [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## ENUM attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACK_LBRACK ALIGNAS RBRACK RBRACK LBRACE LNAME TYPE EQ STRING_LITERAL RPAREN
##
## Ends in an error in state: 816.
##
## enum_specifier -> ENUM attribute_specifier_sequence option(general_identifier) LBRACE enumerator_list . option(COMMA) RBRACE [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## enumerator_list -> enumerator_list . COMMA enumerator [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## ENUM attribute_specifier_sequence option(general_identifier) LBRACE enumerator_list
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 242, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 493, spurious reduction of production constant_expression -> conditional_expression
## In state 805, spurious reduction of production enumerator -> enumeration_constant EQ constant_expression
## In state 811, spurious reduction of production enumerator_list -> enumerator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ENUM LBRACK_LBRACK ALIGNAS RBRACK RBRACK LNAME TYPE WHILE
##
## Ends in an error in state: 819.
##
## enum_specifier -> ENUM attribute_specifier_sequence general_identifier . [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
## option(general_identifier) -> general_identifier . [ LBRACE ]
##
## The known suffix of the stack is as follows:
## ENUM attribute_specifier_sequence general_identifier
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN OFFSETOF LPAREN BOOL GT
##
## Ends in an error in state: 820.
##
## postfix_expression -> OFFSETOF LPAREN type_name . COMMA general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN PRINT_TYPE LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 825.
##
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
## postfix_expression -> PRINT_TYPE LPAREN expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## PRINT_TYPE LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN SIZEOF LPAREN WHILE
##
## Ends in an error in state: 827.
##
## postfix_expression -> LPAREN . type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## primary_expression -> LPAREN . expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## primary_expression -> LPAREN . LBRACE option(block_item_list) RBRACE RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expression -> SIZEOF LPAREN . type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## SIZEOF LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN SIZEOF LPAREN BOOL GT
##
## Ends in an error in state: 828.
##
## postfix_expression -> LPAREN type_name . RPAREN LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expression -> SIZEOF LPAREN type_name . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## SIZEOF LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN SIZEOF LPAREN BOOL RPAREN WHILE
##
## Ends in an error in state: 829.
##
## postfix_expression -> LPAREN type_name RPAREN . LBRACE initializer_list option(COMMA) RBRACE [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expression -> SIZEOF LPAREN type_name RPAREN . [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## SIZEOF LPAREN type_name RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN VA_ARG LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 831.
##
## postfix_expression -> VA_ARG LPAREN assignment_expression . COMMA type_name RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_ARG LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN VA_ARG LPAREN STRING_LITERAL COMMA BOOL GT
##
## Ends in an error in state: 833.
##
## postfix_expression -> VA_ARG LPAREN assignment_expression COMMA type_name . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_ARG LPAREN assignment_expression COMMA type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN VA_COPY LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 835.
##
## postfix_expression -> VA_COPY LPAREN assignment_expression . COMMA assignment_expression RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_COPY LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN VA_COPY LPAREN STRING_LITERAL COMMA STRING_LITERAL RBRACK
##
## Ends in an error in state: 837.
##
## postfix_expression -> VA_COPY LPAREN assignment_expression COMMA assignment_expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_COPY LPAREN assignment_expression COMMA assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN VA_END LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 839.
##
## postfix_expression -> VA_END LPAREN assignment_expression . RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_END LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: ALIGNAS LPAREN VA_START LPAREN STRING_LITERAL RPAREN
##
## Ends in an error in state: 841.
##
## postfix_expression -> VA_START LPAREN assignment_expression . COMMA general_identifier RPAREN [ STAR_EQ STAR SLASH_EQ SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION_COLON QUESTION PLUS_PLUS PLUS_EQ PLUS PIPE_PIPE PIPE_EQ PIPE PERCENT_EQ PERCENT MINUS_MINUS MINUS_GT MINUS_EQ MINUS LT_LT_EQ LT_LT LT_EQ LT LPAREN LBRACK GT_GT_EQ GT_GT GT_EQ GT EQ_EQ EQ ELLIPSIS DOT COMMA COLON CARET_EQ CARET BANG_EQ AMPERSAND_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## VA_START LPAREN assignment_expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEOF LPAREN BOOL GT
##
## Ends in an error in state: 845.
##
## type_specifier_unique -> TYPEOF LPAREN type_name . RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## TYPEOF LPAREN type_name
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: TYPEOF LPAREN STRING_LITERAL RBRACK
##
## Ends in an error in state: 847.
##
## expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
## type_specifier_unique -> TYPEOF LPAREN expression . RPAREN [ VOLATILE UNAME TYPEDEF THREAD_LOCAL STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER NORETURN LPAREN LNAME LBRACK_LBRACK LBRACK INLINE GT EXTERN CONST COMMA COLON AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## TYPEOF LPAREN expression
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 118, spurious reduction of production nonempty_list(string_literal_component) -> string_literal_component
## In state 122, spurious reduction of production string_literal -> nonempty_list(string_literal_component)
## In state 243, spurious reduction of production primary_expression -> string_literal
## In state 244, spurious reduction of production postfix_expression -> primary_expression
## In state 245, spurious reduction of production unary_expression -> postfix_expression
## In state 251, spurious reduction of production cast_expression -> unary_expression
## In state 274, spurious reduction of production multiplicative_expression -> cast_expression
## In state 266, spurious reduction of production additive_expression -> multiplicative_expression
## In state 285, spurious reduction of production shift_expression -> additive_expression
## In state 264, spurious reduction of production relational_expression -> shift_expression
## In state 282, spurious reduction of production equality_expression -> relational_expression
## In state 300, spurious reduction of production _AND_expression -> equality_expression
## In state 308, spurious reduction of production exclusive_OR_expression -> _AND_expression
## In state 309, spurious reduction of production inclusive_OR_expression -> exclusive_OR_expression
## In state 310, spurious reduction of production logical_AND_expression -> inclusive_OR_expression
## In state 294, spurious reduction of production logical_OR_expression -> logical_AND_expression
## In state 292, spurious reduction of production conditional_expression -> logical_OR_expression
## In state 315, spurious reduction of production assignment_expression -> conditional_expression
## In state 319, spurious reduction of production expression -> assignment_expression
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_OWNED LT BOOL COLON
##
## Ends in an error in state: 850.
##
## pred -> CN_OWNED LT ctype . GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_OWNED LT ctype
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
## In state 849, spurious reduction of production ctype -> type_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_BLOCK LT BOOL COLON
##
## Ends in an error in state: 854.
##
## pred -> CN_BLOCK LT ctype . GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_BLOCK LT ctype
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
## In state 849, spurious reduction of production ctype -> type_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_UNPACK CN_BLOCK COMMA
##
## Ends in an error in state: 856.
##
## cn_statement -> CN_UNPACK pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNPACK pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 852, spurious reduction of production pred -> CN_BLOCK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE UNAME WHILE
##
## Ends in an error in state: 858.
##
## prim_expr -> UNAME . VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . VARIABLE cons_args [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE cons_args [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE UNAME VARIABLE WHILE
##
## Ends in an error in state: 859.
##
## prim_expr -> UNAME VARIABLE . [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME VARIABLE . cons_args [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT STRUCT WHILE
##
## Ends in an error in state: 862.
##
## prim_expr -> STRUCT . UNAME VARIABLE LBRACE record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> STRUCT . LNAME VARIABLE LBRACE record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> STRUCT . UNAME TYPE LBRACE record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> STRUCT . LNAME TYPE LBRACE record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT STRUCT UNAME WHILE
##
## Ends in an error in state: 863.
##
## prim_expr -> STRUCT UNAME . VARIABLE LBRACE record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> STRUCT UNAME . TYPE LBRACE record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LNAME TYPE LBRACE UNAME WHILE
##
## Ends in an error in state: 866.
##
## member_def -> UNAME . VARIABLE COLON expr [ RBRACE COMMA ]
## member_def -> UNAME . TYPE COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT SIZEOF LT BOOL COLON
##
## Ends in an error in state: 872.
##
## unary_expr -> SIZEOF LT ctype . GT [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## SIZEOF LT ctype
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
## In state 849, spurious reduction of production ctype -> type_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF WHILE
##
## Ends in an error in state: 875.
##
## unary_expr -> OFFSETOF . LPAREN UNAME VARIABLE COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN UNAME VARIABLE COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN UNAME VARIABLE COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN UNAME VARIABLE COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN LNAME VARIABLE COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN LNAME VARIABLE COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN LNAME VARIABLE COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN LNAME VARIABLE COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN UNAME TYPE COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN UNAME TYPE COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN UNAME TYPE COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN UNAME TYPE COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN LNAME TYPE COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN LNAME TYPE COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN LNAME TYPE COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF . LPAREN LNAME TYPE COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN WHILE
##
## Ends in an error in state: 876.
##
## unary_expr -> OFFSETOF LPAREN . UNAME VARIABLE COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . UNAME VARIABLE COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . UNAME VARIABLE COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . UNAME VARIABLE COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . LNAME VARIABLE COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . LNAME VARIABLE COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . LNAME VARIABLE COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . LNAME VARIABLE COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . UNAME TYPE COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . UNAME TYPE COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . UNAME TYPE COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . UNAME TYPE COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . LNAME TYPE COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . LNAME TYPE COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . LNAME TYPE COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN . LNAME TYPE COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME WHILE
##
## Ends in an error in state: 877.
##
## unary_expr -> OFFSETOF LPAREN UNAME . VARIABLE COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME . VARIABLE COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME . VARIABLE COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME . VARIABLE COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME . TYPE COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME . TYPE COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME . TYPE COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME . TYPE COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE WHILE
##
## Ends in an error in state: 878.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE . COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE . COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE . COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE . COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 879.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA . UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA . LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA . UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA . LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME WHILE
##
## Ends in an error in state: 880.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME WHILE
##
## Ends in an error in state: 885.
##
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME VARIABLE COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE WHILE
##
## Ends in an error in state: 890.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE . COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE . COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE . COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE . COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA WHILE
##
## Ends in an error in state: 891.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA . UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA . LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA . UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA . LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA UNAME WHILE
##
## Ends in an error in state: 892.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA UNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA UNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN UNAME TYPE COMMA LNAME WHILE
##
## Ends in an error in state: 897.
##
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA LNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN UNAME TYPE COMMA LNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN UNAME TYPE COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME WHILE
##
## Ends in an error in state: 902.
##
## unary_expr -> OFFSETOF LPAREN LNAME . VARIABLE COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME . VARIABLE COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME . VARIABLE COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME . VARIABLE COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME . TYPE COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME . TYPE COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME . TYPE COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME . TYPE COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE WHILE
##
## Ends in an error in state: 903.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE . COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE . COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE . COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE . COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA WHILE
##
## Ends in an error in state: 904.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA . UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA . LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA . UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA . LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME WHILE
##
## Ends in an error in state: 905.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME WHILE
##
## Ends in an error in state: 910.
##
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME VARIABLE COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE WHILE
##
## Ends in an error in state: 915.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE . COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE . COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE . COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE . COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA WHILE
##
## Ends in an error in state: 916.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA . UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA . LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA . UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA . LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA UNAME WHILE
##
## Ends in an error in state: 917.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA UNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA UNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT OFFSETOF LPAREN LNAME TYPE COMMA LNAME WHILE
##
## Ends in an error in state: 922.
##
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA LNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> OFFSETOF LPAREN LNAME TYPE COMMA LNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## OFFSETOF LPAREN LNAME TYPE COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN STRUCT WHILE
##
## Ends in an error in state: 930.
##
## base_type_explicit -> STRUCT . UNAME VARIABLE [ UNAME RPAREN LNAME ]
## base_type_explicit -> STRUCT . LNAME VARIABLE [ UNAME RPAREN LNAME ]
## base_type_explicit -> STRUCT . UNAME TYPE [ UNAME RPAREN LNAME ]
## base_type_explicit -> STRUCT . LNAME TYPE [ UNAME RPAREN LNAME ]
## prim_expr -> STRUCT . UNAME VARIABLE LBRACE record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> STRUCT . LNAME VARIABLE LBRACE record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> STRUCT . UNAME TYPE LBRACE record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> STRUCT . LNAME TYPE LBRACE record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN STRUCT UNAME WHILE
##
## Ends in an error in state: 931.
##
## base_type_explicit -> STRUCT UNAME . VARIABLE [ UNAME RPAREN LNAME ]
## base_type_explicit -> STRUCT UNAME . TYPE [ UNAME RPAREN LNAME ]
## prim_expr -> STRUCT UNAME . VARIABLE LBRACE record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> STRUCT UNAME . TYPE LBRACE record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN STRUCT UNAME VARIABLE WHILE
##
## Ends in an error in state: 932.
##
## base_type_explicit -> STRUCT UNAME VARIABLE . [ UNAME RPAREN LNAME ]
## prim_expr -> STRUCT UNAME VARIABLE . LBRACE record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN STRUCT UNAME TYPE WHILE
##
## Ends in an error in state: 933.
##
## base_type_explicit -> STRUCT UNAME TYPE . [ UNAME RPAREN LNAME ]
## prim_expr -> STRUCT UNAME TYPE . LBRACE record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LNAME TYPE LBRACE LNAME WHILE
##
## Ends in an error in state: 935.
##
## member_def -> LNAME . VARIABLE COLON expr [ RBRACE COMMA ]
## member_def -> LNAME . TYPE COLON expr [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LNAME WHILE
##
## Ends in an error in state: 938.
##
## prim_expr -> LNAME . VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . VARIABLE cons_args [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . TYPE cons_args [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LNAME VARIABLE WHILE
##
## Ends in an error in state: 939.
##
## prim_expr -> LNAME VARIABLE . [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME VARIABLE . cons_args [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE WHILE
##
## Ends in an error in state: 942.
##
## prim_expr -> LBRACE . expr RBRACE PERCENT UNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LBRACE . expr RBRACE PERCENT LNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LBRACE . record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LBRACE . nonempty_member_updates RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> LBRACE . expr RBRACE CN_UNCHANGED [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE UNAME WHILE
##
## Ends in an error in state: 943.
##
## member_def -> UNAME . VARIABLE COLON expr [ RBRACE COMMA ]
## member_def -> UNAME . TYPE COLON expr [ RBRACE COMMA ]
## prim_expr -> UNAME . VARIABLE [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . VARIABLE cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE UNAME VARIABLE WHILE
##
## Ends in an error in state: 944.
##
## member_def -> UNAME VARIABLE . COLON expr [ RBRACE COMMA ]
## prim_expr -> UNAME VARIABLE . [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME VARIABLE . cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LNAME TYPE LBRACE UNAME VARIABLE COLON CN_CONSTANT RPAREN
##
## Ends in an error in state: 947.
##
## separated_nonempty_list(COMMA,member_def) -> member_def . [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def . COMMA separated_nonempty_list(COMMA,member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## member_def
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
## In state 1427, spurious reduction of production member_def -> UNAME VARIABLE COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE UNAME TYPE WHILE
##
## Ends in an error in state: 953.
##
## member_def -> UNAME TYPE . COLON expr [ RBRACE COMMA ]
## prim_expr -> UNAME TYPE . [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME TYPE . cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE UNAME WHILE
##
## Ends in an error in state: 959.
##
## base_type -> UNAME . VARIABLE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## base_type -> UNAME . TYPE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE STRUCT WHILE
##
## Ends in an error in state: 962.
##
## base_type_explicit -> STRUCT . UNAME VARIABLE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## base_type_explicit -> STRUCT . LNAME VARIABLE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## base_type_explicit -> STRUCT . UNAME TYPE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## base_type_explicit -> STRUCT . LNAME TYPE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## STRUCT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE STRUCT UNAME WHILE
##
## Ends in an error in state: 963.
##
## base_type_explicit -> STRUCT UNAME . VARIABLE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## base_type_explicit -> STRUCT UNAME . TYPE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## STRUCT UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE STRUCT LNAME WHILE
##
## Ends in an error in state: 966.
##
## base_type_explicit -> STRUCT LNAME . VARIABLE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## base_type_explicit -> STRUCT LNAME . TYPE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## STRUCT LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LNAME WHILE
##
## Ends in an error in state: 969.
##
## base_type -> LNAME . VARIABLE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## base_type -> LNAME . TYPE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_DATATYPE WHILE
##
## Ends in an error in state: 984.
##
## base_type_explicit -> CN_DATATYPE . UNAME VARIABLE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## base_type_explicit -> CN_DATATYPE . LNAME VARIABLE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## base_type_explicit -> CN_DATATYPE . UNAME TYPE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## base_type_explicit -> CN_DATATYPE . LNAME TYPE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_DATATYPE UNAME WHILE
##
## Ends in an error in state: 985.
##
## base_type_explicit -> CN_DATATYPE UNAME . VARIABLE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## base_type_explicit -> CN_DATATYPE UNAME . TYPE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_DATATYPE LNAME WHILE
##
## Ends in an error in state: 988.
##
## base_type_explicit -> CN_DATATYPE LNAME . VARIABLE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## base_type_explicit -> CN_DATATYPE LNAME . TYPE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_TUPLE LT CN_ALLOC_ID WHILE
##
## Ends in an error in state: 1006.
##
## separated_nonempty_list(COMMA,base_type) -> base_type . [ GT ]
## separated_nonempty_list(COMMA,base_type) -> base_type . COMMA separated_nonempty_list(COMMA,base_type) [ GT ]
##
## The known suffix of the stack is as follows:
## base_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_ALLOC_ID LNAME TYPE RPAREN
##
## Ends in an error in state: 1010.
##
## base_type_explicit -> LBRACE nonempty_cn_params . RBRACE [ UNAME RPAREN LNAME GT EOF COMMA CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## LBRACE nonempty_cn_params
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1009, spurious reduction of production nonempty_cn_params -> separated_nonempty_list(COMMA,base_type_cn_variable)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_ALLOC_ID WHILE
##
## Ends in an error in state: 1012.
##
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type . UNAME VARIABLE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type . LNAME VARIABLE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type . UNAME TYPE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type . LNAME TYPE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type . UNAME VARIABLE COMMA separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type . LNAME VARIABLE COMMA separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type . UNAME TYPE COMMA separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type . LNAME TYPE COMMA separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_ALLOC_ID UNAME WHILE
##
## Ends in an error in state: 1013.
##
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type UNAME . VARIABLE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type UNAME . TYPE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type UNAME . VARIABLE COMMA separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type UNAME . TYPE COMMA separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_ALLOC_ID UNAME VARIABLE WHILE
##
## Ends in an error in state: 1014.
##
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type UNAME VARIABLE . [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type UNAME VARIABLE . COMMA separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_ALLOC_ID UNAME TYPE WHILE
##
## Ends in an error in state: 1017.
##
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type UNAME TYPE . [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type UNAME TYPE . COMMA separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_ALLOC_ID LNAME WHILE
##
## Ends in an error in state: 1020.
##
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME . VARIABLE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME . TYPE [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME . VARIABLE COMMA separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME . TYPE COMMA separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_ALLOC_ID LNAME VARIABLE WHILE
##
## Ends in an error in state: 1021.
##
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME VARIABLE . [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME VARIABLE . COMMA separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE LBRACE CN_ALLOC_ID LNAME TYPE WHILE
##
## Ends in an error in state: 1024.
##
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE . [ RPAREN RBRACE ]
## separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE . COMMA separated_nonempty_list(COMMA,base_type_cn_variable) [ RPAREN RBRACE ]
##
## The known suffix of the stack is as follows:
## base_type LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT WHILE
##
## Ends in an error in state: 1032.
##
## prim_expr -> CN_MEMBER_SHIFT . LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT UNAME VARIABLE GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT UNAME VARIABLE GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT UNAME VARIABLE GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT UNAME VARIABLE GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT LNAME VARIABLE GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT LNAME VARIABLE GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT LNAME VARIABLE GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT LNAME VARIABLE GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT UNAME TYPE GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT UNAME TYPE GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT UNAME TYPE GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT UNAME TYPE GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT LNAME TYPE GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT LNAME TYPE GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT LNAME TYPE GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT . LT LNAME TYPE GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT WHILE
##
## Ends in an error in state: 1033.
##
## prim_expr -> CN_MEMBER_SHIFT LT . UNAME VARIABLE GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . UNAME VARIABLE GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . UNAME VARIABLE GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . UNAME VARIABLE GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . LNAME VARIABLE GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . LNAME VARIABLE GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . LNAME VARIABLE GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . LNAME VARIABLE GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . UNAME TYPE GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . UNAME TYPE GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . UNAME TYPE GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . UNAME TYPE GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . LNAME TYPE GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . LNAME TYPE GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . LNAME TYPE GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT . LNAME TYPE GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME WHILE
##
## Ends in an error in state: 1034.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME . VARIABLE GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME . VARIABLE GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME . VARIABLE GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME . VARIABLE GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME . TYPE GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME . TYPE GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME . TYPE GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME . TYPE GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME VARIABLE WHILE
##
## Ends in an error in state: 1035.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE . GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE . GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE . GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE . GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME VARIABLE GT WHILE
##
## Ends in an error in state: 1036.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT . LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT . LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT . LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT . LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME VARIABLE GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN WHILE
##
## Ends in an error in state: 1037.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN . expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN . expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN . expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN . expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH UNAME WHILE
##
## Ends in an error in state: 1039.
##
## match_target -> UNAME . VARIABLE [ LBRACE ]
## match_target -> UNAME . TYPE [ LBRACE ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_LET WHILE
##
## Ends in an error in state: 1043.
##
## expr -> CN_LET . UNAME VARIABLE EQ expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr -> CN_LET . LNAME VARIABLE EQ expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr -> CN_LET . UNAME TYPE EQ expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr -> CN_LET . LNAME TYPE EQ expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_LET UNAME WHILE
##
## Ends in an error in state: 1044.
##
## expr -> CN_LET UNAME . VARIABLE EQ expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr -> CN_LET UNAME . TYPE EQ expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_GOOD LT BOOL COLON
##
## Ends in an error in state: 1049.
##
## cn_good -> CN_GOOD LT ctype . GT [ LPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CN_GOOD LT ctype
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
## In state 849, spurious reduction of production ctype -> type_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_EACH WHILE
##
## Ends in an error in state: 1052.
##
## expr_without_let -> CN_EACH . LPAREN base_type UNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr_without_let -> CN_EACH . LPAREN base_type LNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr_without_let -> CN_EACH . LPAREN base_type UNAME TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr_without_let -> CN_EACH . LPAREN base_type LNAME TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_EACH LPAREN WHILE
##
## Ends in an error in state: 1053.
##
## expr_without_let -> CN_EACH LPAREN . base_type UNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr_without_let -> CN_EACH LPAREN . base_type LNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr_without_let -> CN_EACH LPAREN . base_type UNAME TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr_without_let -> CN_EACH LPAREN . base_type LNAME TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID WHILE
##
## Ends in an error in state: 1054.
##
## expr_without_let -> CN_EACH LPAREN base_type . UNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr_without_let -> CN_EACH LPAREN base_type . LNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr_without_let -> CN_EACH LPAREN base_type . UNAME TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr_without_let -> CN_EACH LPAREN base_type . LNAME TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID UNAME WHILE
##
## Ends in an error in state: 1055.
##
## expr_without_let -> CN_EACH LPAREN base_type UNAME . VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr_without_let -> CN_EACH LPAREN base_type UNAME . TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_ARRAY_SHIFT WHILE
##
## Ends in an error in state: 1064.
##
## prim_expr -> CN_ARRAY_SHIFT . LT ctype GT LPAREN expr COMMA expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_ARRAY_SHIFT . LPAREN expr COMMA expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_ARRAY_SHIFT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_ARRAY_SHIFT LT BOOL COLON
##
## Ends in an error in state: 1066.
##
## prim_expr -> CN_ARRAY_SHIFT LT ctype . GT LPAREN expr COMMA expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_ARRAY_SHIFT LT ctype
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 186, spurious reduction of production attribute_type_specifier_unique -> type_specifier_unique
## In state 459, spurious reduction of production list_pair(attribute_type_qualifier,attribute_alignment_specifier) ->
## In state 460, spurious reduction of production list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier) -> attribute_type_specifier_unique list_pair(attribute_type_qualifier,attribute_alignment_specifier)
## In state 458, spurious reduction of production specifier_qualifier_list -> list_tuple3_eq1(attribute_type_specifier_unique,attribute_type_qualifier,attribute_alignment_specifier)
## In state 222, spurious reduction of production option(abstract_declarator) ->
## In state 455, spurious reduction of production type_name -> specifier_qualifier_list option(abstract_declarator)
## In state 849, spurious reduction of production ctype -> type_name
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT AMPERSAND WHILE
##
## Ends in an error in state: 1070.
##
## unary_expr -> AMPERSAND . LPAREN prim_expr MINUS_GT UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND . LPAREN prim_expr MINUS_GT LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND . LPAREN prim_expr MINUS_GT UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND . LPAREN prim_expr MINUS_GT LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND . UNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND . LNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND . UNAME TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND . LNAME TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## AMPERSAND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT AMPERSAND UNAME WHILE
##
## Ends in an error in state: 1071.
##
## unary_expr -> AMPERSAND UNAME . VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND UNAME . TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## AMPERSAND UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT AMPERSAND LPAREN WHILE
##
## Ends in an error in state: 1074.
##
## unary_expr -> AMPERSAND LPAREN . prim_expr MINUS_GT UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND LPAREN . prim_expr MINUS_GT LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND LPAREN . prim_expr MINUS_GT UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND LPAREN . prim_expr MINUS_GT LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT WHILE
##
## Ends in an error in state: 1079.
##
## prim_expr -> prim_expr . DOT UNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . DOT LNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . DOT UNAME TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . DOT LNAME TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . MINUS_GT UNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . MINUS_GT LNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . MINUS_GT UNAME TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . MINUS_GT LNAME TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . LBRACK expr RBRACK [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . LBRACK separated_nonempty_list(COMMA,index_update) RBRACK [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> prim_expr . [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## prim_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT MINUS_GT WHILE
##
## Ends in an error in state: 1080.
##
## prim_expr -> prim_expr MINUS_GT . UNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr MINUS_GT . LNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr MINUS_GT . UNAME TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr MINUS_GT . LNAME TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## prim_expr MINUS_GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT MINUS_GT UNAME WHILE
##
## Ends in an error in state: 1081.
##
## prim_expr -> prim_expr MINUS_GT UNAME . VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr MINUS_GT UNAME . TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## prim_expr MINUS_GT UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT MINUS_GT LNAME WHILE
##
## Ends in an error in state: 1084.
##
## prim_expr -> prim_expr MINUS_GT LNAME . VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr MINUS_GT LNAME . TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## prim_expr MINUS_GT LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT LBRACK WHILE
##
## Ends in an error in state: 1087.
##
## prim_expr -> prim_expr LBRACK . expr RBRACK [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr LBRACK . separated_nonempty_list(COMMA,index_update) RBRACK [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## prim_expr LBRACK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT LBRACK CN_CONSTANT SEMICOLON
##
## Ends in an error in state: 1090.
##
## index_update -> prim_expr . COLON expr [ RBRACK COMMA ]
## prim_expr -> prim_expr . DOT UNAME VARIABLE [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . DOT LNAME VARIABLE [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . DOT UNAME TYPE [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . DOT LNAME TYPE [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . MINUS_GT UNAME VARIABLE [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . MINUS_GT LNAME VARIABLE [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . MINUS_GT UNAME TYPE [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . MINUS_GT LNAME TYPE [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . LBRACK expr RBRACK [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr . LBRACK separated_nonempty_list(COMMA,index_update) RBRACK [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> prim_expr . [ STAR SLASH RBRACK QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## prim_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT DOT WHILE
##
## Ends in an error in state: 1091.
##
## prim_expr -> prim_expr DOT . UNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr DOT . LNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr DOT . UNAME TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr DOT . LNAME TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## prim_expr DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT DOT UNAME WHILE
##
## Ends in an error in state: 1092.
##
## prim_expr -> prim_expr DOT UNAME . VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr DOT UNAME . TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## prim_expr DOT UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT DOT LNAME WHILE
##
## Ends in an error in state: 1095.
##
## prim_expr -> prim_expr DOT LNAME . VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> prim_expr DOT LNAME . TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## prim_expr DOT LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT AMPERSAND LNAME TYPE WHILE
##
## Ends in an error in state: 1099.
##
## add_expr -> mul_expr . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
## mul_expr -> mul_expr . AMPERSAND unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . CARET unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . STAR unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . SLASH unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . PERCENT unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## mul_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT COLON
##
## Ends in an error in state: 1104.
##
## expr_without_let -> list_expr . [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr_without_let -> list_expr . QUESTION list_expr COLON list_expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## list_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT QUESTION CN_CONSTANT RPAREN
##
## Ends in an error in state: 1106.
##
## expr_without_let -> list_expr QUESTION list_expr . COLON list_expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## list_expr QUESTION list_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT PLUS AMPERSAND LNAME TYPE WHILE
##
## Ends in an error in state: 1117.
##
## add_expr -> add_expr PLUS mul_expr . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
## mul_expr -> mul_expr . AMPERSAND unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . CARET unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . STAR unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . SLASH unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . PERCENT unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## add_expr PLUS mul_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT PIPE AMPERSAND LNAME TYPE WHILE
##
## Ends in an error in state: 1127.
##
## add_expr -> add_expr PIPE mul_expr . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
## mul_expr -> mul_expr . AMPERSAND unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . CARET unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . STAR unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . SLASH unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . PERCENT unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## add_expr PIPE mul_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT MINUS AMPERSAND LNAME TYPE WHILE
##
## Ends in an error in state: 1129.
##
## add_expr -> add_expr MINUS mul_expr . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES BANG_EQ AMPERSAND_AMPERSAND ]
## mul_expr -> mul_expr . AMPERSAND unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . CARET unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . STAR unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . SLASH unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## mul_expr -> mul_expr . PERCENT unary_expr [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## add_expr MINUS mul_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_GOOD LT BOOL GT LPAREN CN_CONSTANT COMMA
##
## Ends in an error in state: 1144.
##
## prim_expr -> cn_good LPAREN expr . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## cn_good LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT LBRACK CN_CONSTANT COLON CN_CONSTANT RPAREN
##
## Ends in an error in state: 1147.
##
## separated_nonempty_list(COMMA,index_update) -> index_update . [ RBRACK ]
## separated_nonempty_list(COMMA,index_update) -> index_update . COMMA separated_nonempty_list(COMMA,index_update) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## index_update
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
## In state 1146, spurious reduction of production index_update -> prim_expr COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT AMPERSAND LPAREN LBRACE WHILE
##
## Ends in an error in state: 1149.
##
## prim_expr -> LBRACE . expr RBRACE PERCENT UNAME VARIABLE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> LBRACE . expr RBRACE PERCENT LNAME VARIABLE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> LBRACE . record_def RBRACE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> LBRACE . nonempty_member_updates RBRACE [ MINUS_GT LBRACK DOT COLON ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE LNAME WHILE
##
## Ends in an error in state: 1150.
##
## member_def -> LNAME . VARIABLE COLON expr [ RBRACE COMMA ]
## member_def -> LNAME . TYPE COLON expr [ RBRACE COMMA ]
## prim_expr -> LNAME . VARIABLE [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . TYPE [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . VARIABLE cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . TYPE cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1151.
##
## member_def -> LNAME VARIABLE . COLON expr [ RBRACE COMMA ]
## prim_expr -> LNAME VARIABLE . [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME VARIABLE . cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 1153.
##
## member_def -> LNAME TYPE . COLON expr [ RBRACE COMMA ]
## prim_expr -> LNAME TYPE . [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME TYPE . cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_FROM_BYTES CN_BLOCK LPAREN CN_CONSTANT RBRACE
##
## Ends in an error in state: 1158.
##
## separated_nonempty_list(COMMA,expr) -> expr . [ RPAREN ]
## separated_nonempty_list(COMMA,expr) -> expr . COMMA separated_nonempty_list(COMMA,expr) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE UNAME VARIABLE COLON CN_CONSTANT COMMA DOT DOT CN_CONSTANT RPAREN
##
## Ends in an error in state: 1167.
##
## prim_expr -> LBRACE nonempty_member_updates . RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACE nonempty_member_updates
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
## In state 1173, spurious reduction of production member_updates -> DOT DOT expr
## In state 1174, spurious reduction of production nonempty_member_updates -> member_def COMMA member_updates
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE UNAME VARIABLE COLON CN_CONSTANT RPAREN
##
## Ends in an error in state: 1169.
##
## nonempty_member_updates -> member_def . COMMA member_updates [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def . [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def . COMMA separated_nonempty_list(COMMA,member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## member_def
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
## In state 1427, spurious reduction of production member_def -> UNAME VARIABLE COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE UNAME VARIABLE COLON CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 1170.
##
## nonempty_member_updates -> member_def COMMA . member_updates [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def COMMA . separated_nonempty_list(COMMA,member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## member_def COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE UNAME VARIABLE COLON CN_CONSTANT COMMA UNAME VARIABLE COLON CN_CONSTANT RPAREN
##
## Ends in an error in state: 1175.
##
## member_updates -> member_def . COMMA member_updates [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def . [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def . COMMA separated_nonempty_list(COMMA,member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## member_def
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
## In state 1427, spurious reduction of production member_def -> UNAME VARIABLE COLON expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE UNAME VARIABLE COLON CN_CONSTANT COMMA UNAME VARIABLE COLON CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 1176.
##
## member_updates -> member_def COMMA . member_updates [ RBRACE ]
## separated_nonempty_list(COMMA,member_def) -> member_def COMMA . separated_nonempty_list(COMMA,member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## member_def COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT AMPERSAND LPAREN LBRACE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1178.
##
## prim_expr -> LBRACE expr . RBRACE PERCENT UNAME VARIABLE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> LBRACE expr . RBRACE PERCENT LNAME VARIABLE [ MINUS_GT LBRACK DOT COLON ]
##
## The known suffix of the stack is as follows:
## LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT AMPERSAND LPAREN LBRACE CN_CONSTANT RBRACE WHILE
##
## Ends in an error in state: 1179.
##
## prim_expr -> LBRACE expr RBRACE . PERCENT UNAME VARIABLE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> LBRACE expr RBRACE . PERCENT LNAME VARIABLE [ MINUS_GT LBRACK DOT COLON ]
##
## The known suffix of the stack is as follows:
## LBRACE expr RBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE CN_CONSTANT RBRACE PERCENT WHILE
##
## Ends in an error in state: 1180.
##
## prim_expr -> LBRACE expr RBRACE PERCENT . UNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LBRACE expr RBRACE PERCENT . LNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACE expr RBRACE PERCENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT LBRACK CN_CONSTANT COLON CN_CONSTANT COMMA CN_CONSTANT STAR
##
## Ends in an error in state: 1186.
##
## index_update -> prim_expr . COLON expr [ RBRACK COMMA ]
## prim_expr -> prim_expr . DOT UNAME VARIABLE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> prim_expr . DOT LNAME VARIABLE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> prim_expr . DOT UNAME TYPE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> prim_expr . DOT LNAME TYPE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> prim_expr . MINUS_GT UNAME VARIABLE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> prim_expr . MINUS_GT LNAME VARIABLE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> prim_expr . MINUS_GT UNAME TYPE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> prim_expr . MINUS_GT LNAME TYPE [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> prim_expr . LBRACK expr RBRACK [ MINUS_GT LBRACK DOT COLON ]
## prim_expr -> prim_expr . LBRACK separated_nonempty_list(COMMA,index_update) RBRACK [ MINUS_GT LBRACK DOT COLON ]
##
## The known suffix of the stack is as follows:
## prim_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT LBRACK TILDE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1187.
##
## prim_expr -> prim_expr LBRACK expr . RBRACK [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## prim_expr LBRACK expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1435, spurious reduction of production unary_expr -> TILDE unary_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN CN_CONSTANT COMMA
##
## Ends in an error in state: 1190.
##
## prim_expr -> LPAREN expr . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT AMPERSAND LPAREN CN_CONSTANT STAR
##
## Ends in an error in state: 1192.
##
## prim_expr -> prim_expr . DOT UNAME VARIABLE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . DOT LNAME VARIABLE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . DOT UNAME TYPE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . DOT LNAME TYPE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . MINUS_GT UNAME VARIABLE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . MINUS_GT LNAME VARIABLE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . MINUS_GT UNAME TYPE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . MINUS_GT LNAME TYPE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . LBRACK expr RBRACK [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr . LBRACK separated_nonempty_list(COMMA,index_update) RBRACK [ MINUS_GT LBRACK DOT ]
## unary_expr -> AMPERSAND LPAREN prim_expr . MINUS_GT UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND LPAREN prim_expr . MINUS_GT LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND LPAREN prim_expr . MINUS_GT UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND LPAREN prim_expr . MINUS_GT LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT AMPERSAND LPAREN CN_CONSTANT MINUS_GT WHILE
##
## Ends in an error in state: 1193.
##
## prim_expr -> prim_expr MINUS_GT . UNAME VARIABLE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr MINUS_GT . LNAME VARIABLE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr MINUS_GT . UNAME TYPE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr MINUS_GT . LNAME TYPE [ MINUS_GT LBRACK DOT ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT . UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT . LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT . UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT . LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT AMPERSAND LPAREN CN_CONSTANT MINUS_GT UNAME WHILE
##
## Ends in an error in state: 1194.
##
## prim_expr -> prim_expr MINUS_GT UNAME . VARIABLE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr MINUS_GT UNAME . TYPE [ MINUS_GT LBRACK DOT ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT UNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT UNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT AMPERSAND LPAREN CN_CONSTANT MINUS_GT LNAME WHILE
##
## Ends in an error in state: 1199.
##
## prim_expr -> prim_expr MINUS_GT LNAME . VARIABLE [ MINUS_GT LBRACK DOT ]
## prim_expr -> prim_expr MINUS_GT LNAME . TYPE [ MINUS_GT LBRACK DOT ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT LNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND LPAREN prim_expr MINUS_GT LNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LPAREN prim_expr MINUS_GT LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT AMPERSAND LNAME WHILE
##
## Ends in an error in state: 1204.
##
## unary_expr -> AMPERSAND LNAME . VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> AMPERSAND LNAME . TYPE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## AMPERSAND LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_ARRAY_SHIFT LT BOOL GT LPAREN CN_CONSTANT RPAREN
##
## Ends in an error in state: 1208.
##
## prim_expr -> CN_ARRAY_SHIFT LT ctype GT LPAREN expr . COMMA expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_ARRAY_SHIFT LT ctype GT LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_ARRAY_SHIFT LT BOOL GT LPAREN CN_CONSTANT COMMA CN_CONSTANT COMMA
##
## Ends in an error in state: 1210.
##
## prim_expr -> CN_ARRAY_SHIFT LT ctype GT LPAREN expr COMMA expr . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_ARRAY_SHIFT LT ctype GT LPAREN expr COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_ARRAY_SHIFT LPAREN CN_CONSTANT RPAREN
##
## Ends in an error in state: 1213.
##
## prim_expr -> CN_ARRAY_SHIFT LPAREN expr . COMMA expr RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_ARRAY_SHIFT LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_ARRAY_SHIFT LPAREN CN_CONSTANT COMMA CN_CONSTANT COMMA
##
## Ends in an error in state: 1215.
##
## prim_expr -> CN_ARRAY_SHIFT LPAREN expr COMMA expr . RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_ARRAY_SHIFT LPAREN expr COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE COLON CONSTANT COMMA CONSTANT SEMICOLON CN_CONSTANT COMMA
##
## Ends in an error in state: 1217.
##
## expr_without_let -> CN_EACH LPAREN base_type UNAME VARIABLE COLON int_range SEMICOLON expr . RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE COLON int_range SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE COLON CONSTANT COMMA CONSTANT SEMICOLON CN_CONSTANT COMMA
##
## Ends in an error in state: 1223.
##
## expr_without_let -> CN_EACH LPAREN base_type UNAME TYPE COLON int_range SEMICOLON expr . RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE COLON int_range SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME WHILE
##
## Ends in an error in state: 1225.
##
## expr_without_let -> CN_EACH LPAREN base_type LNAME . VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr_without_let -> CN_EACH LPAREN base_type LNAME . TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE COLON CONSTANT COMMA CONSTANT SEMICOLON CN_CONSTANT COMMA
##
## Ends in an error in state: 1230.
##
## expr_without_let -> CN_EACH LPAREN base_type LNAME VARIABLE COLON int_range SEMICOLON expr . RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE COLON int_range SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE COLON CONSTANT COMMA CONSTANT SEMICOLON CN_CONSTANT COMMA
##
## Ends in an error in state: 1236.
##
## expr_without_let -> CN_EACH LPAREN base_type LNAME TYPE COLON int_range SEMICOLON expr . RPAREN [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE COLON int_range SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_LET UNAME VARIABLE EQ CN_CONSTANT RPAREN
##
## Ends in an error in state: 1238.
##
## expr -> CN_LET UNAME VARIABLE EQ expr . SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_LET UNAME TYPE EQ CN_CONSTANT RPAREN
##
## Ends in an error in state: 1243.
##
## expr -> CN_LET UNAME TYPE EQ expr . SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_LET LNAME WHILE
##
## Ends in an error in state: 1246.
##
## expr -> CN_LET LNAME . VARIABLE EQ expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## expr -> CN_LET LNAME . TYPE EQ expr SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_LET LNAME VARIABLE EQ CN_CONSTANT RPAREN
##
## Ends in an error in state: 1249.
##
## expr -> CN_LET LNAME VARIABLE EQ expr . SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_LET LNAME TYPE EQ CN_CONSTANT RPAREN
##
## Ends in an error in state: 1254.
##
## expr -> CN_LET LNAME TYPE EQ expr . SEMICOLON expr [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LPAREN CN_CONSTANT COMMA
##
## Ends in an error in state: 1257.
##
## match_target -> LPAREN expr . RPAREN [ LBRACE ]
##
## The known suffix of the stack is as follows:
## LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LNAME WHILE
##
## Ends in an error in state: 1259.
##
## match_target -> LNAME . VARIABLE [ LBRACE ]
## match_target -> LNAME . TYPE [ LBRACE ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE UNAME WHILE
##
## Ends in an error in state: 1264.
##
## pattern -> UNAME . VARIABLE [ RBRACE EQ COMMA ]
## pattern -> UNAME . TYPE [ RBRACE EQ COMMA ]
## pattern -> UNAME . VARIABLE pattern_cons_args [ RBRACE EQ COMMA ]
## pattern -> UNAME . TYPE pattern_cons_args [ RBRACE EQ COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1265.
##
## pattern -> UNAME VARIABLE . [ RBRACE EQ COMMA ]
## pattern -> UNAME VARIABLE . pattern_cons_args [ RBRACE EQ COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE UNAME WHILE
##
## Ends in an error in state: 1267.
##
## pattern_member_def -> UNAME . VARIABLE COLON pattern [ RBRACE COMMA ]
## pattern_member_def -> UNAME . TYPE COLON pattern [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME WHILE
##
## Ends in an error in state: 1270.
##
## pattern -> LNAME . VARIABLE [ RBRACE EQ COMMA ]
## pattern -> LNAME . TYPE [ RBRACE EQ COMMA ]
## pattern -> LNAME . VARIABLE pattern_cons_args [ RBRACE EQ COMMA ]
## pattern -> LNAME . TYPE pattern_cons_args [ RBRACE EQ COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1271.
##
## pattern -> LNAME VARIABLE . [ RBRACE EQ COMMA ]
## pattern -> LNAME VARIABLE . pattern_cons_args [ RBRACE EQ COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 1273.
##
## pattern -> LNAME TYPE . [ RBRACE EQ COMMA ]
## pattern -> LNAME TYPE . pattern_cons_args [ RBRACE EQ COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE LNAME WHILE
##
## Ends in an error in state: 1280.
##
## pattern_member_def -> LNAME . VARIABLE COLON pattern [ RBRACE COMMA ]
## pattern_member_def -> LNAME . TYPE COLON pattern [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE LNAME TYPE LBRACE LNAME TYPE COLON CN_WILD WHILE
##
## Ends in an error in state: 1288.
##
## separated_nonempty_list(COMMA,pattern_member_def) -> pattern_member_def . [ RBRACE ]
## separated_nonempty_list(COMMA,pattern_member_def) -> pattern_member_def . COMMA separated_nonempty_list(COMMA,pattern_member_def) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## pattern_member_def
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE UNAME TYPE WHILE
##
## Ends in an error in state: 1294.
##
## pattern -> UNAME TYPE . [ RBRACE EQ COMMA ]
## pattern -> UNAME TYPE . pattern_cons_args [ RBRACE EQ COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE CN_WILD EQ GT LBRACE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1300.
##
## match_case -> pattern EQ GT LBRACE expr . RBRACE [ UNAME RBRACE LNAME CN_WILD ]
##
## The known suffix of the stack is as follows:
## pattern EQ GT LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MATCH LNAME TYPE LBRACE CN_WILD EQ GT LBRACE CN_CONSTANT RBRACE WHILE
##
## Ends in an error in state: 1302.
##
## expr_without_let -> CN_MATCH match_target LBRACE match_cases . RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
## match_cases -> match_cases . match_case [ UNAME RBRACE LNAME CN_WILD ]
##
## The known suffix of the stack is as follows:
## CN_MATCH match_target LBRACE match_cases
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN CN_CONSTANT RPAREN
##
## Ends in an error in state: 1306.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr . COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr . COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr . COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr . COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 1307.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA . UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA . LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA . UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA . LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN CN_CONSTANT COMMA UNAME WHILE
##
## Ends in an error in state: 1308.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA UNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA UNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN CN_CONSTANT COMMA LNAME WHILE
##
## Ends in an error in state: 1313.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA LNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA LNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME VARIABLE GT LPAREN expr COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME TYPE WHILE
##
## Ends in an error in state: 1318.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE . GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE . GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE . GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE . GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME TYPE GT WHILE
##
## Ends in an error in state: 1319.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT . LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT . LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT . LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT . LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME TYPE GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN WHILE
##
## Ends in an error in state: 1320.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN . expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN . expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN . expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN . expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN CN_CONSTANT RPAREN
##
## Ends in an error in state: 1321.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr . COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr . COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr . COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr . COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 1322.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA . UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA . LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA . UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA . LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN CN_CONSTANT COMMA UNAME WHILE
##
## Ends in an error in state: 1323.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA UNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA UNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN CN_CONSTANT COMMA LNAME WHILE
##
## Ends in an error in state: 1328.
##
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA LNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA LNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT UNAME TYPE GT LPAREN expr COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME WHILE
##
## Ends in an error in state: 1333.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME . VARIABLE GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME . VARIABLE GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME . VARIABLE GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME . VARIABLE GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME . TYPE GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME . TYPE GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME . TYPE GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME . TYPE GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME VARIABLE WHILE
##
## Ends in an error in state: 1334.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE . GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE . GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE . GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE . GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME VARIABLE GT WHILE
##
## Ends in an error in state: 1335.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT . LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT . LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT . LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT . LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME VARIABLE GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN WHILE
##
## Ends in an error in state: 1336.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN . expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN . expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN . expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN . expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN CN_CONSTANT RPAREN
##
## Ends in an error in state: 1337.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr . COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr . COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr . COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr . COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 1338.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA . UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA . LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA . UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA . LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN CN_CONSTANT COMMA UNAME WHILE
##
## Ends in an error in state: 1339.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA UNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA UNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN CN_CONSTANT COMMA LNAME WHILE
##
## Ends in an error in state: 1344.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA LNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA LNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME VARIABLE GT LPAREN expr COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME TYPE WHILE
##
## Ends in an error in state: 1349.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE . GT LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE . GT LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE . GT LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE . GT LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME TYPE GT WHILE
##
## Ends in an error in state: 1350.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT . LPAREN expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT . LPAREN expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT . LPAREN expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT . LPAREN expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME TYPE GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN WHILE
##
## Ends in an error in state: 1351.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN . expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN . expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN . expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN . expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN CN_CONSTANT RPAREN
##
## Ends in an error in state: 1352.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr . COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr . COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr . COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr . COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 1353.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA . UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA . LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA . UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA . LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN CN_CONSTANT COMMA UNAME WHILE
##
## Ends in an error in state: 1354.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA UNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA UNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN CN_CONSTANT COMMA LNAME WHILE
##
## Ends in an error in state: 1359.
##
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA LNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA LNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LT LNAME TYPE GT LPAREN expr COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LPAREN WHILE
##
## Ends in an error in state: 1364.
##
## prim_expr -> CN_MEMBER_SHIFT LPAREN . expr COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LPAREN . expr COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LPAREN . expr COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LPAREN . expr COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LPAREN CN_CONSTANT RPAREN
##
## Ends in an error in state: 1365.
##
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr . COMMA UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr . COMMA LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr . COMMA UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr . COMMA LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LPAREN CN_CONSTANT COMMA WHILE
##
## Ends in an error in state: 1366.
##
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr COMMA . UNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr COMMA . LNAME VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr COMMA . UNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr COMMA . LNAME TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LPAREN expr COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LPAREN CN_CONSTANT COMMA UNAME WHILE
##
## Ends in an error in state: 1367.
##
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr COMMA UNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr COMMA UNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LPAREN expr COMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_MEMBER_SHIFT LPAREN CN_CONSTANT COMMA LNAME WHILE
##
## Ends in an error in state: 1372.
##
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr COMMA LNAME . VARIABLE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> CN_MEMBER_SHIFT LPAREN expr COMMA LNAME . TYPE RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_MEMBER_SHIFT LPAREN expr COMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT IF LPAREN CN_CONSTANT COMMA
##
## Ends in an error in state: 1377.
##
## expr_without_let -> IF LPAREN expr . RPAREN LBRACE expr RBRACE ELSE LBRACE expr RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT IF LPAREN CN_CONSTANT RPAREN LBRACE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1380.
##
## expr_without_let -> IF LPAREN expr RPAREN LBRACE expr . RBRACE ELSE LBRACE expr RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT IF LPAREN CN_CONSTANT RPAREN LBRACE CN_CONSTANT RBRACE ELSE LBRACE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1384.
##
## expr_without_let -> IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE expr . RBRACE [ SEMICOLON RPAREN RBRACK RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE expr RBRACE ELSE LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1391.
##
## prim_expr -> LBRACE expr . RBRACE PERCENT UNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LBRACE expr . RBRACE PERCENT LNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> LBRACE expr . RBRACE CN_UNCHANGED [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACE CN_CONSTANT RBRACE WHILE
##
## Ends in an error in state: 1392.
##
## prim_expr -> LBRACE expr RBRACE . PERCENT UNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LBRACE expr RBRACE . PERCENT LNAME VARIABLE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> LBRACE expr RBRACE . CN_UNCHANGED [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACE expr RBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LBRACK CN_CONSTANT QUESTION
##
## Ends in an error in state: 1396.
##
## rel_expr -> rel_expr . EQ_EQ add_expr [ RBRACK LT_EQ LT GT_EQ GT EQ_EQ COMMA BANG_EQ ]
## rel_expr -> rel_expr . BANG_EQ add_expr [ RBRACK LT_EQ LT GT_EQ GT EQ_EQ COMMA BANG_EQ ]
## rel_expr -> rel_expr . LT add_expr [ RBRACK LT_EQ LT GT_EQ GT EQ_EQ COMMA BANG_EQ ]
## rel_expr -> rel_expr . GT add_expr [ RBRACK LT_EQ LT GT_EQ GT EQ_EQ COMMA BANG_EQ ]
## rel_expr -> rel_expr . LT_EQ add_expr [ RBRACK LT_EQ LT GT_EQ GT EQ_EQ COMMA BANG_EQ ]
## rel_expr -> rel_expr . GT_EQ add_expr [ RBRACK LT_EQ LT GT_EQ GT EQ_EQ COMMA BANG_EQ ]
## separated_nonempty_list(COMMA,rel_expr) -> rel_expr . [ RBRACK ]
## separated_nonempty_list(COMMA,rel_expr) -> rel_expr . COMMA separated_nonempty_list(COMMA,rel_expr) [ RBRACK ]
##
## The known suffix of the stack is as follows:
## rel_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LNAME TYPE WHILE
##
## Ends in an error in state: 1401.
##
## prim_expr -> LNAME TYPE . [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME TYPE . cons_args [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN STRUCT LNAME WHILE
##
## Ends in an error in state: 1406.
##
## base_type_explicit -> STRUCT LNAME . VARIABLE [ UNAME RPAREN LNAME ]
## base_type_explicit -> STRUCT LNAME . TYPE [ UNAME RPAREN LNAME ]
## prim_expr -> STRUCT LNAME . VARIABLE LBRACE record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> STRUCT LNAME . TYPE LBRACE record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN STRUCT LNAME VARIABLE WHILE
##
## Ends in an error in state: 1407.
##
## base_type_explicit -> STRUCT LNAME VARIABLE . [ UNAME RPAREN LNAME ]
## prim_expr -> STRUCT LNAME VARIABLE . LBRACE record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN STRUCT LNAME TYPE WHILE
##
## Ends in an error in state: 1411.
##
## base_type_explicit -> STRUCT LNAME TYPE . [ UNAME RPAREN LNAME ]
## prim_expr -> STRUCT LNAME TYPE . LBRACE record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN LBRACE WHILE
##
## Ends in an error in state: 1415.
##
## base_type_explicit -> LBRACE . nonempty_cn_params RBRACE [ UNAME RPAREN LNAME ]
## prim_expr -> LBRACE . expr RBRACE PERCENT UNAME VARIABLE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LBRACE . expr RBRACE PERCENT LNAME VARIABLE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LBRACE . record_def RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LBRACE . nonempty_member_updates RBRACE [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## unary_expr -> LBRACE . expr RBRACE CN_UNCHANGED [ STAR SLASH RPAREN RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS LT_EQ LT GT_EQ GT EQ_EQ CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN LBRACE UNAME WHILE
##
## Ends in an error in state: 1416.
##
## base_type -> UNAME . VARIABLE [ UNAME LNAME ]
## base_type -> UNAME . TYPE [ UNAME LNAME ]
## member_def -> UNAME . VARIABLE COLON expr [ RBRACE COMMA ]
## member_def -> UNAME . TYPE COLON expr [ RBRACE COMMA ]
## prim_expr -> UNAME . VARIABLE [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . VARIABLE cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN LBRACE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1417.
##
## base_type -> UNAME VARIABLE . [ UNAME LNAME ]
## member_def -> UNAME VARIABLE . COLON expr [ RBRACE COMMA ]
## prim_expr -> UNAME VARIABLE . [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME VARIABLE . cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN LBRACE UNAME TYPE WHILE
##
## Ends in an error in state: 1418.
##
## base_type -> UNAME TYPE . [ UNAME LNAME ]
## member_def -> UNAME TYPE . COLON expr [ RBRACE COMMA ]
## prim_expr -> UNAME TYPE . [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME TYPE . cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN LBRACE LNAME WHILE
##
## Ends in an error in state: 1419.
##
## base_type -> LNAME . VARIABLE [ UNAME LNAME ]
## base_type -> LNAME . TYPE [ UNAME LNAME ]
## member_def -> LNAME . VARIABLE COLON expr [ RBRACE COMMA ]
## member_def -> LNAME . TYPE COLON expr [ RBRACE COMMA ]
## prim_expr -> LNAME . VARIABLE [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . TYPE [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . VARIABLE cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . TYPE cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN LBRACE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1420.
##
## base_type -> LNAME VARIABLE . [ UNAME LNAME ]
## member_def -> LNAME VARIABLE . COLON expr [ RBRACE COMMA ]
## prim_expr -> LNAME VARIABLE . [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME VARIABLE . cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT LPAREN LBRACE LNAME TYPE WHILE
##
## Ends in an error in state: 1421.
##
## base_type -> LNAME TYPE . [ UNAME LNAME ]
## member_def -> LNAME TYPE . COLON expr [ RBRACE COMMA ]
## prim_expr -> LNAME TYPE . [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME TYPE . cons_args [ STAR SLASH RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT STRUCT LNAME WHILE
##
## Ends in an error in state: 1432.
##
## prim_expr -> STRUCT LNAME . VARIABLE LBRACE record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> STRUCT LNAME . TYPE LBRACE record_def RBRACE [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## STRUCT LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT UNAME TYPE WHILE
##
## Ends in an error in state: 1438.
##
## prim_expr -> UNAME TYPE . [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME TYPE . cons_args [ STAR SLASH SEMICOLON RPAREN RBRACK RBRACE QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT COMMA COLON CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_UNFOLD WHILE
##
## Ends in an error in state: 1442.
##
## cn_statement -> CN_UNFOLD . UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_UNFOLD . LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_UNFOLD . UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_UNFOLD . LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_UNFOLD UNAME WHILE
##
## Ends in an error in state: 1443.
##
## cn_statement -> CN_UNFOLD UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_UNFOLD UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_UNFOLD LNAME WHILE
##
## Ends in an error in state: 1454.
##
## cn_statement -> CN_UNFOLD LNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_UNFOLD LNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_UNFOLD LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_TO_BYTES CN_BLOCK COMMA
##
## Ends in an error in state: 1466.
##
## cn_statement -> CN_TO_BYTES pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_TO_BYTES pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 852, spurious reduction of production pred -> CN_BLOCK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH WHILE
##
## Ends in an error in state: 1472.
##
## assert_expr -> CN_EACH . LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## assert_expr -> CN_EACH . LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## assert_expr -> CN_EACH . LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## assert_expr -> CN_EACH . LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH . LPAREN base_type UNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH . LPAREN base_type LNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH . LPAREN base_type UNAME TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH . LPAREN base_type LNAME TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN WHILE
##
## Ends in an error in state: 1473.
##
## assert_expr -> CN_EACH LPAREN . base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## assert_expr -> CN_EACH LPAREN . base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## assert_expr -> CN_EACH LPAREN . base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## assert_expr -> CN_EACH LPAREN . base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN . base_type UNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN . base_type LNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN . base_type UNAME TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN . base_type LNAME TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID WHILE
##
## Ends in an error in state: 1474.
##
## assert_expr -> CN_EACH LPAREN base_type . UNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## assert_expr -> CN_EACH LPAREN base_type . LNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## assert_expr -> CN_EACH LPAREN base_type . UNAME TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## assert_expr -> CN_EACH LPAREN base_type . LNAME TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN base_type . UNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN base_type . LNAME VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN base_type . UNAME TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN base_type . LNAME TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME WHILE
##
## Ends in an error in state: 1475.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME . VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## assert_expr -> CN_EACH LPAREN base_type UNAME . TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN base_type UNAME . VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN base_type UNAME . TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE WHILE
##
## Ends in an error in state: 1476.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME VARIABLE . SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN base_type UNAME VARIABLE . COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE SEMICOLON CN_CONSTANT COMMA
##
## Ends in an error in state: 1478.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr . RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1481.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr . RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE WHILE
##
## Ends in an error in state: 1483.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME TYPE . SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN base_type UNAME TYPE . COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE SEMICOLON CN_CONSTANT COMMA
##
## Ends in an error in state: 1485.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr . RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1488.
##
## assert_expr -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE expr . RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME WHILE
##
## Ends in an error in state: 1490.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME . VARIABLE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## assert_expr -> CN_EACH LPAREN base_type LNAME . TYPE SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN base_type LNAME . VARIABLE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN base_type LNAME . TYPE COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE WHILE
##
## Ends in an error in state: 1491.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME VARIABLE . SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN base_type LNAME VARIABLE . COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE SEMICOLON CN_CONSTANT COMMA
##
## Ends in an error in state: 1493.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr . RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1496.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr . RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE WHILE
##
## Ends in an error in state: 1498.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME TYPE . SEMICOLON expr RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
## expr_without_let -> CN_EACH LPAREN base_type LNAME TYPE . COLON int_range SEMICOLON expr RPAREN [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE SEMICOLON CN_CONSTANT COMMA
##
## Ends in an error in state: 1500.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr . RPAREN LBRACE expr RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1503.
##
## assert_expr -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE expr . RBRACE [ SEMICOLON RPAREN ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_SPLIT_CASE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1506.
##
## cn_statement -> CN_SPLIT_CASE assert_expr . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_SPLIT_CASE assert_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1505, spurious reduction of production assert_expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_PRINT LPAREN CN_CONSTANT COMMA
##
## Ends in an error in state: 1510.
##
## cn_statement -> CN_PRINT LPAREN expr . RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_PRINT LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_PACK CN_BLOCK COMMA
##
## Ends in an error in state: 1514.
##
## cn_statement -> CN_PACK pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_PACK pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 852, spurious reduction of production pred -> CN_BLOCK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE WHILE
##
## Ends in an error in state: 1519.
##
## cn_statement -> CN_INSTANTIATE . expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_INSTANTIATE . UNAME VARIABLE COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_INSTANTIATE . LNAME VARIABLE COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_INSTANTIATE . UNAME TYPE COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_INSTANTIATE . LNAME TYPE COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_INSTANTIATE . cn_good COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE UNAME WHILE
##
## Ends in an error in state: 1520.
##
## cn_statement -> CN_INSTANTIATE UNAME . VARIABLE COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_INSTANTIATE UNAME . TYPE COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## prim_expr -> UNAME . VARIABLE [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . VARIABLE cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE UNAME VARIABLE WHILE
##
## Ends in an error in state: 1521.
##
## cn_statement -> CN_INSTANTIATE UNAME VARIABLE . COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## prim_expr -> UNAME VARIABLE . [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME VARIABLE . cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE UNAME VARIABLE COMMA CN_CONSTANT RPAREN
##
## Ends in an error in state: 1523.
##
## cn_statement -> CN_INSTANTIATE UNAME VARIABLE COMMA expr . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME VARIABLE COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE UNAME TYPE WHILE
##
## Ends in an error in state: 1525.
##
## cn_statement -> CN_INSTANTIATE UNAME TYPE . COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## prim_expr -> UNAME TYPE . [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME TYPE . cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE UNAME TYPE COMMA CN_CONSTANT RPAREN
##
## Ends in an error in state: 1527.
##
## cn_statement -> CN_INSTANTIATE UNAME TYPE COMMA expr . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE UNAME TYPE COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE LNAME WHILE
##
## Ends in an error in state: 1529.
##
## cn_statement -> CN_INSTANTIATE LNAME . VARIABLE COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_INSTANTIATE LNAME . TYPE COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## prim_expr -> LNAME . VARIABLE [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . TYPE [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . VARIABLE cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME . TYPE cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE LNAME VARIABLE WHILE
##
## Ends in an error in state: 1530.
##
## cn_statement -> CN_INSTANTIATE LNAME VARIABLE . COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## prim_expr -> LNAME VARIABLE . [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME VARIABLE . cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE LNAME VARIABLE COMMA CN_CONSTANT RPAREN
##
## Ends in an error in state: 1532.
##
## cn_statement -> CN_INSTANTIATE LNAME VARIABLE COMMA expr . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME VARIABLE COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE LNAME TYPE WHILE
##
## Ends in an error in state: 1534.
##
## cn_statement -> CN_INSTANTIATE LNAME TYPE . COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## prim_expr -> LNAME TYPE . [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME TYPE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> LNAME TYPE . cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE LNAME TYPE COMMA CN_CONSTANT RPAREN
##
## Ends in an error in state: 1536.
##
## cn_statement -> CN_INSTANTIATE LNAME TYPE COMMA expr . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE LNAME TYPE COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1538.
##
## cn_statement -> CN_INSTANTIATE expr . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE CN_GOOD LT BOOL GT WHILE
##
## Ends in an error in state: 1540.
##
## cn_statement -> CN_INSTANTIATE cn_good . COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## prim_expr -> cn_good . LPAREN expr RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE cn_good
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_INSTANTIATE CN_GOOD LT BOOL GT COMMA CN_CONSTANT RPAREN
##
## Ends in an error in state: 1542.
##
## cn_statement -> CN_INSTANTIATE cn_good COMMA expr . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_INSTANTIATE cn_good COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_HAVE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1545.
##
## cn_statement -> CN_HAVE assert_expr . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_HAVE assert_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1505, spurious reduction of production assert_expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_FROM_BYTES CN_BLOCK COMMA
##
## Ends in an error in state: 1548.
##
## cn_statement -> CN_FROM_BYTES pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_FROM_BYTES pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 852, spurious reduction of production pred -> CN_BLOCK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT WHILE
##
## Ends in an error in state: 1553.
##
## cn_statement -> CN_EXTRACT . expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_EXTRACT . pred COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_EXTRACT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT UNAME WHILE
##
## Ends in an error in state: 1554.
##
## pred -> UNAME . VARIABLE [ COMMA ]
## prim_expr -> UNAME . VARIABLE [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . VARIABLE cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME . TYPE cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT UNAME VARIABLE WHILE
##
## Ends in an error in state: 1555.
##
## pred -> UNAME VARIABLE . [ COMMA ]
## prim_expr -> UNAME VARIABLE . [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME VARIABLE . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
## prim_expr -> UNAME VARIABLE . cons_args [ STAR SLASH SEMICOLON QUESTION PLUS PIPE_PIPE PIPE PERCENT MINUS_GT MINUS LT_EQ LT LBRACK GT_EQ GT EQ_EQ DOT CN_IMPLIES CARET BANG_EQ AMPERSAND_AMPERSAND AMPERSAND ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_BLOCK LPAREN
##
## Ends in an error in state: 1556.
##
## cn_statement -> CN_EXTRACT pred . COMMA expr SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_EXTRACT pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 852, spurious reduction of production pred -> CN_BLOCK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_BLOCK COMMA CN_CONSTANT RPAREN
##
## Ends in an error in state: 1558.
##
## cn_statement -> CN_EXTRACT pred COMMA expr . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_EXTRACT pred COMMA expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_EXTRACT CN_CONSTANT RPAREN
##
## Ends in an error in state: 1560.
##
## cn_statement -> CN_EXTRACT expr . SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_EXTRACT expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_APPLY WHILE
##
## Ends in an error in state: 1562.
##
## cn_statement -> CN_APPLY . UNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_APPLY . LNAME VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_APPLY . UNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_APPLY . LNAME TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_APPLY UNAME WHILE
##
## Ends in an error in state: 1563.
##
## cn_statement -> CN_APPLY UNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_APPLY UNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: CN_APPLY LNAME WHILE
##
## Ends in an error in state: 1574.
##
## cn_statement -> CN_APPLY LNAME . VARIABLE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
## cn_statement -> CN_APPLY LNAME . TYPE LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## CN_APPLY LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: ASSERT LPAREN CN_CONSTANT COMMA
##
## Ends in an error in state: 1587.
##
## cn_statement -> ASSERT LPAREN assert_expr . RPAREN SEMICOLON [ INLINE EOF CN_UNPACK CN_UNFOLD CN_TO_BYTES CN_SPLIT_CASE CN_PRINT CN_PACK CN_INSTANTIATE CN_HAVE CN_FROM_BYTES CN_EXTRACT CN_APPLY ASSERT ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN assert_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1505, spurious reduction of production assert_expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_statements: INLINE SEMICOLON WHILE
##
## Ends in an error in state: 1593.
##
## nonempty_list(cn_statement) -> cn_statement . [ EOF ]
## nonempty_list(cn_statement) -> cn_statement . nonempty_list(cn_statement) [ EOF ]
##
## The known suffix of the stack is as follows:
## cn_statement
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_TYPE_SYNONYM WHILE
##
## Ends in an error in state: 1596.
##
## cn_type_synonym -> CN_TYPE_SYNONYM . UNAME VARIABLE EQ opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_type_synonym -> CN_TYPE_SYNONYM . LNAME VARIABLE EQ opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_type_synonym -> CN_TYPE_SYNONYM . UNAME TYPE EQ opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_type_synonym -> CN_TYPE_SYNONYM . LNAME TYPE EQ opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TYPE_SYNONYM
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_TYPE_SYNONYM UNAME WHILE
##
## Ends in an error in state: 1597.
##
## cn_type_synonym -> CN_TYPE_SYNONYM UNAME . VARIABLE EQ opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_type_synonym -> CN_TYPE_SYNONYM UNAME . TYPE EQ opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TYPE_SYNONYM UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_TYPE_SYNONYM LNAME WHILE
##
## Ends in an error in state: 1608.
##
## cn_type_synonym -> CN_TYPE_SYNONYM LNAME . VARIABLE EQ opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_type_synonym -> CN_TYPE_SYNONYM LNAME . TYPE EQ opt_paren(base_type) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_TYPE_SYNONYM LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC WHILE
##
## Ends in an error in state: 1615.
##
## cn_fun_spec -> CN_SPEC . UNAME VARIABLE LPAREN cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_fun_spec -> CN_SPEC . LNAME VARIABLE LPAREN cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_fun_spec -> CN_SPEC . UNAME TYPE LPAREN cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_fun_spec -> CN_SPEC . LNAME TYPE LPAREN cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC UNAME WHILE
##
## Ends in an error in state: 1616.
##
## cn_fun_spec -> CN_SPEC UNAME . VARIABLE LPAREN cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_fun_spec -> CN_SPEC UNAME . TYPE LPAREN cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC UNAME VARIABLE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1621.
##
## cn_fun_spec -> CN_SPEC UNAME VARIABLE LPAREN cn_args . RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC UNAME VARIABLE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

fundef_spec: CN_LIFT_FUNCTION WHILE
##
## Ends in an error in state: 1627.
##
## accesses_or_function -> CN_LIFT_FUNCTION . UNAME VARIABLE SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
## accesses_or_function -> CN_LIFT_FUNCTION . LNAME VARIABLE SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
## accesses_or_function -> CN_LIFT_FUNCTION . UNAME TYPE SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
## accesses_or_function -> CN_LIFT_FUNCTION . LNAME TYPE SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LIFT_FUNCTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

fundef_spec: CN_LIFT_FUNCTION UNAME WHILE
##
## Ends in an error in state: 1628.
##
## accesses_or_function -> CN_LIFT_FUNCTION UNAME . VARIABLE SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
## accesses_or_function -> CN_LIFT_FUNCTION UNAME . TYPE SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LIFT_FUNCTION UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

fundef_spec: CN_LIFT_FUNCTION UNAME VARIABLE WHILE
##
## Ends in an error in state: 1629.
##
## accesses_or_function -> CN_LIFT_FUNCTION UNAME VARIABLE . SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LIFT_FUNCTION UNAME VARIABLE
##

parsing "accesses_or_function": seen "CN_LIFT_FUNCTION UNAME VARIABLE", expecting "SEMICOLON"

fundef_spec: CN_LIFT_FUNCTION UNAME TYPE WHILE
##
## Ends in an error in state: 1631.
##
## accesses_or_function -> CN_LIFT_FUNCTION UNAME TYPE . SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LIFT_FUNCTION UNAME TYPE
##

parsing "accesses_or_function": seen "CN_LIFT_FUNCTION UNAME TYPE", expecting "SEMICOLON"

fundef_spec: CN_LIFT_FUNCTION LNAME WHILE
##
## Ends in an error in state: 1633.
##
## accesses_or_function -> CN_LIFT_FUNCTION LNAME . VARIABLE SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
## accesses_or_function -> CN_LIFT_FUNCTION LNAME . TYPE SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LIFT_FUNCTION LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

fundef_spec: CN_LIFT_FUNCTION LNAME VARIABLE WHILE
##
## Ends in an error in state: 1634.
##
## accesses_or_function -> CN_LIFT_FUNCTION LNAME VARIABLE . SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LIFT_FUNCTION LNAME VARIABLE
##

parsing "accesses_or_function": seen "CN_LIFT_FUNCTION LNAME VARIABLE", expecting "SEMICOLON"

fundef_spec: CN_LIFT_FUNCTION LNAME TYPE WHILE
##
## Ends in an error in state: 1636.
##
## accesses_or_function -> CN_LIFT_FUNCTION LNAME TYPE . SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LIFT_FUNCTION LNAME TYPE
##

parsing "accesses_or_function": seen "CN_LIFT_FUNCTION LNAME TYPE", expecting "SEMICOLON"

fundef_spec: CN_ACCESSES UNAME TYPE RBRACK
##
## Ends in an error in state: 1639.
##
## accesses -> CN_ACCESSES separated_nonempty_list(COMMA,cn_variable) . SEMICOLON [ EOF CN_TYPE_SYNONYM CN_SPEC CN_REQUIRES CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE CN_ACCESSES ]
##
## The known suffix of the stack is as follows:
## CN_ACCESSES separated_nonempty_list(COMMA,cn_variable)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production separated_nonempty_list(COMMA,cn_variable) -> UNAME TYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

fundef_spec: CN_LIFT_FUNCTION LNAME TYPE SEMICOLON WHILE
##
## Ends in an error in state: 1641.
##
## function_spec -> option(__anonymous_0) option(accesses_or_function) . option(requires_clauses) option(ensures_clauses) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## option(__anonymous_0) option(accesses_or_function)
##

parsing "function_spec": seen "option(trusted) option(accesses_or_function)", expecting "option(requires_clauses) option(ensures_clauses)"

loop_spec: CN_INV CN_TAKE WHILE
##
## Ends in an error in state: 1643.
##
## condition -> CN_TAKE . UNAME VARIABLE EQ resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
## condition -> CN_TAKE . LNAME VARIABLE EQ resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
## condition -> CN_TAKE . UNAME TYPE EQ resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
## condition -> CN_TAKE . LNAME TYPE EQ resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE UNAME WHILE
##
## Ends in an error in state: 1644.
##
## condition -> CN_TAKE UNAME . VARIABLE EQ resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
## condition -> CN_TAKE UNAME . TYPE EQ resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH WHILE
##
## Ends in an error in state: 1647.
##
## resource -> CN_EACH . LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
## resource -> CN_EACH . LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
## resource -> CN_EACH . LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
## resource -> CN_EACH . LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN WHILE
##
## Ends in an error in state: 1648.
##
## resource -> CN_EACH LPAREN . base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
## resource -> CN_EACH LPAREN . base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
## resource -> CN_EACH LPAREN . base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
## resource -> CN_EACH LPAREN . base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID WHILE
##
## Ends in an error in state: 1649.
##
## resource -> CN_EACH LPAREN base_type . UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
## resource -> CN_EACH LPAREN base_type . LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
## resource -> CN_EACH LPAREN base_type . UNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
## resource -> CN_EACH LPAREN base_type . LNAME TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME WHILE
##
## Ends in an error in state: 1650.
##
## resource -> CN_EACH LPAREN base_type UNAME . VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
## resource -> CN_EACH LPAREN base_type UNAME . TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE SEMICOLON CN_CONSTANT COMMA
##
## Ends in an error in state: 1653.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr . RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_BLOCK COMMA
##
## Ends in an error in state: 1656.
##
## resource -> CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 852, spurious reduction of production pred -> CN_BLOCK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE SEMICOLON CN_CONSTANT COMMA
##
## Ends in an error in state: 1663.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr . RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID UNAME TYPE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_BLOCK COMMA
##
## Ends in an error in state: 1666.
##
## resource -> CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type UNAME TYPE SEMICOLON expr RPAREN LBRACE pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 852, spurious reduction of production pred -> CN_BLOCK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME WHILE
##
## Ends in an error in state: 1671.
##
## resource -> CN_EACH LPAREN base_type LNAME . VARIABLE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
## resource -> CN_EACH LPAREN base_type LNAME . TYPE SEMICOLON expr RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE SEMICOLON CN_CONSTANT COMMA
##
## Ends in an error in state: 1674.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr . RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME VARIABLE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_BLOCK COMMA
##
## Ends in an error in state: 1677.
##
## resource -> CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME VARIABLE SEMICOLON expr RPAREN LBRACE pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 852, spurious reduction of production pred -> CN_BLOCK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE SEMICOLON CN_CONSTANT COMMA
##
## Ends in an error in state: 1684.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr . RPAREN LBRACE pred LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_EACH LPAREN CN_ALLOC_ID LNAME TYPE SEMICOLON CN_CONSTANT RPAREN LBRACE CN_BLOCK COMMA
##
## Ends in an error in state: 1687.
##
## resource -> CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN RBRACE [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_EACH LPAREN base_type LNAME TYPE SEMICOLON expr RPAREN LBRACE pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 852, spurious reduction of production pred -> CN_BLOCK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME TYPE EQ CN_BLOCK COMMA
##
## Ends in an error in state: 1694.
##
## resource -> pred . LPAREN loption(separated_nonempty_list(COMMA,expr)) RPAREN [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## pred
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 852, spurious reduction of production pred -> CN_BLOCK
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_TAKE LNAME WHILE
##
## Ends in an error in state: 1702.
##
## condition -> CN_TAKE LNAME . VARIABLE EQ resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
## condition -> CN_TAKE LNAME . TYPE EQ resource SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_LET WHILE
##
## Ends in an error in state: 1711.
##
## condition -> CN_LET . UNAME VARIABLE EQ expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
## condition -> CN_LET . LNAME VARIABLE EQ expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
## condition -> CN_LET . UNAME TYPE EQ expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
## condition -> CN_LET . LNAME TYPE EQ expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_LET UNAME WHILE
##
## Ends in an error in state: 1712.
##
## condition -> CN_LET UNAME . VARIABLE EQ expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
## condition -> CN_LET UNAME . TYPE EQ expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_LET UNAME VARIABLE EQ CN_CONSTANT RPAREN
##
## Ends in an error in state: 1715.
##
## condition -> CN_LET UNAME VARIABLE EQ expr . SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_LET UNAME TYPE EQ CN_CONSTANT RPAREN
##
## Ends in an error in state: 1719.
##
## condition -> CN_LET UNAME TYPE EQ expr . SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_LET LNAME WHILE
##
## Ends in an error in state: 1721.
##
## condition -> CN_LET LNAME . VARIABLE EQ expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
## condition -> CN_LET LNAME . TYPE EQ expr SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_LET LNAME VARIABLE EQ CN_CONSTANT RPAREN
##
## Ends in an error in state: 1724.
##
## condition -> CN_LET LNAME VARIABLE EQ expr . SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_LET LNAME TYPE EQ CN_CONSTANT RPAREN
##
## Ends in an error in state: 1728.
##
## condition -> CN_LET LNAME TYPE EQ expr . SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_CONSTANT SEMICOLON WHILE
##
## Ends in an error in state: 1731.
##
## nonempty_list(condition) -> condition . [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
## nonempty_list(condition) -> condition . nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_ENSURES CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_CONSTANT RPAREN
##
## Ends in an error in state: 1733.
##
## condition -> assert_expr . SEMICOLON [ UNAME TILDE STRUCT STAR SIZEOF RETURN OFFSETOF MINUS LPAREN LNAME LBRACK LBRACE IF EOF DEFAULT CONSTANT CN_TYPE_SYNONYM CN_TRUE CN_TAKE CN_SPEC CN_PREDICATE CN_NULL CN_MEMBER_SHIFT CN_MATCH CN_LET CN_LEMMA CN_GOOD CN_FUNCTION CN_FALSE CN_ENSURES CN_EACH CN_DATATYPE CN_CONSTANT CN_ARRAY_SHIFT BANG AMPERSAND ]
##
## The known suffix of the stack is as follows:
## assert_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1505, spurious reduction of production assert_expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC UNAME TYPE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1748.
##
## cn_fun_spec -> CN_SPEC UNAME TYPE LPAREN cn_args . RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC UNAME TYPE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC LNAME WHILE
##
## Ends in an error in state: 1752.
##
## cn_fun_spec -> CN_SPEC LNAME . VARIABLE LPAREN cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_fun_spec -> CN_SPEC LNAME . TYPE LPAREN cn_args RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC LNAME VARIABLE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1755.
##
## cn_fun_spec -> CN_SPEC LNAME VARIABLE LPAREN cn_args . RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC LNAME VARIABLE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_SPEC LNAME TYPE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1761.
##
## cn_fun_spec -> CN_SPEC LNAME TYPE LPAREN cn_args . RPAREN SEMICOLON function_spec [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_SPEC LNAME TYPE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LBRACK UNAME TYPE SEMICOLON
##
## Ends in an error in state: 1767.
##
## cn_attrs -> LBRACK loption(separated_nonempty_list(COMMA,cn_variable)) . RBRACK [ VOID UNAME STRUCT LPAREN LNAME LBRACE CN_TUPLE CN_SET CN_REAL CN_POINTER CN_MAP CN_LIST CN_INTEGER CN_DATATYPE CN_BOOL CN_BITS CN_ALLOC_ID ]
##
## The known suffix of the stack is as follows:
## LBRACK loption(separated_nonempty_list(COMMA,cn_variable))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 13, spurious reduction of production separated_nonempty_list(COMMA,cn_variable) -> UNAME TYPE
## In state 16, spurious reduction of production loption(separated_nonempty_list(COMMA,cn_variable)) -> separated_nonempty_list(COMMA,cn_variable)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1775.
##
## cn_predicate -> CN_PREDICATE cn_attrs cn_pred_output UNAME VARIABLE LPAREN cn_args . RPAREN cn_option_pred_clauses [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_PREDICATE cn_attrs cn_pred_output UNAME VARIABLE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE RETURN WHILE
##
## Ends in an error in state: 1778.
##
## clause -> RETURN . expr [ SEMICOLON ]
## clause -> RETURN . [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## RETURN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_CONSTANT COMMA
##
## Ends in an error in state: 1782.
##
## clauses -> IF LPAREN expr . RPAREN LBRACE clause SEMICOLON RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE WHILE
##
## Ends in an error in state: 1785.
##
## clause -> CN_TAKE . UNAME VARIABLE EQ resource SEMICOLON clause [ SEMICOLON ]
## clause -> CN_TAKE . LNAME VARIABLE EQ resource SEMICOLON clause [ SEMICOLON ]
## clause -> CN_TAKE . UNAME TYPE EQ resource SEMICOLON clause [ SEMICOLON ]
## clause -> CN_TAKE . LNAME TYPE EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE UNAME WHILE
##
## Ends in an error in state: 1786.
##
## clause -> CN_TAKE UNAME . VARIABLE EQ resource SEMICOLON clause [ SEMICOLON ]
## clause -> CN_TAKE UNAME . TYPE EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET WHILE
##
## Ends in an error in state: 1791.
##
## clause -> CN_LET . UNAME VARIABLE EQ expr SEMICOLON clause [ SEMICOLON ]
## clause -> CN_LET . LNAME VARIABLE EQ expr SEMICOLON clause [ SEMICOLON ]
## clause -> CN_LET . UNAME TYPE EQ expr SEMICOLON clause [ SEMICOLON ]
## clause -> CN_LET . LNAME TYPE EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME WHILE
##
## Ends in an error in state: 1792.
##
## clause -> CN_LET UNAME . VARIABLE EQ expr SEMICOLON clause [ SEMICOLON ]
## clause -> CN_LET UNAME . TYPE EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME VARIABLE EQ CN_CONSTANT RPAREN
##
## Ends in an error in state: 1795.
##
## clause -> CN_LET UNAME VARIABLE EQ expr . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME VARIABLE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE ASSERT LPAREN CN_CONSTANT COMMA
##
## Ends in an error in state: 1799.
##
## clause -> ASSERT LPAREN assert_expr . RPAREN SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## ASSERT LPAREN assert_expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1505, spurious reduction of production assert_expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET UNAME TYPE EQ CN_CONSTANT RPAREN
##
## Ends in an error in state: 1806.
##
## clause -> CN_LET UNAME TYPE EQ expr . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET UNAME TYPE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME WHILE
##
## Ends in an error in state: 1809.
##
## clause -> CN_LET LNAME . VARIABLE EQ expr SEMICOLON clause [ SEMICOLON ]
## clause -> CN_LET LNAME . TYPE EQ expr SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME VARIABLE EQ CN_CONSTANT RPAREN
##
## Ends in an error in state: 1812.
##
## clause -> CN_LET LNAME VARIABLE EQ expr . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME VARIABLE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_LET LNAME TYPE EQ CN_CONSTANT RPAREN
##
## Ends in an error in state: 1817.
##
## clause -> CN_LET LNAME TYPE EQ expr . SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_LET LNAME TYPE EQ expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE CN_TAKE LNAME WHILE
##
## Ends in an error in state: 1826.
##
## clause -> CN_TAKE LNAME . VARIABLE EQ resource SEMICOLON clause [ SEMICOLON ]
## clause -> CN_TAKE LNAME . TYPE EQ resource SEMICOLON clause [ SEMICOLON ]
##
## The known suffix of the stack is as follows:
## CN_TAKE LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE IF LPAREN CN_CONSTANT RPAREN LBRACE RETURN CN_CONSTANT RPAREN
##
## Ends in an error in state: 1837.
##
## clauses -> IF LPAREN expr RPAREN LBRACE clause . SEMICOLON RBRACE ELSE LBRACE clauses RBRACE [ RBRACE ]
##
## The known suffix of the stack is as follows:
## IF LPAREN expr RPAREN LBRACE clause
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
## In state 1779, spurious reduction of production clause -> RETURN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_PREDICATE CN_ALLOC_ID UNAME VARIABLE LPAREN RPAREN LBRACE RETURN CN_CONSTANT RPAREN
##
## Ends in an error in state: 1844.
##
## clauses -> clause . SEMICOLON [ RBRACE ]
##
## The known suffix of the stack is as follows:
## clause
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
## In state 1779, spurious reduction of production clause -> RETURN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA WHILE
##
## Ends in an error in state: 1849.
##
## cn_lemma -> CN_LEMMA . UNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_lemma -> CN_LEMMA . LNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_lemma -> CN_LEMMA . UNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_lemma -> CN_LEMMA . LNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA UNAME WHILE
##
## Ends in an error in state: 1850.
##
## cn_lemma -> CN_LEMMA UNAME . VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_lemma -> CN_LEMMA UNAME . TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA UNAME VARIABLE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1853.
##
## cn_lemma -> CN_LEMMA UNAME VARIABLE LPAREN cn_args . RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME VARIABLE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA UNAME VARIABLE LPAREN RPAREN CN_REQUIRES CN_CONSTANT SEMICOLON EOF
##
## Ends in an error in state: 1856.
##
## cn_lemma -> CN_LEMMA UNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) . CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1731, spurious reduction of production nonempty_list(condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA UNAME TYPE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1861.
##
## cn_lemma -> CN_LEMMA UNAME TYPE LPAREN cn_args . RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME TYPE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA UNAME TYPE LPAREN RPAREN CN_REQUIRES CN_CONSTANT SEMICOLON EOF
##
## Ends in an error in state: 1864.
##
## cn_lemma -> CN_LEMMA UNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) . CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA UNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1731, spurious reduction of production nonempty_list(condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA LNAME WHILE
##
## Ends in an error in state: 1867.
##
## cn_lemma -> CN_LEMMA LNAME . VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_lemma -> CN_LEMMA LNAME . TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA LNAME VARIABLE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1870.
##
## cn_lemma -> CN_LEMMA LNAME VARIABLE LPAREN cn_args . RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME VARIABLE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA LNAME VARIABLE LPAREN RPAREN CN_REQUIRES CN_CONSTANT SEMICOLON EOF
##
## Ends in an error in state: 1873.
##
## cn_lemma -> CN_LEMMA LNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) . CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME VARIABLE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1731, spurious reduction of production nonempty_list(condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA LNAME TYPE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1878.
##
## cn_lemma -> CN_LEMMA LNAME TYPE LPAREN cn_args . RPAREN CN_REQUIRES nonempty_list(condition) CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME TYPE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_LEMMA LNAME TYPE LPAREN RPAREN CN_REQUIRES CN_CONSTANT SEMICOLON EOF
##
## Ends in an error in state: 1881.
##
## cn_lemma -> CN_LEMMA LNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition) . CN_ENSURES nonempty_list(condition) [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_LEMMA LNAME TYPE LPAREN cn_args RPAREN CN_REQUIRES nonempty_list(condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1731, spurious reduction of production nonempty_list(condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION WHILE
##
## Ends in an error in state: 1884.
##
## cn_function -> CN_FUNCTION . cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION . cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION . cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION . cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LBRACK RBRACK WHILE
##
## Ends in an error in state: 1885.
##
## cn_function -> CN_FUNCTION cn_attrs . LPAREN base_type RPAREN UNAME VARIABLE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs . LPAREN base_type RPAREN LNAME VARIABLE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs . LPAREN base_type RPAREN UNAME TYPE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs . LPAREN base_type RPAREN LNAME TYPE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN WHILE
##
## Ends in an error in state: 1886.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN . base_type RPAREN UNAME VARIABLE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs LPAREN . base_type RPAREN LNAME VARIABLE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs LPAREN . base_type RPAREN UNAME TYPE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs LPAREN . base_type RPAREN LNAME TYPE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID WHILE
##
## Ends in an error in state: 1887.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type . RPAREN UNAME VARIABLE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type . RPAREN LNAME VARIABLE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type . RPAREN UNAME TYPE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type . RPAREN LNAME TYPE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN WHILE
##
## Ends in an error in state: 1888.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN . UNAME VARIABLE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN . LNAME VARIABLE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN . UNAME TYPE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN . LNAME TYPE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN UNAME WHILE
##
## Ends in an error in state: 1889.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME . VARIABLE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME . TYPE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN UNAME VARIABLE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1892.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN cn_args . RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME VARIABLE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN LNAME TYPE LPAREN RPAREN LBRACE CN_CONSTANT RPAREN
##
## Ends in an error in state: 1895.
##
## cn_option_func_body -> LBRACE expr . RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## LBRACE expr
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1079, spurious reduction of production unary_expr -> prim_expr
## In state 1076, spurious reduction of production mul_expr -> unary_expr
## In state 1099, spurious reduction of production add_expr -> mul_expr
## In state 1115, spurious reduction of production rel_expr -> add_expr
## In state 1077, spurious reduction of production bool_and_expr -> rel_expr
## In state 1112, spurious reduction of production bool_implies_expr -> bool_and_expr
## In state 1142, spurious reduction of production bool_or_expr -> bool_implies_expr
## In state 1109, spurious reduction of production list_expr -> bool_or_expr
## In state 1104, spurious reduction of production expr_without_let -> list_expr
## In state 1143, spurious reduction of production expr -> expr_without_let
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN UNAME TYPE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1900.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN cn_args . RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN UNAME TYPE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN LNAME WHILE
##
## Ends in an error in state: 1903.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME . VARIABLE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME . TYPE LPAREN cn_args RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN LNAME VARIABLE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1906.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN cn_args . RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME VARIABLE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_FUNCTION LPAREN CN_ALLOC_ID RPAREN LNAME TYPE LPAREN CN_ALLOC_ID LNAME TYPE RBRACE
##
## Ends in an error in state: 1911.
##
## cn_function -> CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN cn_args . RPAREN cn_option_func_body [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_FUNCTION cn_attrs LPAREN base_type RPAREN LNAME TYPE LPAREN cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE WHILE
##
## Ends in an error in state: 1914.
##
## cn_datatype -> CN_DATATYPE . UNAME VARIABLE LBRACE cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_datatype -> CN_DATATYPE . LNAME VARIABLE LBRACE cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_datatype -> CN_DATATYPE . UNAME TYPE LBRACE cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_datatype -> CN_DATATYPE . LNAME TYPE LBRACE cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE UNAME WHILE
##
## Ends in an error in state: 1915.
##
## cn_datatype -> CN_DATATYPE UNAME . VARIABLE LBRACE cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_datatype -> CN_DATATYPE UNAME . TYPE LBRACE cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME WHILE
##
## Ends in an error in state: 1918.
##
## cn_cons_case -> UNAME . VARIABLE LBRACE cn_args RBRACE [ RBRACE COMMA ]
## cn_cons_case -> UNAME . TYPE LBRACE cn_args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME VARIABLE LBRACE CN_ALLOC_ID LNAME TYPE RPAREN
##
## Ends in an error in state: 1921.
##
## cn_cons_case -> UNAME VARIABLE LBRACE cn_args . RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME VARIABLE LBRACE cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE UNAME TYPE LBRACE CN_ALLOC_ID LNAME TYPE RPAREN
##
## Ends in an error in state: 1925.
##
## cn_cons_case -> UNAME TYPE LBRACE cn_args . RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## UNAME TYPE LBRACE cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME WHILE
##
## Ends in an error in state: 1927.
##
## cn_cons_case -> LNAME . VARIABLE LBRACE cn_args RBRACE [ RBRACE COMMA ]
## cn_cons_case -> LNAME . TYPE LBRACE cn_args RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME VARIABLE LBRACE CN_ALLOC_ID LNAME TYPE RPAREN
##
## Ends in an error in state: 1930.
##
## cn_cons_case -> LNAME VARIABLE LBRACE cn_args . RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME VARIABLE LBRACE cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME TYPE LBRACE CN_ALLOC_ID LNAME TYPE RPAREN
##
## Ends in an error in state: 1934.
##
## cn_cons_case -> LNAME TYPE LBRACE cn_args . RBRACE [ RBRACE COMMA ]
##
## The known suffix of the stack is as follows:
## LNAME TYPE LBRACE cn_args
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1024, spurious reduction of production separated_nonempty_list(COMMA,base_type_cn_variable) -> base_type LNAME TYPE
## In state 1619, spurious reduction of production loption(separated_nonempty_list(COMMA,base_type_cn_variable)) -> separated_nonempty_list(COMMA,base_type_cn_variable)
## In state 1620, spurious reduction of production cn_args -> loption(separated_nonempty_list(COMMA,base_type_cn_variable))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME TYPE LBRACE LNAME TYPE LBRACE RBRACE WHILE
##
## Ends in an error in state: 1940.
##
## separated_nonempty_list(COMMA,cn_cons_case) -> cn_cons_case . [ RBRACE ]
## separated_nonempty_list(COMMA,cn_cons_case) -> cn_cons_case . COMMA separated_nonempty_list(COMMA,cn_cons_case) [ RBRACE ]
##
## The known suffix of the stack is as follows:
## cn_cons_case
##

<YOUR SYNTAX ERROR MESSAGE HERE>

cn_toplevel: CN_DATATYPE LNAME WHILE
##
## Ends in an error in state: 1947.
##
## cn_datatype -> CN_DATATYPE LNAME . VARIABLE LBRACE cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
## cn_datatype -> CN_DATATYPE LNAME . TYPE LBRACE cn_cons_cases RBRACE [ EOF CN_TYPE_SYNONYM CN_SPEC CN_PREDICATE CN_LEMMA CN_FUNCTION CN_DATATYPE ]
##
## The known suffix of the stack is as follows:
## CN_DATATYPE LNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

fundef_spec: CN_TRUSTED SEMICOLON CN_TYPE_SYNONYM
##
## Ends in an error in state: 1969.
##
## fundef_spec -> function_spec . EOF [ # ]
##
## The known suffix of the stack is as follows:
## function_spec
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1626, spurious reduction of production option(accesses_or_function) ->
## In state 1641, spurious reduction of production option(requires_clauses) ->
## In state 1736, spurious reduction of production option(ensures_clauses) ->
## In state 1739, spurious reduction of production function_spec -> option(__anonymous_0) option(accesses_or_function) option(requires_clauses) option(ensures_clauses)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

loop_spec: CN_INV CN_CONSTANT SEMICOLON CN_TYPE_SYNONYM
##
## Ends in an error in state: 1973.
##
## loop_spec -> CN_INV nonempty_list(condition) . EOF [ # ]
##
## The known suffix of the stack is as follows:
## CN_INV nonempty_list(condition)
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 1731, spurious reduction of production nonempty_list(condition) -> condition
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE BOOL SEMICOLON WHILE
##
## Ends in an error in state: 1987.
##
## declaration_list -> declaration_list . no_leading_attribute_declaration [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## option(declaration_list) -> declaration_list . [ LBRACES LBRACE CERB_MAGIC ]
##
## The known suffix of the stack is as follows:
## declaration_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: CERB_MAGIC WHILE
##
## Ends in an error in state: 1990.
##
## external_declaration_list -> external_declaration_list . external_declaration [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## translation_unit -> external_declaration_list . EOF [ # ]
##
## The known suffix of the stack is as follows:
## external_declaration_list
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: BOOL LNAME TYPE RPAREN
##
## Ends in an error in state: 1994.
##
## function_definition1 -> declaration_specifiers declarator_varname . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## init_declarator(declarator_varname) -> declarator_varname . [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . asm_register [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . EQ initializer_ [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . asm_register EQ initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## declaration_specifiers declarator_varname
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 374, spurious reduction of production direct_declarator -> general_identifier
## In state 406, spurious reduction of production declarator -> direct_declarator
## In state 438, spurious reduction of production declarator_varname -> declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS RBRACK RBRACK WHILE
##
## Ends in an error in state: 1996.
##
## attribute_declaration -> attribute_specifier_sequence . SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## attribute_specifier_sequence -> attribute_specifier_sequence . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR BOOL AUTO ATOMIC ALIGNAS ]
## declaration -> attribute_specifier_sequence . declaration_specifiers option(init_declarator_list(declarator_varname)) SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## declaration -> attribute_specifier_sequence . declaration_specifiers_typedef option(init_declarator_list(declarator_typedefname)) SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACK_LBRACK INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## function_definition1 -> attribute_specifier_sequence . declaration_specifiers declarator_varname [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence
##

<YOUR SYNTAX ERROR MESSAGE HERE>

translation_unit: LBRACK_LBRACK ALIGNAS RBRACK RBRACK BOOL LNAME TYPE RPAREN
##
## Ends in an error in state: 1998.
##
## function_definition1 -> attribute_specifier_sequence declaration_specifiers declarator_varname . [ VOLATILE VOID UNSIGNED UNION UNAME TYPEOF TYPEDEF THREAD_LOCAL STRUCT STATIC_ASSERT STATIC SIGNED SHORT RESTRICT REGISTER NORETURN LONG LNAME LBRACES LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMPLEX CHAR CERB_MAGIC BOOL AUTO ATOMIC ALIGNAS ]
## init_declarator(declarator_varname) -> declarator_varname . [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . asm_register [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . EQ initializer_ [ SEMICOLON COMMA ]
## init_declarator(declarator_varname) -> declarator_varname . asm_register EQ initializer_ [ SEMICOLON COMMA ]
##
## The known suffix of the stack is as follows:
## attribute_specifier_sequence declaration_specifiers declarator_varname
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 374, spurious reduction of production direct_declarator -> general_identifier
## In state 406, spurious reduction of production declarator -> direct_declarator
## In state 438, spurious reduction of production declarator_varname -> declarator
##

<YOUR SYNTAX ERROR MESSAGE HERE>
