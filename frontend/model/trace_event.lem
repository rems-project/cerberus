open import Pervasives Mem
import Ctype

type thread_id = nat

type trace_event =
  | ME_function_call of
      Symbol.sym * list mem_value

  | ME_function_return of
      Symbol.sym * maybe mem_value

  | ME_allocate_object of
         thread_id      (* the allocating thread *)
       * Symbol.prefix  (* symbols coming from the Core/C program,
                           for debugging purpose *)
       * integer_value  (* alignment constraint *)
       * Ctype.ctype    (* type of the allocation *)
       * maybe mem_value(* optional initialisation value
                         * if provided the allocation is made read-only *)
       * pointer_value

  | ME_allocate_region of
        thread_id       (* the allocating thread *)
       * Symbol.prefix  (* symbols coming from the Core/C program,
                           for debugging purpose *)
       * integer_value  (* alignment constraint *)
       * integer_value  (* size *)
       * pointer_value

  | ME_kill of
      Loc.t
       * bool
       * pointer_value

  | ME_load of
      Loc.t
       * maybe string (* prefix *)
       * Ctype.ctype
       * pointer_value
       * mem_value

  | ME_store of
      Loc.t
       * maybe string (* prefix *)
       * Ctype.ctype
       * (*is_locking *) bool
       * pointer_value
       * mem_value

  | ME_eff_array_shift_ptrval of
      pointer_value
       * Ctype.ctype
       * integer_value
       * pointer_value

  | ME_eff_member_shift_ptrval of
      Symbol.sym
       * Symbol.identifier
       * pointer_value
       * pointer_value

(*
  | ME_realloc of
      Ctype.thread_id
       * integer_value
       * pointer_value
       * integer_value
       * pointer_value
*)

